#########################################Script 1 - Demographic exploration full sample#####################################################################

#########################
# load in data sets
#############################

##load in complete 01

demographic01_data <- xap.read_table("complete01_caboodle_patient_demographics") # read in variables table for all patients

# check data has loaded
head(demographic01_data)
dim(demographic01_data)
tail(demographic01_data)

##load in complete 02

demographic02_data <- xap.read_table("complete02_caboodle_patient_demographics") # read in variables table for all patients

# check data has loaded
head(demographic02_data)
dim(demographic02_data)
tail(demographic02_data)

##load in partial

demographic_partial <- xap.read_table("partial_caboodle_patient_demographics") # read in variables table for all patients

# check data has loaded
head(demographic_partial)
dim(demographic_partial)
tail(demographic_partial)

##########################
##join datasets together
#########################

demographic_data1 <- rbind(demographic01_data, demographic02_data)

head(demographic_data1)
dim(demographic_data1)
tail(demographic_data1)

demographic_data <- rbind(demographic_data1, demographic_partial)

str(demographic_data)

####################
# explore gender
######################
t.gender <- table(demographic_data$sex)

addmargins(t.gender)
round(prop.table(t.gender)*100, 2) #to give percentage

##############################
# explore ethnicity
############################

t.ethnicity <- table(demographic_data$ethnicity_name)

addmargins(t.ethnicity)
round(prop.table(t.ethnicity)*100, 2) #to give percentage

### change NA to unknown

demographic_data_eth <- demographic_data %>%
    replace_na(list(ethnicity_name = 'Unknown'))
    

# draw graph
ggplot(demographic_data_eth, aes(y = demographic_data_eth$ethnicity_name, fill=demographic_data_eth$ethnicity_name)) + geom_bar() +
ggtitle("Patient ethnicity") + # add a title
xlab('Number of patients') + ylab('Ethnicity') + # add axis names
theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position="none") + # position and style of title and removing legend
scale_fill_viridis_d() 


###############################
# exploring age
###################################

##load in data set complete 01
age01_data <- xap.read_table("complete01_wp2_physio_details_check")
str(age01_data)

##load in data set complete 02
age02_data <- xap.read_table("complete02_wp2_physio_details_check")
str(age02_data)

##load in partial
age_partial <- xap.read_table("partial_wp2_physio_details_check")
str(age_partial)

#### join age data sets

age_data1 <- rbind(age01_data, age02_data)
head(age_data1)
str(age_data1)

age_data <- rbind(age_data1, age_partial)
str(age_data)

class (age_data$age_in_months) #this is a character needs to be integer
age_data[c(3,4,6)] <- lapply(age_data[c(3,4,6)], as.integer)
str(age_data)

# summary of age

# draw histogram checking for normal distribution
ggplot(data=age_data, aes(age_data$age_in_months, fill=age_data$age_in_months)) + 
  geom_histogram(binwidth = 5) +
   ggtitle("Histogram of patient age in months") + # add a title
    xlab('Age in months') + ylab('Number of patients') + # add axis names
theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position="none") +
scale_fill_viridis_d()

# mean(age_data$age_in_months)
median(age_data$age_in_months)
quantile(age_data$age_in_months, 0.25)
quantile(age_data$age_in_months, 0.75)
range(age_data$age_in_months)
  
# create variable of age catogories 

age_data <- age_data %>% 
  mutate(agegroup = case_when(
        age_in_months <1   ~"<1",
      age_in_months >= 1 & age_in_months <= 11 ~ "1-11",
      age_in_months > 11 & age_in_months <= 23 ~ "12-23",
      age_in_months >= 24             ~ "24-60"))
    
    age_data$agegroup = factor(
      age_data$agegroup,
      level = c("<1", "1-11","12-23", "24-60"))
  
t.agegroup <- table(age_data$agegroup)
print(t.agegroup)

str(age_data)

#draw graph

ggplot(age_data, aes(age_data$agegroup, fill=age_data$agegroup)) +
geom_bar() + 
ggtitle("Patients age") + # add a title
    xlab('Age (months)') + ylab('Number of patients') + # add axis names
    ylim(0,300) +
theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position="none") +
scale_fill_viridis_d()

####create new variable of age catogories for HR Z scores

# create variable of age catogories 

age_data_hr <- age_data %>% 
  mutate(agegroup = case_when(
        age_in_months <3   ~"1",
      age_in_months >= 3 & age_in_months <6 ~ "2",
      age_in_months >= 6 & age_in_months <9 ~ "3",
      age_in_months >= 9 & age_in_months <12 ~ "4",
      age_in_months >= 12 & age_in_months <18 ~ "5",
      age_in_months >= 18 & age_in_months <24 ~ "6",
      age_in_months >= 24 & age_in_months <36 ~ "7",
      age_in_months >= 36 & age_in_months <48 ~ "8",
      age_in_months >= 48             ~ "9"))
    

str(age_data_hr)

hr_age <- select(age_data_hr, project_id, age_in_months, agegroup)
str(hr_age)

write.csv(hr_age, "~/files/datafiles/hr_age1.csv")

######################################
# explore episodes, diagnosis
######################################

## load in data set complete 01
episode01_data <- xap.read_table("complete01_caboodle_patient_episodes") # read in variables table for all patients

# check data has loaded
head(episode01_data)
dim(episode01_data)
tail(episode01_data)

##load in data set complete 02

episode02_data <- xap.read_table("complete02_caboodle_patient_episodes") # read in variables table for all patients

# check data has loaded
head(episode02_data)
dim(episode02_data)
tail(episode02_data)

##load in partial

episode_partial <- xap.read_table("partial_caboodle_patient_episodes") # read in variables table for all patients

# check data has loaded
str(episode_partial)

##join complete data sets

episode_data1 <- rbind(episode01_data, episode02_data)
dim(episode_data1)
str(episode_data1)
head(episode_data1)
tail(episode_data1)

##join to parital
episode_data <- rbind(episode_data1, episode_partial)
str(episode_data)

# need to remove duplicates
episode_data <- distinct(episode_data, episode_data$project_id, .keep_all = TRUE)
dim(episode_data)
str(episode_data)

##select only columns want
episode_data1 <- select(episode_data, project_id, start_datetime, end_datetime, primary_diagnosis_code, primary_diagnosis_name)

unique(episode_data1$primary_diagnosis_name)
str(episode_data1)

##change NA's to unknown
episode_data1[is.na(episode_data1)] <- 'unknown'
is.na(episode_data1)

#####################################
# create individual diagnosis variables
#####################################

diagnosis_data <- episode_data1 %>%    #seperates out and changes diagnosis groups
mutate(Respiratory= ifelse(grepl('^J1', episode_data1$primary_diagnosis_code) | grepl('^J2', episode_data1$primary_diagnosis_code) | grepl('^J4', episode_data1$primary_diagnosis_code) | grepl('^J6', episode_data1$primary_diagnosis_code) | grepl('^J8', episode_data1$primary_diagnosis_code) | grepl('^J9', episode_data1$primary_diagnosis_code) | episode_data1$primary_diagnosis_code == "P271" | episode_data1$primary_diagnosis_code =="P240" | episode_data1$primary_diagnosis_code == "P229" | episode_data1$primary_diagnosis_code == "P285" | episode_data1$primary_diagnosis_code == "Q330" | episode_data1$primary_diagnosis_code == "R068" | episode_data1$primary_diagnosis_code == "R092" | episode_data1$primary_diagnosis_code == "P284"| episode_data1$primary_diagnosis_code == "P288", 1, 0),
    Renal= ifelse(episode_data1$primary_diagnosis_code == "N10X" | episode_data1$primary_diagnosis_code == "Q641", 1, 0),
    Musculoskeletal= ifelse(grepl('^M', episode_data1$primary_diagnosis_code), 1, 0),
    Hepatic= ifelse(episode_data1$primary_diagnosis_code == "K270", 1, 0),
    Endocrine= ifelse(grepl('^E', episode_data1$primary_diagnosis_code) | episode_data1$primary_diagnosis_code == "P748", 1, 0),
    Haematology_oncology= ifelse(grepl('^C', episode_data1$primary_diagnosis_code) | episode_data1$primary_diagnosis_code == "D151" | episode_data1$primary_diagnosis_code == "D761" | episode_data1$primary_diagnosis_code == "D487" | episode_data1$primary_diagnosis_code == "D71X", 1, 0),
    Cardiovascular = ifelse(grepl('^Q2', episode_data1$primary_diagnosis_code) | grepl('^I2', episode_data1$primary_diagnosis_code ) | grepl('^I3', episode_data1$primary_diagnosis_code) | grepl('^I4', episode_data1$primary_diagnosis_code) | grepl('^I7', episode_data1$primary_diagnosis_code) | episode_data1$primary_diagnosis_code == "I500" | episode_data1$primary_diagnosis_code == "I971" | episode_data1$primary_diagnosis_code == "T828" | episode_data1$primary_diagnosis_code == "P291" | episode_data1$primary_diagnosis_code == "P293" | episode_data1$primary_diagnosis_code == "P298", 1, 0),
    Neurology_neurosurgery= ifelse(grepl('^G', episode_data1$primary_diagnosis_code) | grepl('^S', episode_data1$primary_diagnosis_code) | grepl('^P9', episode_data1$primary_diagnosis_code) | grepl('^I6', episode_data1$primary_diagnosis_code) | episode_data1$primary_diagnosis_code == "T850" | episode_data1$primary_diagnosis_code == "P525" | episode_data1$primary_diagnosis_code == "Q858" | episode_data1$primary_diagnosis_code == "R568" | episode_data1$primary_diagnosis_code == "R55X" | episode_data1$primary_diagnosis_code == "P252" | episode_data1$primary_diagnosis_code == "P219", 1, 0),
    Gastroenterology= ifelse(grepl('^K', episode_data1$primary_diagnosis_code) | grepl('^Q7', episode_data1$primary_diagnosis_code) | episode_data1$primary_diagnosis_code == "R633" | episode_data1$primary_diagnosis_code == "A081" | episode_data1$primary_diagnosis_code == "Q423" | episode_data1$primary_diagnosis_code == "R11X" | episode_data1$primary_diagnosis_code == "Q390" | episode_data1$primary_diagnosis_code == "Q393" | episode_data1$primary_diagnosis_code == "Q411" | episode_data1$primary_diagnosis_code == "T286" | episode_data1$primary_diagnosis_code == "T855" | episode_data1$primary_diagnosis_code == "Q391" | episode_data1$primary_diagnosis_code == "Q392" | episode_data1$primary_diagnosis_code == "P540", 1, 0), 
    Airway= ifelse(grepl('^J3', episode_data1$primary_diagnosis_code) | episode_data1$primary_diagnosis_code == "Q318" | episode_data1$primary_diagnosis_code == "Q320" | episode_data1$primary_diagnosis_code == "Q321" | episode_data1$primary_diagnosis_code == "Q310" | episode_data1$primary_diagnosis_code == "Q311" | episode_data1$primary_diagnosis_code == "R061", 1, 0),
    Sepsis= ifelse(grepl('^A4', episode_data1$primary_diagnosis_code) | episode_data1$primary_diagnosis_code == "P360", 1, 0),
    Other= ifelse(episode_data1$primary_diagnosis_code == "D821" | episode_data1$primary_diagnosis_code == "D180" | episode_data1$primary_diagnosis_code == "U071" | episode_data1$primary_diagnosis_code == "T810" | episode_data1$primary_diagnosis_code == "P398" | episode_data1$primary_diagnosis_code == "T823" | episode_data1$primary_diagnosis_code == "T818" | episode_data1$primary_diagnosis_code == "R560" | episode_data1$primary_diagnosis_code == "T741" | episode_data1$primary_diagnosis_code == "A199" | episode_data1$primary_diagnosis_code == "B349" | episode_data1$primary_diagnosis_code == "T856" | episode_data1$primary_diagnosis_code == "T543"| episode_data1$primary_diagnosis_code == "T813", 1, 0),
    Unknown= ifelse(episode_data1$primary_diagnosis_code == "unknown", 1, 0))

str(diagnosis_data)


# rename so can merge
diagnosis_data$Respiratory <- ifelse(diagnosis_data$Respiratory==1, "Respiratory", NA) 
diagnosis_data$Renal <- ifelse(diagnosis_data$Renal==1, "Renal", NA) 
diagnosis_data$Musculoskeletal <- ifelse(diagnosis_data$Musculoskeletal==1, "Musculoskeletal", NA) 
diagnosis_data$Hepatic <- ifelse(diagnosis_data$Hepatic==1, "Hepatic", NA) 
diagnosis_data$Endocrine <- ifelse(diagnosis_data$Endocrine==1, "Endocrine", NA) 
diagnosis_data$Haematology_oncology <- ifelse(diagnosis_data$Haematology_oncology==1, "Haematology/oncology", NA) 
diagnosis_data$Cardiovascular <- ifelse(diagnosis_data$Cardiovascular==1, "Cardiovascular", NA) 
diagnosis_data$Neurology_neurosurgery <- ifelse(diagnosis_data$Neurology_neurosurgery==1, "Neurology/neurosurgery", NA) 
diagnosis_data$Gastroenterology <- ifelse(diagnosis_data$Gastroenterology==1, "Gastroenterology", NA) 
diagnosis_data$Airway <- ifelse(diagnosis_data$Airway==1, "Airway", NA) 
diagnosis_data$Sepsis <- ifelse(diagnosis_data$Sepsis==1, "Sepsis", NA) 
diagnosis_data$Other <- ifelse(diagnosis_data$Other==1, "Other", NA) 
diagnosis_data$Unknown <- ifelse(diagnosis_data$Unknown==1, "Unknown", NA) 


# need to merge the columns
diagnosis_data1 <- diagnosis_data %>%
  unite("diagnosis", Respiratory:Unknown, na.rm = TRUE)
str(diagnosis_data1)

unique(diagnosis_data1$project_id)

## create table
t.diagnosis <- table(diagnosis_data1$diagnosis)

addmargins(t.diagnosis)
round(prop.table(t.diagnosis)*100, 2)
  
# graph without id linked
ggplot(diagnosis_data1, aes(x=diagnosis_data1$diagnosis, fill=diagnosis_data1$diagnosis)) + 
geom_bar() + # add a title
    xlab('Diagnosis group') + ylab('Number of patients') + # add axis names
      scale_y_continuous(expand = c(0, 0), limits = c(0, 310)) +
theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), axis.text.x=element_text(angle=45, hjust=1), legend.position="none", text = element_text(size = 14)) +
scale_fill_manual(breaks = c("Airway", "Cardiovascular", "Endocrine", "Gastroenterology", "Haematology/oncology", "Musculoskeletal", "Neurology/neurosurgery", "Other", "Renal", "Respiratory", "Sepsis"),
                        values=c("lightblue1", "lightskyblue1", "skyblue1", "skyblue2", "steelblue1", "steelblue3", "steelblue", "royalblue1", "royalblue3", "mediumblue", "royalblue4", "navy"))

##########################################
######create diagnosis subgroups
################################################
diagnosis_data2 <- diagnosis_data %>%
mutate(Congenitalcardiac= ifelse(grepl('^Q2', diagnosis_data$primary_diagnosis_code) | diagnosis_data$primary_diagnosis_code =="T828" | diagnosis_data$primary_diagnosis_code =="I288" | diagnosis_data$primary_diagnosis_code =="I370", 1, 0 ),
        Cardiomyopathy= ifelse(diagnosis_data$primary_diagnosis_code == "I420" | diagnosis_data$primary_diagnosis_code == "I422", 1, 0),
        Endo_myocarditis= ifelse(diagnosis_data$primary_diagnosis_code == "I400" | diagnosis_data$primary_diagnosis_code == "I330", 1, 0),
        Cardiacother= ifelse(diagnosis_data$primary_diagnosis_code == "P291" | diagnosis_data$primary_diagnosis_code == "I313" | diagnosis_data$primary_diagnosis_code == "I460" | diagnosis_data$primary_diagnosis_code == "I251" | diagnosis_data$primary_diagnosis_code == "P298" | diagnosis_data$primary_diagnosis_code == "I971" | diagnosis_data$primary_diagnosis_code == "I712" | diagnosis_data$primary_diagnosis_code == "I710" | diagnosis_data$primary_diagnosis_code =="P293" | diagnosis_data$primary_diagnosis_code =="I460" | diagnosis_data$primary_diagnosis_code =="I272"| diagnosis_data$primary_diagnosis_code == "I500", 1, 0),
        Asthma= ifelse(diagnosis_data$primary_diagnosis_code == "J46X", 1, 0),
        Pneumonia= ifelse(diagnosis_data$primary_diagnosis_code == "J181" | diagnosis_data$primary_diagnosis_code == "J122" | diagnosis_data$primary_diagnosis_code == "J22X" | diagnosis_data$primary_diagnosis_code == "J690" | diagnosis_data$primary_diagnosis_code =="J189", 1, 0),
        ARDS= ifelse(diagnosis_data$primary_diagnosis_code == "J80X", 1, 0),
        Bronchiolitis= ifelse(diagnosis_data$primary_diagnosis_code == "J210" | diagnosis_data$primary_diagnosis_code == "J218", 1, 0),
        MAS= ifelse(diagnosis_data$primary_diagnosis_code == "P240", 1, 0),
        Respfailure= ifelse(diagnosis_data$primary_diagnosis_code == "J9690" | diagnosis_data$primary_diagnosis_code == "P229" | diagnosis_data$primary_diagnosis_code == "P285" | diagnosis_data$primary_diagnosis_code == "J9600" | diagnosis_data$primary_diagnosis_code == "J9601" | diagnosis_data$primary_diagnosis_code =="J9699", 1, 0),
        Respother= ifelse(diagnosis_data$primary_diagnosis_code == "J860" | diagnosis_data$primary_diagnosis_code == "J980" | diagnosis_data$primary_diagnosis_code == "J869" | diagnosis_data$primary_diagnosis_code == "J930" | diagnosis_data$primary_diagnosis_code == "R092" | diagnosis_data$primary_diagnosis_code == "J948" | diagnosis_data$primary_diagnosis_code == "Q330" | diagnosis_data$primary_diagnosis_code == "P284" | diagnosis_data$primary_diagnosis_code == "J848" | diagnosis_data$primary_diagnosis_code == "P271" | diagnosis_data$primary_diagnosis_code == "R068" | diagnosis_data$primary_diagnosis_code == "J985"| diagnosis_data$primary_diagnosis_code =="P288" | diagnosis_data$primary_diagnosis_code =="J988", 1, 0))

str(diagnosis_data2)

##remane so can merge

diagnosis_data2$Congenitalcardiac <- ifelse(diagnosis_data2$Congenitalcardiac==1, "Congenitalcardiac", NA) 
diagnosis_data2$Cardiomyopathy <- ifelse(diagnosis_data2$Cardiomyopathy==1, "Cardiomyopathy", NA) 
diagnosis_data2$Endo_myocarditis <- ifelse(diagnosis_data2$Endo_myocarditis==1, "Endo_myocarditis", NA) 
diagnosis_data2$Cardiacother <- ifelse(diagnosis_data2$Cardiacother==1, "Cardiacother", NA) 
diagnosis_data2$Asthma <- ifelse(diagnosis_data2$Asthma==1, "Asthmatic", NA) 
diagnosis_data2$Pneumonia <- ifelse(diagnosis_data2$Pneumonia==1, "Pneumonia", NA) 
diagnosis_data2$ARDS <- ifelse(diagnosis_data2$ARDS==1, "ARDS", NA) 
diagnosis_data2$Bronchiolitis <- ifelse(diagnosis_data2$Bronchiolitis==1, "Bronchiolitis", NA) 
diagnosis_data2$MAS <- ifelse(diagnosis_data2$MAS==1, "MAS", NA)   
diagnosis_data2$Respfailure <- ifelse(diagnosis_data2$Respfailure==1, "Respfailure", NA)    
diagnosis_data2$Respother<- ifelse(diagnosis_data2$Respother==1, "Respother", NA)     
     
###merge new columns

diagnosis_data3 <- diagnosis_data2 %>%
  unite("Cardiac_diagnosis", Congenitalcardiac:Cardiacother, na.rm = TRUE)
str(diagnosis_data3)

diagnosis_data4 <- diagnosis_data3 %>%
  unite("Respiratory_diagnosis", Asthma:Respother, na.rm = TRUE)
str(diagnosis_data4)

diagnosis_resp_cardiac <- select(diagnosis_data4, project_id, Cardiac_diagnosis, Respiratory_diagnosis)
str(diagnosis_resp_cardiac)

###explore subgroups

t.diagnosis_cardiac <- table(diagnosis_resp_cardiac$Cardiac_diagnosis)

t.diagnosis_resp <- table(diagnosis_resp_cardiac$Respiratory_diagnosis)

######################
# Exploring which ICU
######################

##load in data set 1
wardstay01_data <- xap.read_table("complete01_caboodle_patient_ward_stays") 
str(wardstay01_data)

##load in data set 2
wardstay02_data <- xap.read_table("complete02_caboodle_patient_ward_stays") 
str(wardstay02_data)

##load in partial data
wardstay_p <- xap.read_table("partial_caboodle_patient_ward_stays") 
str(wardstay_p)

##join 2 data sets toegther
wardstay_dataa <- rbind(wardstay01_data, wardstay02_data)
wardstay_data <- rbind(wardstay_dataa, wardstay_p)

str(wardstay_data)


tableICU <- table(wardstay_data$project_id, wardstay_data$ward_code)
print(tableICU)

# need to make new variables picu, cicu, nicu 

wardstay_data1 <- wardstay_data %>%    #seperates out PICU and CICU
mutate(CICU = ifelse(wardstay_data$ward_code=='CICU', 1, 0),
         PICU= ifelse(wardstay_data$ward_code=='PICU', 1, 0),
         NICU= ifelse(wardstay_data$ward_code=='ALLIGATOR' |wardstay_data$ward_code== 'NICU', 1, 0))
         
str(wardstay_data1)
unique(wardstay_data1$project_id) #check all ids accounted for

##############################
###find unit for first session
###############################

#load in physio dates data set 1

physiotimes1_data <- xap.read_table("complete01_wp2_physio_times_check") # read in variables table for all patients

##load in physio times data set 2

physiotimes2_data <- xap.read_table("complete02_wp2_physio_times_check")

##load partial

physiotimes_p<- xap.read_table("partial_wp2_physio_times_check")

##combine data sets

physio_firsta <- rbind(physiotimes1_data, physiotimes2_data)
physio_first <- rbind(physio_firsta, physiotimes_p)
str(physio_first)

unique(physio_first$project_id)

##pick first session
physio_first <- subset(physio_first, day == 1 & session == 1)
str(physio_first)

unique(physio_first$project_id)

###############################################
##join data sets by project id and nearest date
################################################

# join datasets

ICU_unit <- full_join(physio_first, wardstay_data1, by = "project_id") 

str(ICU_unit)

unique(ICU_unit$project_id)

tail(ICU_unit)

#find difference between dates/times 

ICU_unit1<- ICU_unit %>%
 mutate(dateDiff = (ICU_unit$datetime - ICU_unit$start_datetime))
str(ICU_unit1) 

## filter to 2 weeks prior to physio only (doesnt work with negative numbers)

ICU_unit2 <- filter(ICU_unit1, ICU_unit1$dateDiff %in% (0:2419200))
str(ICU_unit2)
unique(ICU_unit2$project_id)

#filter dates to keep only closest (min) datediff with a value (not NA), grouped by id and index datetime

ICU_unit3<- ICU_unit2 %>% 
group_by(ICU_unit2$project_id) %>%
filter(dateDiff == min(dateDiff))  %>%
        ungroup()
        
str(ICU_unit3)
unique(ICU_unit3$project_id)

ICUunit_data1 <- select(ICU_unit3, project_id, ward_code, CICU, PICU, NICU) 
str(ICUunit_data1)

# now put back into a single variable

ICUunit_data1$CICU <- ifelse(ICUunit_data1$CICU==1, "CICU", NA)
ICUunit_data1$PICU <- ifelse(ICUunit_data1$PICU==1, "PICU", NA)
ICUunit_data1$NICU <- ifelse(ICUunit_data1$NICU==1, "NICU", NA)

ICUunit_data2 <- ICUunit_data1 %>%
  unite("Unit", CICU:NICU, na.rm = TRUE)
str(ICUunit_data2)

# table
t.location <- table(ICUunit_data2$Unit)

addmargins(t.location)
t.location <- round(prop.table(t.location)*100, 2) #to give percentage
print(t.location)

icu <- prop.table(ICUunit_data2$Unit)

##check
t.location <- table(ICUunit_data2$ward_code)

# draw graph

ggplot(ICUunit_data2, aes(x=Unit, fill=Unit)) + 
geom_bar() +
ggtitle("Location of patient") + # add a title
    xlab('Intensive care unit') + ylab('Number of patients') + # add axis names
    #ylim(0,10) + 
theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position="none") +
scale_fill_viridis_d()

##########################################
######### exploring length of ICU stay
#########################################

str(wardstay_data)

ICUlength_data <- select(wardstay_data, project_id, ward_stay_days) # selecting 2 columns
str(ICUlength_data)

# combine rows by id, adding values

ICUlength_data_sum <- aggregate(. ~ project_id, data=ICUlength_data, FUN=sum)
str(ICUlength_data_sum)

# draw histogran to check distribution

ggplot(data=ICUlength_data_sum, aes(ICUlength_data_sum$ward_stay_days)) + 
  geom_histogram(binwidth = 5) +
   ggtitle("Histogram of length of stay") + # add a title
    xlab('length of stay') + ylab('Number of patients') + # add axis names
theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position="none") +
scale_fill_viridis_d()

mean(ICUlength_data_sum$ward_stay_days)
median(ICUlength_data_sum$ward_stay_days)
quantile(ICUlength_data_sum$ward_stay_days, 0.25)
quantile(ICUlength_data_sum$ward_stay_days, 0.75)
range(ICUlength_data_sum$ward_stay_days)

##############################
####  admission type
################################

##load in data set 1
admission01_data <- xap.read_table("complete01_caboodle_patient_hospital_admissions")

dim(admission01_data)
str(admission01_data)

##load in data set 2

admission02_data <- xap.read_table("complete02_caboodle_patient_hospital_admissions")
dim(admission02_data)
str(admission02_data)

###load in partial

admission_p <- xap.read_table("partial_caboodle_patient_hospital_admissions")

##combine datasets

admission_dataa <- rbind(admission01_data, admission02_data)
admission_data <- rbind(admission_dataa, admission_p)
str(admission_data)

unique(admission_data$admission_type)
table(admission_data$admission_type)
is.na(admission_data$admission_type)

admission_data[400:450,]

# create 2 variables

admission_data1 <- admission_data %>%
mutate(Emergency = ifelse(admission_data$admission_type == "Emergency - A&E, Casualty, or Dental Casualty Department" | admission_data$admission_type == "Emergency Transfer" | admission_data$admission_type == "Emergency - Consultant Clinic" | admission_data$admission_type == "Emergency - Bed Bureau" | admission_data$admission_type == "Emergency - Other" | admission_data$admission_type == "Baby Born Elsewhere" | admission_data$admission_type == "Emergency - via A&E of another Health Care Provider", 1, 0),
        Elective = ifelse(admission_data$admission_type == "Elective - Planned" | admission_data$admission_type == "Elective - Booked" | admission_data$admission_type == "Non-Emergency Transfer" | admission_data$admission_type == "Elective - Waiting List", 1, 0))

str(admission_data1)

admission_data1$Emergency = ifelse(admission_data1$Emergency==1, "Emergency", NA)
admission_data1$Elective = ifelse(admission_data1$Elective==1, "Elective", NA)

admission_data1 <- admission_data1 %>%
  unite("admission.type", Emergency:Elective, na.rm = TRUE)


t.admission <- table(admission_data1$admission.type)

addmargins(t.admission)
t.admission <- round(prop.table(t.admission)*100, 2)

#######################################
##  compare unit and admission type
#########################################

str(ICUunit_data2)
str(admission_data1)

admission_location <- full_join(admission_data1, ICUunit_data2, by = "project_id") 

str(admission_location)

t.admission.location <- table(admission_location$Unit, admission_location$admission.type)
round(prop.table(t.admission.location,2)*100)

#####################################
### weight 
#####################################

## load in data set 1
weight01_data <- xap.read_table("complete01w_caboodle_patient_selected_flowsheetrows_clin_pivot")
str(weight01_data)

weight01_data <- select(weight01_data, project_id, taken_datetime, R.DRUG.CALCULATION.WEIGHT_grams, WEIGHT.SCALE_grams)
weight01_data[c(3,4)] <- lapply(weight01_data[c(3,4)], as.integer)
str(weight01_data)

## load in data set 2

weight02_data <- xap.read_table("complete02w_caboodle_patient_selected_flowsheetrows_clin_pivot")
str(weight02_data)

weight02_data <- select(weight02_data, project_id, taken_datetime, R.DRUG.CALCULATION.WEIGHT_grams, WEIGHT.SCALE_grams)
weight02_data[c(3,4)] <- lapply(weight02_data[c(3,4)], as.integer)
str(weight02_data)

##load in partial 

weight_p <- xap.read_table("partialw_caboodle_patient_selected_flowsheetrows_clin_pivot")
str(weight_p)

weight_p <- select(weight_p, project_id, taken_datetime, R.DRUG.CALCULATION.WEIGHT_grams, WEIGHT.SCALE_grams)
weight_p[c(3,4)] <- lapply(weight_p[c(3,4)], as.integer)
str(weight_p)

##cominbe data sets

weight_dataa <- rbind(weight01_data, weight02_data)
weight_data <- rbind(weight_dataa, weight_p)

str(weight_data)

# combine to one column
weight_data1 <- weight_data %>% 
    mutate(weight = ifelse(is.na(weight_data$WEIGHT.SCALE_grams), weight_data$R.DRUG.CALCULATION.WEIGHT_grams, weight_data$WEIGHT.SCALE_grams))
str(weight_data1)
tail(weight_data1)


### link weight to date of first physio

#load in physio dates data set 1

physiotimes1_data <- xap.read_table("complete01_wp2_physio_times_check") # read in variables table for all patients


##load in physio times data set 2


physiotimes2_data <- xap.read_table("complete02_wp2_physio_times_check")

##load partial

physiotimes_p<- xap.read_table("partial_wp2_physio_times_check")

##combine data sets

physio_firsta <- rbind(physiotimes1_data, physiotimes2_data)
physio_first <- rbind(physio_firsta, physiotimes_p)
str(physio_first)

##pick first session
physio_first <- subset(physio_first, day == 1 & session == 1)
str(physio_first)

# join datasets

weight_data2 <- select(weight_data1, project_id, taken_datetime, weight)

weight_data3 <- left_join(physio_first, weight_data2, by = "project_id") 

str(weight_data3)

#find difference between dates/times 

weight_data4 <- weight_data3 %>%
 mutate(dateDiff = (weight_data3$datetime - weight_data3$taken_datetime))
str(weight_data4) 

## filter to 2 weeks prior to physio only (doesnt work with negative numbers)

weight_data5 <- filter(weight_data4, weight_data4$dateDiff %in% (0:1209600))
str(weight_data5)

#filter dates to keep only closest (min) datediff with a value (not NA), grouped by id and index datetime

weight_data5 <- weight_data5[complete.cases(weight_data5), ] 

weight_data6 <- weight_data5 %>% 
group_by(weight_data5$project_id) %>%
filter(dateDiff == min(dateDiff))

weight_data6 <- weight_data6 %>%
        ungroup()
        
str(weight_data6)
head(weight_data6)

unique(weight_data6$project_id)

###remove duplicates

weight_data6[duplicated(weight_data6), ]

weight_data6a <-  distinct(weight_data6)
str(weight_data6a)


##check distribution and get summary

ggplot(data=weight_data6a, aes(weight_data6a$weight)) + 
  geom_histogram(binwidth = 5) +
   ggtitle("Histogram of length of stay") + # add a title
    xlab('weight') + ylab('Number of patients') + # add axis names
theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position="none") +
scale_fill_viridis_d()

summary(weight_data6a)

#############################
##put weight into catogories
#############################

str(weight_data6a)

weight_data6a$weight_cat <- ifelse(weight_data6a$weight <5000, 1,
                            ifelse(weight_data6a$weight >= 5000 & weight_data6$weight <10000, 2,
                            ifelse(weight_data6a$weight >= 10000, 3, 0)))



t.weight <- table(weight_data6a$weight_cat)

addmargins(t.weight)
t.weight <- round(prop.table(t.weight)*100, 2)


#################################################
######covid
################################################



lab1_data <- xap.read_table("complete01_caboodle_patient_selected_lab_components_all_pivot")
str(lab1_data)

lab1_data1 <- select(lab1_data, project_id, collected_datetime, COVID19RES_SARS.CoV.2.by.PCR.Result)
str(lab1_data1)

lab2_data <- xap.read_table("complete02_caboodle_patient_selected_lab_components_all_pivot")
str(lab2_data)

lab2_data1 <- select(lab2_data, project_id, collected_datetime, COVID19RES_SARS.CoV.2.by.PCR.Result)
str(lab2_data1)

labpart <- xap.read_table("partial_caboodle_patient_selected_lab_components_all_pivot")
str(labpart)

labpart1 <- select(labpart, project_id, collected_datetime, COVID19RES_SARS.CoV.2.by.PCR.Result)
str(labpart1)


###join together

lab_covid <- rbind(lab1_data1, lab2_data1)
lab_covid1 <- rbind(lab_covid, labpart1)
str(lab_covid1)

#####################################
####find results during admission
####################################

str(admission_data)
adm_1 <- select(admission_data, project_id, start_datetime, end_datetime)
str(adm_1)

###join and filter between dates

covid_all <- inner_join(lab_covid1, adm_1, by="project_id")
str(covid_all)

covid_all1 <- filter(covid_all, collected_datetime >= start_datetime & collected_datetime <= end_datetime)
str(covid_all1)

table(covid_all1$project_id, covid_all1$COVID19RES_SARS.CoV.2.by.PCR.Result)

###create new variable
covid_all1$covid <- ifelse(covid_all1$COVID19RES_SARS.CoV.2.by.PCR.Result == "RNA Detected", "Yes", "No")
str(covid_all1)

###change NAs to no

covid_all1$covid[is.na(covid_all1$covid)] <- 'No'

unique(covid_all1$project_id)

###subset those with yes

covid_positive <- subset(covid_all1, covid == 'Yes')
str(covid_positive)

####remove repeated ids

covid_positive1 <- select(covid_positive, project_id, covid)

covid_positive2 <- covid_positive1[!duplicated(covid_positive1$project_id), ]
str(covid_positive2)

###########################################
####gestation
############################################

full_longterm <- xap.read_table("full_longterm")
str(full_longterm)

table(full_longterm$gest_group)


##############################
####mortality
################################

table(full_longterm$disstatus)














#####################################Script 2 – Physiotherapy treatment exploration full sample############################################################

##############################
# load in physio session data
##############################

##load in part 1
physio_details01 <- xap.read_table("complete01_wp2_physio_details_check")

str(physio_details01)

physio_details01[c(3,4,6,9,10)] <- lapply(physio_details01[c(3,4,6,9,10)], as.integer)
str(physio_details01)

##load in part 2
physio_details02 <- xap.read_table("complete02_wp2_physio_details_check")

str(physio_details02)

physio_details02[c(3,4,6,9,10)] <- lapply(physio_details02[c(3,4,6,9,10)], as.integer)
str(physio_details02)

##load in partial
physio_details_partial <- xap.read_table("partial_wp2_physio_details_check")

str(physio_details_partial)

physio_details_partial[c(3,4,6,9,10)] <- lapply(physio_details_partial[c(3,4,6,9,10)], as.integer)
str(physio_details_partial)

#############################
##join complete data sets
#############################

physiosessions_dataa <- rbind(physio_details01, physio_details02)
physiosessions_data <- rbind(physiosessions_dataa, physio_details_partial)
str(physiosessions_data)
tail(physiosessions_data)

#########################################################################
# number of days of physio for each patient in first 4 days complete data
#########################################################################

median(physiosessions_data$number_of_days_of_physiotherapy)
mean(physiosessions_data$number_of_days_of_physiotherapy)
quantile(physiosessions_data$number_of_days_of_physiotherapy, 0.25)
quantile(physiosessions_data$number_of_days_of_physiotherapy, 0.75)
range(physiosessions_data$number_of_days_of_physiotherapy)

#draw graph

ggplot(physiosessions_data, aes(x=physiosessions_data$number_of_days_of_physiotherapy, fill= as.character(physiosessions_data$number_of_days_of_physiotherapy))) +
geom_bar() + 
ggtitle("Number of days of physiotherapy") + # add a title
    xlab('Number of days') + ylab('Number of patients') + # add axis names
    xlim(0,5) +
    scale_fill_viridis_d()  +
theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position="none") 

t.days <- table(physiosessions_data$number_of_days_of_physiotherapy)

# consecutive days of physio 

t.daystreatment <- table(physiosessions_data$consecutive_days_of_treatment)

addmargins(t.daystreatment)
round(prop.table(t.daystreatment)*100, 2) #to give percentage

#############################################################################
#number of physio sessions each patient receives in first 4 days
#########################################################################

# number in first 4 days of physio
median(physiosessions_data$number_of_physiotherapy_treatments)
mean(physiosessions_data$number_of_physiotherapy_treatments)
quantile(physiosessions_data$number_of_physiotherapy_treatments, 0.25)
quantile(physiosessions_data$number_of_physiotherapy_treatments, 0.75)
range(physiosessions_data$number_of_physiotherapy_treatments)
sum(physiosessions_data$number_of_physiotherapy_treatments)

# graph 
ggplot(physiosessions_data, aes(x=number_of_physiotherapy_treatments, fill=as.character(number_of_physiotherapy_treatments))) +
geom_bar() + 
ggtitle("Number of  physiotherapy treatments in first 4 days of physiotherapy") + # add a title
    xlab('Number of treatments') + ylab('Number of patients') + # add axis names
    scale_x_continuous(breaks = seq(0, 12, by = 1))+
theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position="none") +
 scale_fill_viridis_d() 


## graph days vs sessions
#ggplot(physiosessions_data, aes(x=physiosessions_data$project_id, y= physiosessions_data$number_of_physiotherapy_treatments, fill = as.character(physiosessions_data$number_of_days_of_physiotherapy))) +
geom_bar(stat = "identity") + 
ggtitle("Number of days of physiotherapy and number of treatments") + # add a title
    xlab('Patient id') + ylab('Number of physiotherapy treatments') + # add axis names
       scale_fill_viridis_d() +
    theme(plot.title=element_text(hjust=0.5, vjust=0.5, face='bold'), legend.position = "right") +
     labs(fill = "Days of physiotherapy")
          

##############################################################
# number of days of physio for each patient in total ICU stay
##############################################################

median(physiosessions_data$total_number_of_days_of_physio)
mean(physiosessions_data$total_number_of_days_of_physio)
quantile(physiosessions_data$total_number_of_days_of_physio, 0.25)
quantile(physiosessions_data$total_number_of_days_of_physio, 0.75)
range(physiosessions_data$total_number_of_days_of_physio)

#draw graph
ggplot(physiosessions_data, aes(x=physiosessions_data$total_number_of_days_of_physio, fill= as.character(physiosessions_data$total_number_of_days_of_physio))) +
geom_bar() + 
ggtitle("Total number of days of physiotherapy") + # add a title
    xlab('Number of days') + ylab('Number of patients') + # add axis names
    scale_fill_viridis_d()  +
theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position="none") 

#########################################################################
#number of physio sessions each patient receives in total ICU stay
#########################################################################

median(physiosessions_data$total_number_of_physio_treatments)
mean(physiosessions_data$total_number_of_physio_treatments)
quantile(physiosessions_data$total_number_of_physio_treatments, 0.25)
quantile(physiosessions_data$total_number_of_physio_treatments, 0.75)
range(physiosessions_data$total_number_of_physio_treatments)
sum(physiosessions_data$total_number_of_physio_treatments)

# graph 
ggplot(physiosessions_data, aes(x= physiosessions_data$total_number_of_physio_treatments, color =as.character(physiosessions_data$total_number_of_physio_treatments))) +
geom_bar() + 
ggtitle("Total number of  physiotherapy treatments") + # add a title
    xlab('Number of treatments') + ylab('Number of patients') + # add axis names
    scale_fill_viridis_d()  +
theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position="none") 


## graph days vs sessions
ggplot(physiosessions_data, aes(x=physiosessions_data$project_id, y= physiosessions_data$total_number_of_physio_treatments, fill = as.character(physiosessions_data$total_number_of_days_of_physio))) +
geom_bar(stat = "identity") + 
ggtitle("Number of days of physiotherapy and number of treatments") + # add a title
    xlab('Patient id') + ylab('Number of physiotherapy treatments') + # add axis names
       scale_fill_viridis_d() +
    theme(plot.title=element_text(hjust=0.5, vjust=0.5, face='bold'), legend.position = "right") +
     labs(fill = "Days of physiotherapy")
          
########################################
# create new variable av session/day first 4
######################################
str(physiosessions_data)

physiosessions_data$sessionsperday <- physiosessions_data$number_of_physiotherapy_treatments / physiosessions_data$number_of_days_of_physiotherapy

median(physiosessions_data$sessionsperday)
mean(physiosessions_data$sessionsperday)
quantile(physiosessions_data$sessionsperday, 0.25)
quantile(physiosessions_data$sessionsperday, 0.75)
range(physiosessions_data$sessionsperday)

########################################
# create new variable av session/day total
######################################

str(physiosessions_data)

physiosessions_data$totalsessionsperday <- physiosessions_data$total_number_of_physio_treatments / physiosessions_data$total_number_of_days_of_physio

median(physiosessions_data$totalsessionsperday)
mean(physiosessions_data$totalsessionsperday)
quantile(physiosessions_data$totalsessionsperday, 0.25)
quantile(physiosessions_data$totalsessionsperday, 0.75)
range(physiosessions_data$totalsessionsperday)


############################
## load in times of sessions
##########################

##load in part 1
physio_times01 <- xap.read_table("complete01_wp2_physio_times_check")

str(physio_times01)

##load in part 2
physio_times02 <- xap.read_table("complete02_wp2_physio_times_check")

str(physio_times02)

##load in partial
physio_times_partial <- xap.read_table("partial_wp2_physio_times_check")

str(physio_times_partial)

###join data sets

physio_timesa <- rbind(physio_times01, physio_times02)
physio_times <- rbind(physio_timesa, physio_times_partial)
str(physio_times)


################################
####select first session only
###############################

physio_times_first <- subset(physio_times, day == 1 & session == 1)
str(physio_times_first)

#####################################
##find time of day of session
################################

physio_times1 <- physio_times %>% 
  mutate(hour = hour(physio_times$datetime), 
         Physio_time = case_when(hour %in% 9:16 ~ "day",                           
            TRUE ~ "Oncall"))


t.physiotime <- table(physio_times1$Physio_time)

addmargins(t.physiotime)
round(prop.table(t.physiotime)*100, 2)

str(physio_times1)
#time catogories

physio_times2 <- physio_times1 %>% 
  mutate(time = case_when(
        hour %in% 9:16   ~"day",
      hour %in% 17:23 ~ "evening",
      hour %in% 00:8 ~ "night"))
    
  physio_times2$time = factor(
      physio_times2$time,
      level = c("day", "evening","night"))
  
t.timecatogory <- table(physio_times2$time)
print(t.timecatogory)

ggplot(physio_times2, aes(x = physio_times2$time, fill = physio_times2$time)) + 
  geom_bar() +
  ggtitle("Times of physiotherapy sessions") + # add a title
  xlab('Time catogories') + ylab('Number of treatment sessions') + # add axis names
 theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), axis.text.x = element_text(angle = 45, hjust=1), legend.position= "none") +
 scale_fill_viridis_d()

################################################
###### prepare data to explore physio treatments
################################################

str(physio_times_first)

##load in data set 1

treatment01_data <- xap.read_table("complete01_caboodle_patient_selected_flowsheetrows_phys_pivot")
str(treatment01_data)  

##load in data set 2

treatment02_data <- xap.read_table("complete02_caboodle_patient_selected_flowsheetrows_phys_pivot")
str(treatment02_data)  

##load in partial
treatment_p <- xap.read_table("partial_caboodle_patient_selected_flowsheetrows_phys_pivot")
str(treatment_p)  

##combine data sets

treatment_dataa <- rbind(treatment01_data, treatment02_data)
treatment_data <-rbind(treatment_dataa, treatment_p)
str(treatment_data)

table(treatment_data$R.GOSH.PT.NEED.COUGH.ASSIST)

unique(treatment_data$project_id)

######################
#manipulate variables
######################

# combine 2 same suction variables

treatment_data <- treatment_data %>% 
mutate(suctiontype = coalesce(treatment_data$RETIRED.R.AIRWAY.SUCTION.TYPE.OLD, treatment_data$R.GOSH.AIRWAY.SUCTION.TYPE))

str(treatment_data)  
head(treatment_data)

## select only columns need

treatment_data1 <- select(treatment_data, project_id, taken_datetime, R.AIRWAY.SUCTION.TOLERANCE, R.AIRWAY.SUCTION.DEVICE,  R.GOSH.IP.PHSYIO.VIBRATION, R.GOSH.IP.PHYSIO.DECOMPRESSION, 
                            R.GOSH.IP.SALINE.INSTILLATION, R.GOSH.IP.PHYSIO.BAG, R.GOSH.IP.PHYSIO.CHEST.PERCUSSION, R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION, suctiontype)

str(treatment_data1)

######################################################################
## join data frames for times and keep treatments with closest time
######################################################################

physio_data <- left_join(physio_times,treatment_data1 , by = "project_id") 

str(physio_data)
head(physio_data)

unique(physio_data$project_id)

physio_data1 <- physio_data %>%
  mutate(dateDiff = abs(physio_data$datetime - physio_data$taken_date)) %>%
  group_by(project_id, physio_data$datetime) %>%
  filter(dateDiff == 0)

str(physio_data1)
head(physio_data1)
tail(physio_data1)

physio_data1 <- physio_data1 %>%
    ungroup()
str(physio_data1)

range(physio_data1$dateDiff)

unique(physio_data1$R.GOSH.IP.SALINE.INSTILLATION)

str(physio_data1)
###########################################
############################################
### describe physio sessions
############################################
###########################################

###explore saline

t.saline <- table(physio_data1$R.GOSH.IP.SALINE.INSTILLATION)
addmargins(t.saline)
round(prop.table(t.saline)*100, 2)

# change variables into yes no and remove NA

physio_data1$R.GOSH.IP.PHYSIO.BAG <- ifelse(physio_data1$R.GOSH.IP.PHYSIO.BAG== "No",0 , 1)
physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION <- ifelse(physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION== "No",0,1)
physio_data1$R.GOSH.IP.PHSYIO.VIBRATION <- ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=="No", 0, 1)
physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION <- ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=="No", 0, 1)
physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION <-ifelse(physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION=="No", 0, 1)
physio_data1$R.GOSH.IP.SALINE.INSTILLATION <- ifelse(physio_data1$R.GOSH.IP.SALINE.INSTILLATION=="No", 0, 1)

physio_data1 <- mutate_if(physio_data1, is.numeric, ~replace(., is.na(.), 0))

physio_data1$R.GOSH.IP.PHYSIO.BAG <- ifelse(physio_data1$R.GOSH.IP.PHYSIO.BAG== "0",'No' , 'Yes')
physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION <- ifelse(physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION== "0",'No','Yes')
physio_data1$R.GOSH.IP.PHSYIO.VIBRATION <- ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=="0", 'No', 'Yes')
physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION <- ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=="0", 'No', 'Yes')
physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION <-ifelse(physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION=="0", 'No', 'Yes')
physio_data1$R.GOSH.IP.SALINE.INSTILLATION <- ifelse(physio_data1$R.GOSH.IP.SALINE.INSTILLATION=="0", 'No', 'Yes')

str(physio_data1)

is.na(physio_data1)

#########################################################
## explore suction in more detail just get open vs closed
#########################################################

unique(physio_data1$suctiontype)

physio_data1 <- physio_data1 %>%  
mutate(suctionopen = ifelse(physio_data1$suctiontype == 'Endotracheal Tube - Open' | physio_data1$suctiontype == 'Endotracheal Tube - Open;Nasal' | physio_data1$suctiontype == 'Endotracheal Tube - Open;Nasal;Oral' | physio_data1$suctiontype == 'Endotracheal Tube - Open;Nasopharyngeal' | physio_data1$suctiontype == 'Endotracheal Tube - Open;Nasopharyngeal;Oral' | physio_data1$suctiontype == 'Endotracheal Tube - Open;NPA' | physio_data1$suctiontype == 'Endotracheal Tube - Open;Oral' | physio_data1$suctiontype == 'Endotracheal Tube - Open;Oral;Nasal' | physio_data1$suctiontype == 'Endotracheal Tube - Open;Oral;Nasopharyngeal' | physio_data1$suctiontype == 'Endotracheal Tube - Open;Other (Comment)' | physio_data1$suctiontype == 'Oral;Endotracheal Tube - Open' | physio_data1$suctiontype == 'Oral;Nasal Prong;Endotracheal Tube - Open' | physio_data1$suctiontype == 'Oral;Nasal;Endotracheal Tube - Open', "Yes", "No"),
      suctionclosed = ifelse(physio_data1$suctiontype == 'Endotracheal Tube - Closed' | physio_data1$suctiontype == 'Endotracheal Tube - Closed;Oral' | physio_data1$suctiontype == 'Endotracheal Tube - Closed;Oral;Nasal', "Yes", "No"),
      both = ifelse(physio_data1$suctiontype == 'Endotracheal Tube - Closed;Endotracheal Tube - Open' | physio_data1$suctiontype == 'Endotracheal Tube - Closed;Endotracheal Tube - Open;Oral' | physio_data1$suctiontype == 'Endotracheal Tube - Closed;Endotracheal Tube - Open;Oral;Nasal' | physio_data1$suctiontype == 'Endotracheal Tube - Open;Endotracheal Tube - Closed' | physio_data1$suctiontype == 'Oral;Nasal;Endotracheal Tube - Open;Endotracheal Tube - Closed', "Yes", "No"),
      unknown = ifelse(physio_data1$suctiontype == 'Nasal' | physio_data1$suctiontype == 'Nasal Prong' | physio_data1$suctiontype == 'Trache'| physio_data1$suctiontype == 'NA', "Yes","No"))
        
str(physio_data1)

##create one suction variable

physio_data1$suctionopen <- ifelse(physio_data1$suctionopen == 'Yes', "Open", NA)
physio_data1$suctionclosed <- ifelse(physio_data1$suctionclosed == 'Yes', "Closed", NA)
physio_data1$both <- ifelse(physio_data1$both == 'Yes', "Both", NA)
physio_data1$unknown <- ifelse(physio_data1$unknown == 'Yes', "Unknown", NA)


physio_data1 <- physio_data1 %>%
  unite("Suction", suctionopen:unknown, na.rm = TRUE)

str(physio_data1)
unique(physio_data1$Suction)

t.suction <- table(physio_data1$Suction)
addmargins(t.suction)
round(prop.table(t.suction)*100, 2)

################################################
##create variable for MHI and CWV
#################################################

physio_data1$MHIvibs <- ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'Yes', "Yes", "No")

str(physio_data1)

physio_data1$MHICWV <- ifelse(physio_data1$R.GOSH.IP.PHYSIO.BAG == 'Yes' | physio_data1$MHIvibs == 'Yes', "Yes", "No")

str(physio_data1)

####################################################################
# create new combination of treatment variables with out suction
####################################################################

physio_data_comb1 <- physio_data1 %>%    
    mutate(saline.MHICWV.perc.decomp= ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$MHICWV == 'Yes', "saline.MHICWV.perc.decomp", NA),
           saline.MHICWV.perc= ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes'& physio_data1$MHICWV == 'Yes', "saline.MHICWV.perc", NA),
           saline.MHICWV.decomp= ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$MHICWV == 'Yes', "saline.MHICWV.decomp", NA),
            saline.MHICWV= ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$MHICWV == 'Yes', "saline.MHICWV", NA),
            saline.vibs.perc.decomp= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "saline.vibs.perc.deomp", NA),
            saline.vibs.perc= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "saline.vibs.perc", NA),
            saline.vibs= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "saline.vibs", NA),
            saline.perc.decomp= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "saline.perc.decomp", NA),
            saline.perc= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "saline.perc", NA),
            saline.decomp= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "saline.decomp", NA),
            saline.MHI.perc.decomp= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'Yes' & physio_data1$MHICWV == 'No', "saline.MHI.perc.decomp", NA),
            saline.MHI.perc= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'Yes' & physio_data1$MHICWV == 'No', "saline.MHI.perc", NA),
            saline.MHI.decomp= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'Yes' & physio_data1$MHICWV == 'No', "saline.MHI.decomp", NA),
            saline.MHI= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'Yes' & physio_data1$MHICWV == 'No', "saline.MHI", NA),
            MHICWV.perc.decomp= ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$MHICWV == 'Yes', "MHICWV.perc.decomp", NA),
            MHICWV.perc= ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$MHICWV == 'Yes', "MHICWV.perc", NA),
            MHICWV.decomp= ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' &  physio_data1$MHICWV == 'Yes', "MHICWV.decomp", NA),
            vibs.perc.decomp= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "vibs.perc.decomp", NA),
            vibs.perc= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "vibs.perc", NA),
            vibs.decomp= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "vibs.decomp", NA),
            MHI.perc.decomp= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'Yes' & physio_data1$MHICWV == 'No', "MHI.perc.decomp", NA),
            MHI.perc= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'Yes' & physio_data1$MHICWV == 'No', "MHI.perc", NA),
            MHI.decomp= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'Yes' & physio_data1$MHICWV == 'No', "MHI.decomp", NA),
            MHIonly= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'Yes' & physio_data1$MHICWV == 'No', "MHIonly", NA),
            vibsonly= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "vibsonly", NA),
            MHI.CWV= ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$MHICWV == 'Yes', "MHICWV", NA),
            perconly= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "perconly", NA),
            decomponly= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "decomponly", NA),
            salineonly= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "salineonly", NA))
    

str(physio_data_comb1)

# need to merge the columns to create one treatment variable

physio_data_comb2 <- physio_data_comb1 %>%
  unite("Treatment", saline.MHICWV.perc.decomp:salineonly, na.rm = TRUE)
  
str(physio_data_comb2)  

##save as CSV

write.csv(physio_data_comb2, "~/files/datafiles/CPTall.csv")

unique(physio_data_comb2$Treatment)

##change "" to NA

physio_data_comb2$Treatment[physio_data_comb2$Treatment==""]<-NA
unique(physio_data_comb2$Treatment)


t.Treatment <- table(physio_data_comb2$Treatment)
addmargins(t.Treatment)
round(prop.table(t.Treatment)*100, 2)

####create suction only column

str(physio_data_comb2) 

physio_data_comb2$Treatment[is.na(physio_data_comb2$Treatment)] <- 'unknown'

t.Treatment <- table(physio_data_comb2$Treatment)
addmargins(t.Treatment)
round(prop.table(t.Treatment)*100, 2)

physio_data_comb2$suctioned <- ifelse(physio_data_comb2$Suction == 'Open' | physio_data_comb2$Suction =='Closed'|physio_data_comb2$Suction == 'Both', 'Yes', 'No')
physio_data_comb2$suctiononly <- ifelse(physio_data_comb2$Treatment == 'unknown' & physio_data_comb2$suctioned == 'Yes', 'suctiononly', NA)

t.suctiononly <- table(physio_data_comb2$suctiononly)

###change unknown treatment back to NA

physio_data_comb2$Treatment[physio_data_comb2$Treatment=="unknown"]<- NA

unique(physio_data_comb2$Treatment)

####join suctiononly to treatment

##remove suctioned column
physio_data_comb2a <-subset(physio_data_comb2, select = -suctioned)

str(physio_data_comb2a)

physio_data_comb3 <- physio_data_comb2a %>%
  unite("Treatmentnew", Treatment:suctiononly, na.rm = TRUE)
  
str(physio_data_comb3)  
unique(physio_data_comb3$Treatmentnew)

physio_data_comb3$Treatmentnew[physio_data_comb3$Treatmentnew==""]<-NA
unique(physio_data_comb3$Treatmentnew)

t.Treatmentnew <- table(physio_data_comb3$Treatmentnew)
addmargins(t.Treatmentnew)
round(prop.table(t.Treatmentnew)*100, 2)

## remove NA's for graph
physio_graph <- select(physio_data_comb3, project_id, Treatmentnew)
physio_graph1 <- physio_graph[complete.cases(physio_graph), ] 


ggplot(physio_graph1, aes(x =physio_graph1$Treatmentnew, fill = physio_graph1$Treatmentnew, na.rm = TRUE)) + 
  geom_bar(na.rm = TRUE) +
    xlab('Physiotherapy treatment') + ylab('Number of patients') + # add axis names
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), 
    axis.text.x=element_text(angle=30, hjust=1), legend.position="none") +
    scale_fill_viridis_d()
    
########explore NAs
physio_data_comb[50:100,]

unknown_rx <- physio_data_comb3[is.na(physio_data_comb3$Treatmentnew),]

str(unknown_rx)

#########################################################################
####remove PR103 session 3.1, PR180 2.1, PR510 1.1 as no data as repeat analysis
#########################################################################
str(physio_data1)

physio_data1 <- physio_data1[!((physio_data1$project_id == "PR-103" & physio_data1$day == "3" & physio_data1$session == "1") | (physio_data1$project_id == "PR-180" & physio_data1$day == "2" & physio_data1$session == "1") | (physio_data1$project_id == "PR-510" & physio_data1$day == "1" & physio_data1$session == "1")),]

str(physio_data1)

###########################################
############################################
### describe physio sessions
############################################
###########################################

###explore saline

t.saline <- table(physio_data1$R.GOSH.IP.SALINE.INSTILLATION)
addmargins(t.saline)
round(prop.table(t.saline)*100, 2)

# change variables into yes no and remove NA

physio_data1$R.GOSH.IP.PHYSIO.BAG <- ifelse(physio_data1$R.GOSH.IP.PHYSIO.BAG== "No",0 , 1)
physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION <- ifelse(physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION== "No",0,1)
physio_data1$R.GOSH.IP.PHSYIO.VIBRATION <- ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=="No", 0, 1)
physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION <- ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=="No", 0, 1)
physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION <-ifelse(physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION=="No", 0, 1)
physio_data1$R.GOSH.IP.SALINE.INSTILLATION <- ifelse(physio_data1$R.GOSH.IP.SALINE.INSTILLATION=="No", 0, 1)

physio_data1 <- mutate_if(physio_data1, is.numeric, ~replace(., is.na(.), 0))

physio_data1$R.GOSH.IP.PHYSIO.BAG <- ifelse(physio_data1$R.GOSH.IP.PHYSIO.BAG== "0",'No' , 'Yes')
physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION <- ifelse(physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION== "0",'No','Yes')
physio_data1$R.GOSH.IP.PHSYIO.VIBRATION <- ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=="0", 'No', 'Yes')
physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION <- ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=="0", 'No', 'Yes')
physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION <-ifelse(physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION=="0", 'No', 'Yes')
physio_data1$R.GOSH.IP.SALINE.INSTILLATION <- ifelse(physio_data1$R.GOSH.IP.SALINE.INSTILLATION=="0", 'No', 'Yes')

str(physio_data1)

is.na(physio_data1)

#########################################################
## explore suction in more detail just get open vs closed
#########################################################

unique(physio_data1$suctiontype)

physio_data1 <- physio_data1 %>%  
mutate(suctionopen = ifelse(physio_data1$suctiontype == 'Endotracheal Tube - Open' | physio_data1$suctiontype == 'Endotracheal Tube - Open;Nasal' | physio_data1$suctiontype == 'Endotracheal Tube - Open;Nasal;Oral' | physio_data1$suctiontype == 'Endotracheal Tube - Open;Nasopharyngeal' | physio_data1$suctiontype == 'Endotracheal Tube - Open;Nasopharyngeal;Oral' | physio_data1$suctiontype == 'Endotracheal Tube - Open;NPA' | physio_data1$suctiontype == 'Endotracheal Tube - Open;Oral' | physio_data1$suctiontype == 'Endotracheal Tube - Open;Oral;Nasal' | physio_data1$suctiontype == 'Endotracheal Tube - Open;Oral;Nasopharyngeal' | physio_data1$suctiontype == 'Endotracheal Tube - Open;Other (Comment)' | physio_data1$suctiontype == 'Oral;Endotracheal Tube - Open' | physio_data1$suctiontype == 'Oral;Nasal Prong;Endotracheal Tube - Open' | physio_data1$suctiontype == 'Oral;Nasal;Endotracheal Tube - Open', "Yes", "No"),
      suctionclosed = ifelse(physio_data1$suctiontype == 'Endotracheal Tube - Closed' | physio_data1$suctiontype == 'Endotracheal Tube - Closed;Oral' | physio_data1$suctiontype == 'Endotracheal Tube - Closed;Oral;Nasal', "Yes", "No"),
      both = ifelse(physio_data1$suctiontype == 'Endotracheal Tube - Closed;Endotracheal Tube - Open' | physio_data1$suctiontype == 'Endotracheal Tube - Closed;Endotracheal Tube - Open;Oral' | physio_data1$suctiontype == 'Endotracheal Tube - Closed;Endotracheal Tube - Open;Oral;Nasal' | physio_data1$suctiontype == 'Endotracheal Tube - Open;Endotracheal Tube - Closed' | physio_data1$suctiontype == 'Oral;Nasal;Endotracheal Tube - Open;Endotracheal Tube - Closed', "Yes", "No"),
      unknown = ifelse(physio_data1$suctiontype == 'Nasal' | physio_data1$suctiontype == 'Nasal Prong' | physio_data1$suctiontype == 'Trache'| physio_data1$suctiontype == 'NA', "Yes","No"))
        
str(physio_data1)

##create one suction variable

physio_data1$suctionopen <- ifelse(physio_data1$suctionopen == 'Yes', "Open", NA)
physio_data1$suctionclosed <- ifelse(physio_data1$suctionclosed == 'Yes', "Closed", NA)
physio_data1$both <- ifelse(physio_data1$both == 'Yes', "Both", NA)
physio_data1$unknown <- ifelse(physio_data1$unknown == 'Yes', "Unknown", NA)


physio_data1 <- physio_data1 %>%
  unite("Suction", suctionopen:unknown, na.rm = TRUE)

str(physio_data1)
unique(physio_data1$Suction)

t.suction <- table(physio_data1$Suction)
addmargins(t.suction)
round(prop.table(t.suction)*100, 2)

################################################
##create variable for MHI and CWV
#################################################

physio_data1$MHIvibs <- ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'Yes', "Yes", "No")

str(physio_data1)

physio_data1$MHICWV <- ifelse(physio_data1$R.GOSH.IP.PHYSIO.BAG == 'Yes' | physio_data1$MHIvibs == 'Yes', "Yes", "No")

str(physio_data1)

physio_data1[50:100,]
####################################################################
# create new combination of treatment variables with out suction
####################################################################

physio_data_comb1 <- physio_data1 %>%    
    mutate(saline.MHICWV.perc.decomp= ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$MHICWV == 'Yes', "saline.MHICWV.perc.decomp", NA),
           saline.MHICWV.perc= ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes'& physio_data1$MHICWV == 'Yes', "saline.MHICWV.perc", NA),
           saline.MHICWV.decomp= ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$MHICWV == 'Yes', "saline.MHICWV.decomp", NA),
            saline.MHICWV= ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$MHICWV == 'Yes', "saline.MHICWV", NA),
            saline.vibs.perc.decomp= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "saline.vibs.perc.deomp", NA),
            saline.vibs.perc= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "saline.vibs.perc", NA),
            saline.vibs= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "saline.vibs", NA),
            saline.perc.decomp= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "saline.perc.decomp", NA),
            saline.perc= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "saline.perc", NA),
            saline.decomp= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "saline.decomp", NA),
            saline.MHI.perc.decomp= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'Yes' & physio_data1$MHICWV == 'No', "saline.MHI.perc.decomp", NA),
            saline.MHI.perc= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'Yes' & physio_data1$MHICWV == 'No', "saline.MHI.perc", NA),
            saline.MHI.decomp= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'Yes' & physio_data1$MHICWV == 'No', "saline.MHI.decomp", NA),
            saline.MHI= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'Yes' & physio_data1$MHICWV == 'No', "saline.MHI", NA),
            MHICWV.perc.decomp= ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$MHICWV == 'Yes', "MHICWV.perc.decomp", NA),
            MHICWV.perc= ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$MHICWV == 'Yes', "MHICWV.perc", NA),
            MHICWV.decomp= ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' &  physio_data1$MHICWV == 'Yes', "MHICWV.decomp", NA),
            vibs.perc.decomp= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "vibs.perc.decomp", NA),
            vibs.perc= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "vibs.perc", NA),
            vibs.decomp= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "vibs.decomp", NA),
            MHI.perc.decomp= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'Yes' & physio_data1$MHICWV == 'No', "MHI.perc.decomp", NA),
            MHI.perc= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'Yes' & physio_data1$MHICWV == 'No', "MHI.perc", NA),
            MHI.decomp= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'Yes' & physio_data1$MHICWV == 'No', "MHI.decomp", NA),
            MHIonly= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'Yes' & physio_data1$MHICWV == 'No', "MHIonly", NA),
            CWVonly= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "CWVonly", NA),
            MHI.CWV= ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$MHICWV == 'Yes', "MHICWV", NA),
            perconly= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "perconly", NA),
            decomponly= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "decomponly", NA),
            salineonly= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "salineonly", NA))
        
str(physio_data_comb1)

# need to merge the columns to creat one treatment variable

physio_data_comb2 <- physio_data_comb1 %>%
  unite("Treatment", saline.MHICWV.perc.decomp:salineonly, na.rm = TRUE)
  
str(physio_data_comb2)  

##save as CSV

write.csv(physio_data_comb2, "~/files/datafiles/CPTall.csv")

unique(physio_data_comb2a$Treatment)

##change "" to NA

physio_data_comb2$Treatment[physio_data_comb2$Treatment==""]<-NA
unique(physio_data_comb2$Treatment)

t.Treatment <- table(physio_data_comb2$Treatment)
addmargins(t.Treatment)
round(prop.table(t.Treatment)*100, 2)

####create suction only column
str(physio_data_comb2) 

physio_data_comb2$Treatment[is.na(physio_data_comb2$Treatment)] <- 'unknown'

t.Treatment <- table(physio_data_comb2$Treatment)
addmargins(t.Treatment)
round(prop.table(t.Treatment)*100, 2)

physio_data_comb2$suctioned <- ifelse(physio_data_comb2$Suction == 'Open' | physio_data_comb2$Suction =='Closed'|physio_data_comb2$Suction == 'Both', 'Yes', 'No')
physio_data_comb2$suctiononly <- ifelse(physio_data_comb2$Treatment == 'unknown' & physio_data_comb2$suctioned == 'Yes', 'suctiononly', NA)

t.suctiononly <- table(physio_data_comb2$suctiononly)

###change unknown treatment back to NA

physio_data_comb2$Treatment[physio_data_comb2$Treatment=="unknown"]<- NA

unique(physio_data_comb2$Treatment)

####join suctiononly to treatment

##remove suctioned column
physio_data_comb2a <-subset(physio_data_comb2, select = -suctioned)

str(physio_data_comb2a)

physio_data_comb3 <- physio_data_comb2a %>%
  unite("Treatmentnew", Treatment:suctiononly, na.rm = TRUE)
  
str(physio_data_comb3)  
unique(physio_data_comb3$Treatmentnew)

physio_data_comb3$Treatmentnew[physio_data_comb3$Treatmentnew==""]<-NA
unique(physio_data_comb3$Treatmentnew)

t.Treatmentnew <- table(physio_data_comb3$Treatmentnew)
addmargins(t.Treatmentnew)
round(prop.table(t.Treatmentnew)*100, 2)

ggplot(physio_data_comb3, aes(x =physio_data_comb3$Treatmentnew, fill = physio_data_comb3$Treatmentnew, na.rm=TRUE)) + 
  geom_bar(na.rm = TRUE) +
    xlab('Physiotherapy treatment') + ylab('Number of treatments') + # add axis names
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), 
    axis.text.x=element_text(angle=30, hjust=1), legend.position="none",text = element_text(size = 12)) +
    scale_y_continuous(expand = c(0, 0), limits = c(0, 900)) +
   scale_fill_manual(breaks = c("CWVonly","MHICWV", "MHICWV.decomp", "MHIonly", "perconly", "saline.MHI", "saline.MHI.decomp", "saline.MHI.perc", "saline.MHICWV", "saline.MHICWV.decomp", "saline.MHICWV.perc", "saline.MHICWV.perc.decomp", "saline.perc", "salineonly", "suctiononly"),
                        values=c("lightblue1", "lightblue2", "lightskyblue1", "skyblue1", "skyblue2", "steelblue1", "steelblue3", "steelblue", "steelblue4", "royalblue1", "royalblue3", "mediumblue", "royalblue4", "navy", "midnightblue"))

    








######################################################Script 3 – PELOD score calculation###########################################################################

##########################################
#load in physio dates times data
###########################################
#################################
##load in data for part 1
##############################

##load in physio times data and check

physiotimes1_data <- xap.read_table("complete01_wp2_physio_times_check")
str(physiotimes1_data)
head(physiotimes1_data)
unique(physiotimes1_data$project_id)


##################################
##load in data part 2
#########################################

##load in physio times data and check

physiotimes2_data <- xap.read_table("complete02_wp2_physio_times_check")
str(physiotimes2_data)
head(physiotimes2_data)
unique(physiotimes2_data$project_id)

######################################
##load in partial
########################################
physiotimespart_data <- xap.read_table("partial_wp2_physio_times_check")
str(physiotimespart_data)
head(physiotimespart_data)
unique(physiotimespart_data$project_id)

########################################
##Join part 1 and 2
##########################################

physiotimes_data <- rbind(physiotimes1_data, physiotimes2_data)
str(physiotimes_data)

##################################
##join to partial
##########################################

physiotimes_data1 <- rbind(physiotimes_data, physiotimespart_data)
str(physiotimes_data1)

######################################
# Load in data clinical data
###########################################


########################
##load in part 1
#######################

clinical1_data <- xap.read_table("complete01_caboodle_patient_selected_flowsheetrows_clin_pivot")
clinical1_data <- select(clinical1_data, project_id, taken_datetime, R.GLASGOW.COMA.SCALE.SCORE, R.GOSH.COMFORT.SCORE, R.PUPIL.REACTION.RIGHT, R.GOSH.COMFORT.MUSCLE.RELAX, R.PUPIL.REACTION.LEFT, R.GOSH.IP.MEAN.ARTERIAL.BLOOD.PRESSURE_mmHg, R.MAP)
clinical1_data[c(3,4,8,9)] <- lapply(clinical1_data[c(3,4,8,9)], as.integer)
str(clinical1_data)

####################################
##load in part 2
##################################

clinical2_data <- xap.read_table("complete02_caboodle_patient_selected_flowsheetrows_clin_pivot")
clinical2_data <- select(clinical2_data, project_id, taken_datetime, R.GLASGOW.COMA.SCALE.SCORE, R.GOSH.COMFORT.SCORE, R.PUPIL.REACTION.RIGHT, R.GOSH.COMFORT.MUSCLE.RELAX, R.PUPIL.REACTION.LEFT, R.GOSH.IP.MEAN.ARTERIAL.BLOOD.PRESSURE_mmHg, R.MAP)
clinical2_data[c(3,4,8,9)] <- lapply(clinical2_data[c(3,4,8,9)], as.integer)
str(clinical2_data)

##################################
##load in partial
#################################

clinicalpart <- xap.read_table("partial_caboodle_patient_selected_flowsheetrows_clin_pivot")
clinicalpart <- select(clinicalpart, project_id, taken_datetime, R.GLASGOW.COMA.SCALE.SCORE, R.GOSH.COMFORT.SCORE, R.PUPIL.REACTION.RIGHT, R.GOSH.COMFORT.MUSCLE.RELAX, R.PUPIL.REACTION.LEFT, R.GOSH.IP.MEAN.ARTERIAL.BLOOD.PRESSURE_mmHg, R.MAP)
clinicalpart[c(3,4,8,9)] <- lapply(clinicalpart[c(3,4,8,9)], as.integer)
str(clinicalpart)

########################################
## join part 1 and 2
#######################################

clinical_data <- rbind(clinical1_data, clinical2_data)
str(clinical_data)

unique(clinical_data$project_id)

#################################
##join partial
##################################

clinical_datax <- rbind(clinical_data, clinicalpart)
str(clinical_datax)

##############################################
### sort into format required
################################################

# combine MAP variables

clinical_data1 <- clinical_datax %>% 
    mutate(MAP = ifelse(is.na(clinical_datax$R.GOSH.IP.MEAN.ARTERIAL.BLOOD.PRESSURE_mmHg), clinical_datax$R.MAP, clinical_data$R.GOSH.IP.MEAN.ARTERIAL.BLOOD.PRESSURE_mmHg))

str(clinical_data1)

# create new pupil variables

clinical_data1$r.pupil <- ifelse(is.na(clinical_data1$R.PUPIL.REACTION.RIGHT), NA,
                        ifelse(clinical_data1$R.PUPIL.REACTION.RIGHT == "Nonreactive", "fixed",
                        ifelse(clinical_data1$R.PUPIL.REACTION.RIGHT == "Brisk" | clinical_data1$R.PUPIL.REACTION.RIGHT == "Sluggish", "reactive", NA)))

clinical_data1$l.pupil <-  ifelse(is.na(clinical_data1$R.PUPIL.REACTION.LEFT), NA,
                        ifelse(clinical_data1$R.PUPIL.REACTION.LEFT == "Nonreactive", "fixed",
                        ifelse(clinical_data1$R.PUPIL.REACTION.LEFT == "Brisk" | clinical_data1$R.PUPIL.REACTION.LEFT == "Sluggish", "reactive", NA)))

clinical_data1$PUPIL.REACTION <- ifelse(clinical_data1$r.pupil == "fixed" & clinical_data1$l.pupil == "fixed", "Both fixed",
                        ifelse(clinical_data1$r.pupil == "reactive" & clinical_data1$l.pupil == "reactive", " Both reactive", NA))

str(clinical_data1)

#select only variable want to join

clinical_data2 <- select(clinical_data1, project_id, taken_datetime, R.GLASGOW.COMA.SCALE.SCORE, R.GOSH.COMFORT.SCORE, R.GOSH.COMFORT.MUSCLE.RELAX, MAP, PUPIL.REACTION)
str(clinical_data2)

unique(clinical_data2$project_id)

################################################
# join the datasets 
################################################
clinicalstatus <- left_join(physiotimes_data1, clinical_data2, by = "project_id") 
str(clinicalstatus)
head(clinicalstatus)

unique(clinicalstatus$project_id)

###############################
#### subset for GCS
###################################

clinicalstatus_GCS <- select(clinicalstatus, project_id, day, session, datetime, taken_datetime, R.GLASGOW.COMA.SCALE.SCORE)
str(clinicalstatus_GCS)

#find difference between dates/times

clinicalstatus_GCS1 <- clinicalstatus_GCS %>%
 mutate(dateDiff = (clinicalstatus_GCS$datetime - clinicalstatus_GCS$taken_datetime))
 
#filter dates for those between 30 mins and 24 hours prior only

clinicalstatus_GCS2 <- filter(clinicalstatus_GCS1, clinicalstatus_GCS1$dateDiff %in% (1800:86400))

#filter dates to keep worst value (not NA), grouped by id and index datetime

clinicalstatus_GCS2 <- clinicalstatus_GCS2[complete.cases(clinicalstatus_GCS2), ] 

clinicalstatus_GCS3 <- clinicalstatus_GCS2 %>% 
group_by(clinicalstatus_GCS2$project_id, clinicalstatus_GCS2$datetime) %>%
filter(R.GLASGOW.COMA.SCALE.SCORE == min(R.GLASGOW.COMA.SCALE.SCORE)) %>%
        ungroup()
        
str(clinicalstatus_GCS3)
head(clinicalstatus_GCS3)

############################################
#### subset for comfort score
#############################################
clinicalstatus_comfort <- select(clinicalstatus, project_id, day, session, datetime, taken_datetime, R.GOSH.COMFORT.SCORE)
str(clinicalstatus_comfort)

#find difference between dates/times

clinicalstatus_comfort1 <- clinicalstatus_comfort %>%
 mutate(dateDiff = (clinicalstatus_comfort$datetime - clinicalstatus_comfort$taken_datetime))
 
#filter dates for those between 30 mins and 24 hours prior only

clinicalstatus_comfort2 <- filter(clinicalstatus_comfort1, clinicalstatus_comfort1$dateDiff %in% (1800:86400))

#filter dates to keep only closest (min) datediff with a value (not NA), grouped by id and index datetime

clinicalstatus_comfort2 <- clinicalstatus_comfort2[complete.cases(clinicalstatus_comfort2), ] 

clinicalstatus_comfort3 <- clinicalstatus_comfort2 %>% 
group_by(clinicalstatus_comfort2$project_id, clinicalstatus_comfort2$datetime) %>%
filter(dateDiff == min(dateDiff))

clinicalstatus_comfort3 <- clinicalstatus_comfort3 %>%
        ungroup()
        
str(clinicalstatus_comfort3)
head(clinicalstatus_comfort3)

#####################################
##### subset for MAP
#####################################
clinicalstatus_MAP <- select(clinicalstatus, project_id, day, session, datetime, taken_datetime, MAP)
str(clinicalstatus_MAP)

#find difference between dates/times

clinicalstatus_MAP1 <- clinicalstatus_MAP %>%
 mutate(dateDiff = (clinicalstatus_MAP$datetime - clinicalstatus_MAP$taken_datetime))
 
#filter dates for those between 30 mins and 24 hours prior only

clinicalstatus_MAP2 <- filter(clinicalstatus_MAP1, clinicalstatus_MAP1$dateDiff %in% (1800:86400))

#filter dates to keep only lowest value (not NA), grouped by id and index datetime

clinicalstatus_MAP2 <- clinicalstatus_MAP2[complete.cases(clinicalstatus_MAP2), ] 

clinicalstatus_MAP3 <- clinicalstatus_MAP2 %>% 
group_by(clinicalstatus_MAP2$project_id, clinicalstatus_MAP2$datetime) %>%
filter(MAP == min(MAP))

clinicalstatus_MAP3 <- clinicalstatus_MAP3 %>%
        ungroup()
        
str(clinicalstatus_MAP3)
head(clinicalstatus_MAP3)

#########################################
#### subset for muscle relaxed
#########################################
clinicalstatus_paralysis <- select(clinicalstatus, project_id, day, session, datetime, taken_datetime, R.GOSH.COMFORT.MUSCLE.RELAX)
str(clinicalstatus_paralysis)

#find difference between dates/times

clinicalstatus_paralysis1 <- clinicalstatus_paralysis %>%
 mutate(dateDiff = (clinicalstatus_paralysis$datetime - clinicalstatus_paralysis$taken_datetime))
 
#filter dates for those between 1 hour pre and post prior only

clinicalstatus_paralysis2 <- filter(clinicalstatus_paralysis1, clinicalstatus_paralysis1$dateDiff %in% (-3600:3600))

#filter dates to keep only closest (min) datediff with a value (not NA), grouped by id and index datetime

clinicalstatus_paralysis2 <- clinicalstatus_paralysis2[complete.cases(clinicalstatus_paralysis2), ] 

clinicalstatus_paralysis3 <- clinicalstatus_paralysis2 %>% 
group_by(clinicalstatus_paralysis2$project_id, clinicalstatus_paralysis2$datetime) %>%
filter(dateDiff == min(dateDiff))

clinicalstatus_paralysis3 <- clinicalstatus_paralysis3 %>%
        ungroup()
        
str(clinicalstatus_paralysis3)
head(clinicalstatus_paralysis3)

#######################################################################
###  subset for pupils
###################################################################

clinicalstatus_pupils <- select(clinicalstatus, project_id, day, session, datetime, taken_datetime, PUPIL.REACTION)
str(clinicalstatus_pupils)

#find difference between dates/times

clinicalstatus_pupils1 <- clinicalstatus_pupils %>%
 mutate(dateDiff = (clinicalstatus_pupils$datetime - clinicalstatus_pupils$taken_datetime))
 
#filter dates for those between 30 mins and 24 hours prior only

clinicalstatus_pupils2 <- filter(clinicalstatus_pupils1, clinicalstatus_pupils1$dateDiff %in% (0:86400))

#filter dates to keep only closest (min) datediff with a value (not NA), grouped by id and index datetime

clinicalstatus_pupils2 <- clinicalstatus_pupils2[complete.cases(clinicalstatus_pupils2), ] 

clinicalstatus_pupils3 <- clinicalstatus_pupils2 %>% 
group_by(clinicalstatus_pupils2$project_id, clinicalstatus_pupils2$datetime) %>%
filter(dateDiff == min(dateDiff))

clinicalstatus_pupils3 <- clinicalstatus_pupils3 %>%
        ungroup()
        
str(clinicalstatus_pupils3)
head(clinicalstatus_pupils3)

#####################################
#### join all subsets
####################################

clinicalstatus1 <- full_join(clinicalstatus_comfort3, clinicalstatus_GCS3, by = c("project_id", "datetime")) 
str(clinicalstatus1)
clinicalstatus2 <- select(clinicalstatus1, project_id, day.x, session.x, datetime, taken_datetime.x, R.GOSH.COMFORT.SCORE, taken_datetime.y, R.GLASGOW.COMA.SCALE.SCORE)
str(clinicalstatus2)

clinicalstatus3 <- full_join(clinicalstatus_MAP3, clinicalstatus2, by = c("project_id", "datetime")) 
str(clinicalstatus3)
clinicalstatus3 <- select(clinicalstatus3, project_id, day, session, datetime, taken_datetime, MAP, taken_datetime.x, R.GOSH.COMFORT.SCORE, taken_datetime.y, R.GLASGOW.COMA.SCALE.SCORE)
str(clinicalstatus3)

clinicalstatus4 <- full_join(clinicalstatus3, clinicalstatus_paralysis3, by = c("project_id", "datetime")) 
str(clinicalstatus4)
clinicalstatus4 <- select(clinicalstatus4, project_id, day.x, session.x, datetime, taken_datetime.x, MAP, taken_datetime.x.x, R.GOSH.COMFORT.SCORE, taken_datetime.y, R.GLASGOW.COMA.SCALE.SCORE, taken_datetime.y.y, R.GOSH.COMFORT.MUSCLE.RELAX)
str(clinicalstatus4)

clinicalstatus_total <- full_join(clinicalstatus4, clinicalstatus_pupils3, by = c("project_id", "datetime")) 
str(clinicalstatus_total)
clinicalstatus_total <- select(clinicalstatus_total, project_id, day.x, session.x, datetime, taken_datetime.x, MAP, taken_datetime.x.x, R.GOSH.COMFORT.SCORE, taken_datetime.y, R.GLASGOW.COMA.SCALE.SCORE, taken_datetime.y.y, R.GOSH.COMFORT.MUSCLE.RELAX, taken_datetime, PUPIL.REACTION)
str(clinicalstatus_total)

#### remove taken times

clinicalstatus_final <- select(clinicalstatus_total, project_id, day.x, session.x, datetime, MAP, R.GOSH.COMFORT.SCORE, R.GLASGOW.COMA.SCALE.SCORE, R.GOSH.COMFORT.MUSCLE.RELAX, PUPIL.REACTION)
str(clinicalstatus_final)

unique(clinicalstatus_final$project_id)
############################################
## load in lab data for PELOD score 
##########################################

##############################################
##load in part 1
#############################################

lab1_data <- xap.read_table("complete01_caboodle_patient_selected_lab_components_all_pivot")
str(lab1_data)

lab1_data <- select(lab1_data, project_id, SpecimenSource, TestName, collected_datetime, received_datetime, verified_datetime, PLT1_Platelet.Count_x10.9.L, WBC1_WBC_x10.9.L, CREAT_Creatinine_umol.L, POCPO2_paO2.POC_kPa, POCLAC_Lactate..art..POC_mmol.L, POCPCO2_paCO2.POC_kPa, POCLAC_Lactate..mv..POC_mmol.L, POCLAC_Lactate.POC_mmol.L, POCLAC_Lactate..cap..POC_mmol.L, POCLAC_Lactate..ven..POC_mmol.L)
str(lab1_data)
#############################################
##load in part 2
###############################################

lab2_data <- xap.read_table("complete02_caboodle_patient_selected_lab_components_all_pivot")
str(lab2_data)

lab2_data <- select(lab2_data, project_id, SpecimenSource, TestName, collected_datetime, received_datetime, verified_datetime, PLT1_Platelet.Count_x10.9.L, WBC1_WBC_x10.9.L, CREAT_Creatinine_umol.L, POCPO2_paO2.POC_kPa, POCLAC_Lactate..art..POC_mmol.L, POCPCO2_paCO2.POC_kPa, POCLAC_Lactate..mv..POC_mmol.L, POCLAC_Lactate.POC_mmol.L, POCLAC_Lactate..cap..POC_mmol.L, POCLAC_Lactate..ven..POC_mmol.L)
str(lab2_data)

#######################################
##load in partial
########################################

labpart <- xap.read_table("partial_caboodle_patient_selected_lab_components_all_pivot")
str(labpart)

labpart <- select(labpart, project_id, SpecimenSource, TestName, collected_datetime, received_datetime, verified_datetime, PLT1_Platelet.Count_x10.9.L, WBC1_WBC_x10.9.L, CREAT_Creatinine_umol.L, POCPO2_paO2.POC_kPa, POCLAC_Lactate..art..POC_mmol.L, POCPCO2_paCO2.POC_kPa, POCLAC_Lactate..mv..POC_mmol.L, POCLAC_Lactate.POC_mmol.L, POCLAC_Lactate..cap..POC_mmol.L, POCLAC_Lactate..ven..POC_mmol.L)
str(labpart)

#######################################
##join part 1 & 2
#######################################

lab_data <- rbind(lab1_data, lab2_data)
str(lab_data)

unique(lab_data$project_id)

#############################
#join to partial
###############################

lab_datax <- rbind(lab_data, labpart)
str(lab_datax)

##### change to numeric
lab_data2 <- lab_datax %>% 
     mutate_at(c(7:16), as.numeric)
str(lab_data2)

# select only collected datetime 

lab_data3 <- select(lab_data2, project_id, collected_datetime, PLT1_Platelet.Count_x10.9.L, WBC1_WBC_x10.9.L, CREAT_Creatinine_umol.L, POCPO2_paO2.POC_kPa, POCPCO2_paCO2.POC_kPa)
str(lab_data3)

############################################
#### join data sets
###########################################
labs <- left_join(physiotimes_data1, lab_data3, by = "project_id") 
str(labs)

################################
### subset for platelets
##################################
labs_plts <- select(labs, project_id, day, session, datetime, collected_datetime, PLT1_Platelet.Count_x10.9.L)
str(labs_plts)

#find difference between dates/times

labs_plts1 <- labs_plts %>%
 mutate(dateDiff = (labs_plts$datetime - labs_plts$collected_datetime))

str(labs_plts1)
#filter dates for those between 30 mins and 24 hours prior only

labs_plts2 <- filter(labs_plts1, labs_plts1$dateDiff %in% (0:86400))
str(labs_plts2)
#filter dates to keep only lowest value (not NA), grouped by id and index datetime

labs_plts2 <- labs_plts2[complete.cases(labs_plts2), ] 

labs_plts3 <- labs_plts2 %>% 
group_by(labs_plts2$project_id, labs_plts2$datetime) %>%
filter(PLT1_Platelet.Count_x10.9.L == min(PLT1_Platelet.Count_x10.9.L))

labs_plts3 <- labs_plts3 %>%
        ungroup()
        
str(labs_plts3)
head(labs_plts3)

unique(labs_plts3$project_id)

################################
### subset for WBC
####################################
labs_WBC <- select(labs, project_id, day, session, datetime, collected_datetime, WBC1_WBC_x10.9.L )
str(labs_WBC)

#find difference between dates/times

labs_WBC1 <- labs_WBC %>%
 mutate(dateDiff = (labs_WBC$datetime - labs_WBC$collected_datetime))
 
#filter dates for those between 30 mins and 24 hours prior only

labs_WBC2 <- filter(labs_WBC1, labs_WBC1$dateDiff %in% (0:86400))
str(labs_WBC2)
#filter dates to keep only lowest value (not NA), grouped by id and index datetime

labs_WBC2 <- labs_WBC2[complete.cases(labs_WBC2), ] 

labs_WBC3 <- labs_WBC2 %>% 
group_by(labs_WBC2$project_id, labs_WBC2$datetime) %>%
filter(WBC1_WBC_x10.9.L == min(WBC1_WBC_x10.9.L))

labs_WBC3 <- labs_WBC3 %>%
        ungroup()
        
str(labs_WBC3)
head(labs_WBC3)

####################################
### subset for creatinine
######################################
labs_cr <- select(labs, project_id, day, session, datetime, collected_datetime, CREAT_Creatinine_umol.L)
str(labs_cr)

#find difference between dates/times

labs_cr1 <- labs_cr %>%
 mutate(dateDiff = (labs_cr$datetime - labs_cr$collected_datetime))
 
#filter dates for those between 30 mins and 24 hours prior only

labs_cr2 <- filter(labs_cr1, labs_cr1$dateDiff %in% (0:86400))
str(labs_cr2)
#filter dates to keep only max value (not NA), grouped by id and index datetime

labs_cr2 <- labs_cr2[complete.cases(labs_cr2), ] 

labs_cr3 <- labs_cr2 %>% 
group_by(labs_cr2$project_id, labs_cr2$datetime) %>%
filter(CREAT_Creatinine_umol.L == max(CREAT_Creatinine_umol.L))

labs_cr3 <- labs_cr3 %>%
        ungroup()
        
str(labs_cr3)
head(labs_cr3)

#########################################################################
####  subset for PaCO2  
#########################################################################
labs_CO2 <- select(labs, project_id, day, session, datetime, collected_datetime, POCPCO2_paCO2.POC_kPa)
str(labs_CO2)

#find difference between dates/times

labs_CO21 <- labs_CO2 %>%
 mutate(dateDiff = (labs_CO2$datetime - labs_CO2$collected_datetime))
 
#filter dates for those between 30 mins and 24 hours prior only

labs_CO22 <- filter(labs_CO21, labs_CO21$dateDiff %in% (1800:86400))
str(labs_cr2)
#filter dates to keep only max value (not NA), grouped by id and index datetime

labs_CO22 <- labs_CO22[complete.cases(labs_CO22), ] 

labs_CO23 <- labs_CO22 %>% 
group_by(labs_CO22$project_id, labs_CO22$datetime) %>%
filter(POCPCO2_paCO2.POC_kPa == max(POCPCO2_paCO2.POC_kPa))

labs_CO23 <- labs_CO23 %>%
        ungroup()
        
str(labs_CO23)
head(labs_CO23)

##############################
#### subset PO2
#############################
labs_O2 <- select(labs, project_id, day, session, datetime, collected_datetime, POCPO2_paO2.POC_kPa)
str(labs_O2)

#find difference between dates/times

labs_O21 <- labs_O2 %>%
 mutate(dateDiff = (labs_O2$datetime - labs_O2$collected_datetime))
 
#filter dates for those between 30 mins and 24 hours prior only

labs_O22 <- filter(labs_O21, labs_O21$dateDiff %in% (1800:86400))
str(labs_cr2)
#filter dates to keep only min value (not NA), grouped by id and index datetime

labs_O22 <- labs_O22[complete.cases(labs_O22), ] 

labs_O23 <- labs_O22 %>% 
group_by(labs_O22$project_id, labs_O22$datetime) %>%
filter(POCPO2_paO2.POC_kPa == min(POCPO2_paO2.POC_kPa))

labs_O23 <- labs_O23 %>%
        ungroup()
        
str(labs_O23)
head(labs_O23)

#########################################
### convert kPa to mmHg for PaCO2 and PO2
########################################
labs_CO23$POCPCO2_paCO2.POC_mmHg <- labs_CO23$POCPCO2_paCO2.POC_kPa * 7.50062
labs_O23$POCPO2_paO2.POC_mmHg <- labs_O23$POCPO2_paO2.POC_kPa * 7.50062

######################################################
###  get single variable for lactate, by combining 
#####################################################
str(lab_data2)

labs_lac <- select(lab_data2, project_id, collected_datetime, POCLAC_Lactate..art..POC_mmol.L,  POCLAC_Lactate..mv..POC_mmol.L, POCLAC_Lactate.POC_mmol.L, POCLAC_Lactate..cap..POC_mmol.L, POCLAC_Lactate..ven..POC_mmol.L)
str(labs_lac)


labs_lac1 <- labs_lac %>%
  unite("Lactate",POCLAC_Lactate..art..POC_mmol.L:POCLAC_Lactate..ven..POC_mmol.L, na.rm = TRUE)
str(labs_lac1)

unique(labs_lac1$project_id)

#####################################
### combine physio times with lactate
#####################################
labs_LAC <- left_join(physiotimes_data1, labs_lac1, by = "project_id") 
str(labs_LAC)

labs_LAC1 <- labs_LAC[!labs_LAC$Lactate == "",]
str(labs_LAC1)

#find difference between dates/times

labs_LAC1a <- labs_LAC1 %>%
 mutate(dateDiff = (labs_LAC1$datetime - labs_LAC1$collected_datetime))
str(labs_LAC1a)

#filter dates for those between 30 mins and 24 hours prior only

labs_LAC2 <- filter(labs_LAC1a, labs_LAC1a$dateDiff %in% (1800:86400))
str(labs_LAC2)
#filter dates to keep only max value (not NA), grouped by id and index datetime

labs_LAC3 <- labs_LAC2[complete.cases(labs_LAC2), ] 

labs_LAC3 <- labs_LAC2 %>% 
group_by(labs_LAC2$project_id, labs_LAC2$datetime) %>%
filter(Lactate == max(Lactate))

labs_LAC3 <- labs_LAC3 %>%
        ungroup()
        
str(labs_LAC3)
head(labs_LAC3)
tail(labs_LAC3)

labs_LAC3[0:50,]

##remove repeated rows
duplicated(labs_LAC3)

labs_LAC4 <-labs_LAC3 %>% distinct()
str(labs_LAC4)
labs_LAC4[1:50,]

unique(labs_LAC4$project_id)

#####################################
### join all labs back together
#####################################
all_labs <- full_join(labs_LAC4, labs_plts3, by = c("project_id", "datetime")) 
str(all_labs)
all_labs <- select(all_labs, project_id, day.x, session.x, datetime, collected_datetime.x, Lactate, collected_datetime.y, PLT1_Platelet.Count_x10.9.L )
str(all_labs)

all_labs1 <- full_join(all_labs, labs_WBC3 , by = c("project_id", "datetime")) 
str(all_labs1)
all_labs1 <- select(all_labs1, project_id, day.x, session.x, datetime, collected_datetime.x, Lactate, collected_datetime.y, PLT1_Platelet.Count_x10.9.L, collected_datetime, WBC1_WBC_x10.9.L )
str(all_labs1)

all_labs2 <- full_join(all_labs1, labs_cr3 , by = c("project_id", "datetime")) 
str(all_labs2)
all_labs2 <- select(all_labs2, project_id, day.x, session.x, datetime, collected_datetime.x, Lactate, collected_datetime.y, PLT1_Platelet.Count_x10.9.L, collected_datetime.x.x, WBC1_WBC_x10.9.L, collected_datetime.y.y, CREAT_Creatinine_umol.L)
str(all_labs2)

all_labs3 <- full_join(all_labs2, labs_O23 , by = c("project_id", "datetime")) 
str(all_labs3)
all_labs3 <- select(all_labs3, project_id, day.x, session.x, datetime, collected_datetime.x, Lactate, collected_datetime.y, PLT1_Platelet.Count_x10.9.L, collected_datetime.x.x, WBC1_WBC_x10.9.L, collected_datetime.y.y, CREAT_Creatinine_umol.L, collected_datetime, POCPO2_paO2.POC_mmHg)
str(all_labs3)

all_labs4 <- full_join(all_labs3, labs_CO23 , by = c("project_id", "datetime")) 
str(all_labs4)
all_labs4 <- select(all_labs4, project_id, day.x, session.x, datetime, collected_datetime.x, Lactate, collected_datetime.y, PLT1_Platelet.Count_x10.9.L, collected_datetime.x.x, WBC1_WBC_x10.9.L, collected_datetime.y.y, CREAT_Creatinine_umol.L, collected_datetime.x.x.x,  POCPO2_paO2.POC_mmHg, collected_datetime.y.y.y,  POCPCO2_paCO2.POC_mmHg)
str(all_labs4)

## remove dates times collected

all_labs5 <- select(all_labs4, project_id, day.x, session.x, datetime, Lactate, PLT1_Platelet.Count_x10.9.L, WBC1_WBC_x10.9.L, CREAT_Creatinine_umol.L, POCPO2_paO2.POC_mmHg,  POCPCO2_paCO2.POC_mmHg)
str(all_labs5)

duplicated(all_labs5)

all_labs6 <- all_labs5 %>% distinct()
str(all_labs6)

all_labs6[c(5)] <- lapply(all_labs6[c(5)], as.numeric)

unique(all_labs6$project_id)

##################################
## join all clinical status data
##################################
all_clinical <- inner_join(clinicalstatus_final, all_labs6, by = c("project_id", "datetime"))
str(all_clinical)

#duplicated(all_clinicala)

all_clinicala <- all_clinical %>% distinct()
str(all_clinicala)

all_clinicalb <- select(all_clinicala, project_id, day.x.x, session.x.x, datetime, MAP, R.GOSH.COMFORT.SCORE, R.GLASGOW.COMA.SCALE.SCORE, R.GOSH.COMFORT.MUSCLE.RELAX, PUPIL.REACTION, Lactate, PLT1_Platelet.Count_x10.9.L, WBC1_WBC_x10.9.L, CREAT_Creatinine_umol.L, POCPO2_paO2.POC_mmHg,  POCPCO2_paCO2.POC_mmHg)

unique(all_clinical$project_id)
str(all_clinicalb)

#####################################
# add new column ventilation status
#######################################
n <- 1381
v <- rep(3, n)
v

all_clinical1 <- cbind(all_clinicalb, ventilation = v)

str(all_clinical1)


#########################################################################
##### select day 1 session 1 only 
#########################################################################

first_pelod <- subset(all_clinical1, day.x.x==1 & session.x.x==1)
str(first_pelod)
duplicated(first_pelod)
unique(first_pelod$project_id)

###########################################################
## add in FiO2 from vent data for calculation of Pao2/fio2
###########################################################

##### need to load in from vent, match to time of PaO2
str(vent_data1)
vent_fio2 <- select(vent_data1, project_id,  taken_datetime, R.FIO2_.)
str(vent_fio2)

str(labs_O23)
paO2 <- select(labs_O23, project_id, day, session, collected_datetime)

O2 <- left_join(paO2, vent_fio2, by= 'project_id')
str(O2)

O2_a <- O2 %>% 
group_by(project_id) %>%
mutate(dateDiff = abs(taken_datetime - collected_datetime)) 

O2_b <- O2_a %>%
group_by(project_id, collected_datetime) %>%
filter(dateDiff == min(dateDiff)) %>%
ungroup()

str(O2_b) 

####select 1st session only

first_fio2 <- subset(O2_b, day==1 & session==1)
str(first_fio2)
unique(first_fio2$project_id)
duplicated(first_fio2)

first_fio2a <- first_fio2 %>% distinct()

##join vent to clinical data

all_clinical2 <- left_join(first_pelod, first_fio2a, by = "project_id")
str(all_clinical2)

unique(all_clinical2$project_id)
## select only columns need

all_clinical2 <- select(all_clinical2, project_id, day.x.x, session.x.x, datetime, MAP, R.GOSH.COMFORT.SCORE, R.GLASGOW.COMA.SCALE.SCORE, R.GOSH.COMFORT.MUSCLE.RELAX, PUPIL.REACTION, Lactate, PLT1_Platelet.Count_x10.9.L, WBC1_WBC_x10.9.L,CREAT_Creatinine_umol.L, POCPO2_paO2.POC_mmHg,  POCPCO2_paCO2.POC_mmHg, ventilation, R.FIO2_.)
str(all_clinical2)
unique(all_clinical2$project_id)

duplicated(all_clinical2)
all_clinical3 <- all_clinical2 %>% distinct()

str(all_clinical3)
unique(all_clinical3$project_id)

############################################
##calculate pao2/fio2
###############################################

##get fio2 into fraction

all_clinical3$fio2 <- all_clinical3$R.FIO2_. / 100

##calculate pao2/fio2

all_clinical3$O2 <- all_clinical3$POCPO2_paO2.POC_mmHg / all_clinical3$fio2

str(all_clinical3)
unique(all_clinical3$project_id)
duplicated(all_clinical3)

#####################################
##create age groups for mbp and Cr
######################################

# bring in age_data from demographics

age_data_pelod <- age_data %>% 
  mutate(agegroup = case_when(
        age_in_months < 1   ~"0-1",
      age_in_months >= 1 & age_in_months < 12 ~ "1-11",
      age_in_months >= 12 & age_in_months < 24 ~ "12-23",
      age_in_months >= 24             ~ "24-59"))
    
    age_data_pelod$agegroup = factor(
      age_data_pelod$agegroup,
      level = c("0-1", "1-11","12-23", "24-59"))

str(age_data_pelod)

age_peloda <- select(age_data_pelod, project_id, agegroup)

##############################################
##join age to first pelod
#############################################

first_pelod1 <- inner_join(all_clinical3, age_peloda, by="project_id")
str(first_pelod1)
unique(first_pelod1$project_id)

duplicated(first_pelod1)
##############################################################
# create new pelod score variables for each variable
######################################################

### GCS
first_pelod1$GCS_score <-ifelse(first_pelod1$R.GLASGOW.COMA.SCALE.SCORE == 3 | first_pelod1$R.GLASGOW.COMA.SCALE.SCORE == 4, 4, 
                        ifelse(first_pelod1$R.GLASGOW.COMA.SCALE.SCORE >= 5 | first_pelod1$R.GLASGOW.COMA.SCALE.SCORE <= 10, 1, 
                        ifelse(first_pelod1$R.GLASGOW.COMA.SCALE.SCORE >= 11, 0, 0)))

### pupils
first_pelod1$pupil_score <-ifelse(first_pelod1$PUPIL.REACTION == "Both reactive", 0, 
                            ifelse(first_pelod1$PUPIL.REACTION == "Both fixed", 5, 0))

### lactate
first_pelod1$lactate_score <-ifelse(first_pelod1$Lactate < 5, 0, 
                        ifelse(first_pelod1$Lactate >= 5 | first_pelod$Lactate  <= 10, 1, 
                        ifelse(first_pelod1$Lactate >= 11, 4, 0)))

### WBC
first_pelod1$wbc_score <-ifelse(first_pelod1$WBC1_WBC_x10.9.L > 2, 0, 
                            ifelse(first_pelod1$WBC1_WBC_x10.9.L <= 2,2, 0))

###Plts
first_pelod1$plts_score <-ifelse(first_pelod1$PLT1_Platelet.Count_x10.9.L < 76, 2, 
                        ifelse(first_pelod1$PLT1_Platelet.Count_x10.9.L >= 77 | first_pelod1$PLT1_Platelet.Count_x10.9.L <= 141, 1, 
                        ifelse(first_pelod1$PLT1_Platelet.Count_x10.9.L >= 142, 0, 0)))

###CO2
first_pelod1$co2_score <-ifelse(first_pelod1$POCPCO2_paCO2.POC_mmHg <= 58, 0, 
                        ifelse(first_pelod1$POCPCO2_paCO2.POC_mmHg >= 59 | first_pelod1$POCPCO2_paCO2.POC_mmHg <= 94, 1, 
                        ifelse(first_pelod1$POCPCO2_paCO2.POC_mmHg >= 95, 3, 0)))

###O2
first_pelod1$O2_score <-ifelse(first_pelod1$O2 <= 60, 2, 
                            ifelse(first_pelod1$O2 >= 61 ,0, 0))

str(first_pelod1)
######################################################################
## create subset df to calculate scores for variables with age catogories
######################################################################

age_pelod <- select(first_pelod1, project_id, MAP, CREAT_Creatinine_umol.L, agegroup)
str(age_pelod)

#############################################################
##create new variables based on age and values for Cr and MAP
###############################################################

##creatinine score

age_pelod$Cr_score <- ifelse(age_pelod$agegroup == "0-1" & age_pelod$CREAT_Creatinine_umol.L <= 69, 0, 
                        ifelse(age_pelod$agegroup == "0-1" & age_pelod$CREAT_Creatinine_umol.L >= 70, 2,
                        ifelse(age_pelod$agegroup == "1-11" & age_pelod$CREAT_Creatinine_umol.L <=22, 0,
                        ifelse(age_pelod$agegroup == "1-11" & age_pelod$CREAT_Creatinine_umol.L >= 23, 2,
                        ifelse(age_pelod$agegroup == "12-23" & age_pelod$CREAT_Creatinine_umol.L <= 34, 0,
                        ifelse(age_pelod$agegroup == "12-23" & age_pelod$CREAT_Creatinine_umol.L >= 35, 2,
                        ifelse(age_pelod$agegroup == "24-48" & age_pelod$CREAT_Creatinine_umol.L <= 50, 0,
                        ifelse(age_pelod$agegroup == "24-48" & age_pelod$CREAT_Creatinine_umol.L >= 51, 2, 0))))))))

#MAP score

age_pelod$map_score <- ifelse(age_pelod$agegroup == "0-1" & age_pelod$MAP >= 46, 0, 
                        ifelse(age_pelod$agegroup == "0-1" & age_pelod$MAP >= 31 | age_pelod$MAP <= 45, 2,
                        ifelse(age_pelod$agegroup == "0-1" & age_pelod$MAP >= 17 | age_pelod$MAP <= 30, 3,
                        ifelse(age_pelod$agegroup == "0-1" & age_pelod$MAP <= 16, 6,
                       ifelse(age_pelod$agegroup == "1-11" & age_pelod$MAP >= 55, 0, 
                        ifelse(age_pelod$agegroup == "1-11" & age_pelod$MAP >= 39 | age_pelod$MAP <= 54, 2,
                        ifelse(age_pelod$agegroup == "1-11" & age_pelod$MAP >= 25 | age_pelod$MAP <= 38, 3,
                        ifelse(age_pelod$agegroup == "1-11" & age_pelod$MAP <= 24, 6,
                       ifelse(age_pelod$agegroup == "12-23" & age_pelod$MAP >= 60, 0, 
                        ifelse(age_pelod$agegroup == "12-23" & age_pelod$MAP >= 44 | age_pelod$MAP <= 59, 2,
                        ifelse(age_pelod$agegroup == "12-23" & age_pelod$MAP >= 31 | age_pelod$MAP <= 43, 3,
                        ifelse(age_pelod$agegroup == "12-23" & age_pelod$MAP <= 30, 6,
                       ifelse(age_pelod$agegroup == "23-48" & age_pelod$MAP >= 62, 0, 
                        ifelse(age_pelod$agegroup == "23-48" & age_pelod$MAP >= 46 | age_pelod$MAP <= 61, 2,
                        ifelse(age_pelod$agegroup == "0-1" & age_pelod$MAP >= 32 | age_pelod$MAP <= 45, 3,
                        ifelse(age_pelod$agegroup == "0-1" & age_pelod$MAP <= 31, 6, 0 ))))))))))))))))


str(age_pelod)

##################################
##join age scores back to main df
#################################

##subset variable need

age_pelod1 <- select(age_pelod, project_id, Cr_score, map_score)

##join datasets

first_pelod2 <- inner_join(first_pelod1, age_pelod1, by = "project_id")
str(first_pelod2)

duplicated(first_pelod2)

first_pelod2 <- first_pelod2 %>% distinct()
unique(first_pelod2$project_id)
str(first_pelod2)

#########################
##calculate pelod score
##########################

# change NA's to 0
first_pelod2$GCS_score[is.na(first_pelod2$GCS_score)] <- 0
first_pelod2$pupil_score[is.na(first_pelod2$pupil_score)] <- 0
first_pelod2$lactate_score [is.na(first_pelod2$lactate_score )] <- 0
first_pelod2$co2_score[is.na(first_pelod2$co2_score)] <- 0
first_pelod2$O2_score[is.na(first_pelod2$O2_score)] <- 0
first_pelod2$wbc_score[is.na(first_pelod2$wbc_score)] <- 0
first_pelod2$plts_score[is.na(first_pelod2$plts_score)] <- 0
first_pelod2$Cr_score[is.na(first_pelod2$Cr_score)] <- 0
first_pelod2$map_score[is.na(first_pelod2$map_score)] <- 0

## sum rows
first_pelod2$pelod_score <- first_pelod2$ventilation + first_pelod2$GCS_score + first_pelod2$pupil_score + first_pelod2$lactate_score + first_pelod2$co2_score + first_pelod2$O2_score + first_pelod2$wbc_score + first_pelod2$plts_score + first_pelod2$Cr_score + first_pelod2$map_score

str(first_pelod2)
unique(first_pelod2$project_id)
duplicated(first_pelod2)


pelod_first <- select(first_pelod2, project_id, pelod_score)

write.csv(pelod_first, "~/files/datafiles/firstpelod.csv")

str(pelod_first)
unique(pelod_first$project_id)

###kepp highest score for those with repeats

pelod_first1 <- pelod_first %>% group_by(project_id) %>%
     slice(which.max(pelod_score)) %>%
     ungroup()
     
str(pelod_first1)
unique(pelod_first1$project_id)

###summary of pelod
hist(pelod_first$pelod_score)

summary(pelod_first$pelod_score)

#######################################
##comfort score
#########################################

str(clinicalstatus_comfort3)

comfortscore_first <- subset(clinicalstatus_comfort3, day==1 & session==1)
str(comfortscore_first)

unique(comfortscore_first$project_id)

summary(comfortscore_first$R.GOSH.COMFORT.SCORE)

####################################
###paralysed
#####################################

str(clinicalstatus_paralysis3)

paralysis_first <- subset(clinicalstatus_paralysis3, day==1 & session==1)
str(paralysis_first)

unique(paralysis_first$project_id)

t.paralysis <- table(paralysis_first$R.GOSH.COMFORT.MUSCLE.RELAX)















##################################Script 4 – Demographic exploration patients with and without OSI data##########################################################


#########################
# load in data sets
#############################

##load in complete 01

demographic01_data <- xap.read_table("complete01_caboodle_patient_demographics") # read in variables table for all patients

# check data has loaded
head(demographic01_data)
dim(demographic01_data)
tail(demographic01_data)

##load in complete 02

demographic02_data <- xap.read_table("complete02_caboodle_patient_demographics") # read in variables table for all patients

# check data has loaded
head(demographic02_data)
dim(demographic02_data)
tail(demographic02_data)

##load in partial

demographic_partial <- xap.read_table("partial_caboodle_patient_demographics") # read in variables table for all patients

# check data has loaded
head(demographic_partial)
dim(demographic_partial)
tail(demographic_partial)

##########################
##join datasets together
#########################

demographic_data1 <- rbind(demographic01_data, demographic02_data)

head(demographic_data1)
dim(demographic_data1)
tail(demographic_data1)

demographic_dataa <- rbind(demographic_data1, demographic_partial)

str(demographic_dataa)

##########################
##load in OSI group
###########################

OSIgroup <- xap.read_table("osigroupjuly")
str(OSIgroup)

###create new column for OSI yes/no

n <- 251
OSI <- rep('yes', n)
OSI

OSIgroup1<- cbind(OSIgroup, OSI = OSI)

str(OSIgroup1)

##get rid of id column
OSIgroup2 <- select(OSIgroup1, project_id, OSI)
str(OSIgroup2)

#############################################
###join OSI group to full demo
############################################

demographic_data_osi <- full_join(demographic_dataa, OSIgroup2, by="project_id")
str(demographic_data_osi)

#######change NA into no

demographic_data_osi$OSI[is.na(demographic_data_osi$OSI)] <- 'no'

####################
# explore gender
######################

t.genderosi <- table(demographic_data_osi$sex, demographic_data_osi$OSI)

addmargins(t.genderosi)
round(prop.table(t.genderosi)*100, 2) #to give percentage

###stats difference

chisq <- chisq.test(demographic_data_osi$sex, demographic_data_osi$OSI)
chisq

###############################
# exploring age
###################################

##load in data set complete 01
age01_data <- xap.read_table("complete01_wp2_physio_details_check")
str(age01_data)

##load in data set complete 02
age02_data <- xap.read_table("complete02_wp2_physio_details_check")
str(age02_data)

##load in partial
age_partial <- xap.read_table("partial_wp2_physio_details_check")
str(age_partial)

#### join age data sets

age_data1 <- rbind(age01_data, age02_data)
head(age_data1)
str(age_data1)

age_dataa <- rbind(age_data1, age_partial)
str(age_dataa)

class (age_dataa$age_in_months) #this is a character needs to be integer
age_dataa[c(3,4,6)] <- lapply(age_dataa[c(3,4,6)], as.numeric)
str(age_dataa)

#############################################
###join OSI group to full age
############################################

age_data_osi <- full_join(age_dataa, OSIgroup2, by="project_id")
str(age_data_osi)

#######change NA into no

age_data_osi$OSI[is.na(age_data_osi$OSI)] <- 'no'


hist(age_data_osi$age_in_months)

median_age <- age_data_osi %>% 
group_by(OSI) %>% 
  summarize(median = median(age_in_months))
            
 osiage_quant <- age_data_osi %>% 
group_by(OSI) %>%             
summarise(age_in_months = quantile(age_in_months, c(0.25, 0.5, 0.75)))
            
            #range = range(age_in_months))

wilcox.test(age_data_osi$age_in_months ~ age_data_osi$OSI, var.equal = FALSE)


#####################################
### weight 
#####################################

## load in data set 1
weight01_data <- xap.read_table("complete01w_caboodle_patient_selected_flowsheetrows_clin_pivot")
str(weight01_data)

weight01_data <- select(weight01_data, project_id, taken_datetime, R.DRUG.CALCULATION.WEIGHT_grams, WEIGHT.SCALE_grams)
weight01_data[c(3,4)] <- lapply(weight01_data[c(3,4)], as.integer)
str(weight01_data)
## load in data set 2

weight02_data <- xap.read_table("complete02w_caboodle_patient_selected_flowsheetrows_clin_pivot")
str(weight02_data)

weight02_data <- select(weight02_data, project_id, taken_datetime, R.DRUG.CALCULATION.WEIGHT_grams, WEIGHT.SCALE_grams)
weight02_data[c(3,4)] <- lapply(weight02_data[c(3,4)], as.integer)
str(weight02_data)

##load in partial 

weight_p <- xap.read_table("partialw_caboodle_patient_selected_flowsheetrows_clin_pivot")
str(weight_p)

weight_p <- select(weight_p, project_id, taken_datetime, R.DRUG.CALCULATION.WEIGHT_grams, WEIGHT.SCALE_grams)
weight_p[c(3,4)] <- lapply(weight_p[c(3,4)], as.integer)
str(weight_p)

##cominbe data sets

weight_dataa <- rbind(weight01_data, weight02_data)
weight_data <- rbind(weight_dataa, weight_p)

str(weight_data)

# combine to one column
weight_data1 <- weight_data %>% 
    mutate(weight = ifelse(is.na(weight_data$WEIGHT.SCALE_grams), weight_data$R.DRUG.CALCULATION.WEIGHT_grams, weight_data$WEIGHT.SCALE_grams))
str(weight_data1)

tail(weight_data1)

### link weight to date of first physio

#load in physio dates data set 1

physiotimes1_data <- xap.read_table("complete01_wp2_physio_times_check") # read in variables table for all patients

##load in physio times data set 2

physiotimes2_data <- xap.read_table("complete02_wp2_physio_times_check")

##load partial

physiotimes_p<- xap.read_table("partial_wp2_physio_times_check")

##combine data sets

physio_firsta <- rbind(physiotimes1_data, physiotimes2_data)
physio_first <- rbind(physio_firsta, physiotimes_p)
str(physio_first)

##pick first session
physio_first <- subset(physio_first, day == 1 & session == 1)
str(physio_first)

# join datasets

weight_data2 <- select(weight_data1, project_id, taken_datetime, weight)

weight_data3 <- left_join(physio_first, weight_data2, by = "project_id") 

str(weight_data3)

#find difference between dates/times 

weight_data4 <- weight_data3 %>%
 mutate(dateDiff = (weight_data3$datetime - weight_data3$taken_datetime))
str(weight_data4) 

## filter to 2 weeks prior to physio only (doesnt work with negative numbers)

weight_data5 <- filter(weight_data4, weight_data4$dateDiff %in% (0:1209600))
str(weight_data5)

#filter dates to keep only closest (min) datediff with a value (not NA), grouped by id and index datetime

weight_data5 <- weight_data5[complete.cases(weight_data5), ] 

weight_data6 <- weight_data5 %>% 
group_by(weight_data5$project_id) %>%
filter(dateDiff == min(dateDiff))

weight_data6 <- weight_data6 %>%
        ungroup()
        
str(weight_data6)
head(weight_data6)

####################################
#####join to OSI group
#################################

str(OSIgroup)

weight_osi <- full_join(weight_data6, OSIgroup2, by="project_id")
str(weight_osi)

duplicated(weight_osi$project_id)

weight_osi1 <- weight_osi  %>% distinct(weight_osi$project_id, .keep_all = TRUE)

str(weight_osi1)

#######change NA into no

weight_osi1$OSI[is.na(weight_osi1$OSI)] <- 'no'

###stats diff

osimedian_weight <- weight_osi1 %>% 
group_by(OSI) %>% 
  summarize(median = median(weight))
  
osiweight_quant <- weight_osi1 %>% 
group_by(OSI) %>%  summarise(weight = quantile(weight, c(0.25, 0.5, 0.75)))  
            
wilcox.test(weight_osi1$weight ~ weight_osi1$OSI)

######################
# Exploring which ICU
######################

##load in data set 1
wardstay01_data <- xap.read_table("complete01_caboodle_patient_ward_stays") 
str(wardstay01_data)

##load in data set 2
wardstay02_data <- xap.read_table("complete02_caboodle_patient_ward_stays") 
str(wardstay02_data)

##load in partial data
wardstay_p <- xap.read_table("partial_caboodle_patient_ward_stays") 
str(wardstay_p)

##join 2 data sets toegther

wardstay_dataa <- rbind(wardstay01_data, wardstay02_data)
wardstay_data <- rbind(wardstay_dataa, wardstay_p)

str(wardstay_data)

tableICU <- table(wardstay_data$project_id, wardstay_data$ward_code)
print(tableICU)

unique(wardstay_data$ward_code)

wardstay_data[109,]

# need to make new variables picu, cicu, nicu 

wardstay_data1 <- wardstay_data %>%    #seperates out PICU and CICU
mutate(CICU = ifelse(wardstay_data$ward_code=='CICU', 1, 0),
         PICU= ifelse(wardstay_data$ward_code=='PICU', 1, 0),
         NICU= ifelse(wardstay_data$ward_code=='ALLIGATOR' |wardstay_data$ward_code== 'NICU', 1, 0))
         
str(wardstay_data1)

##############################
###find unit for first session
###############################

#load in physio dates data set 1

physiotimes1_data <- xap.read_table("complete01_wp2_physio_times_check") # read in variables table for all patients

##load in physio times data set 2

physiotimes2_data <- xap.read_table("complete02_wp2_physio_times_check")

##load partial

physiotimes_p<- xap.read_table("partial_wp2_physio_times_check")

##combine data sets

physio_firsta <- rbind(physiotimes1_data, physiotimes2_data)
physio_first <- rbind(physio_firsta, physiotimes_p)
str(physio_first)

##pick first session
physio_first <- subset(physio_first, day == 1 & session == 1)
str(physio_first)

###############################################
##join data sets by project id and nearest date
################################################

# join datasets

ICU_unit <- left_join(physio_first, wardstay_data1, by = "project_id") 

str(ICU_unit)

#find difference between dates/times 

ICU_unit1<- ICU_unit %>%
 mutate(dateDiff = (ICU_unit$datetime - ICU_unit$start_datetime))
str(ICU_unit1) 

## filter to 2 weeks prior to physio only (doesnt work with negative numbers)

ICU_unit2 <- filter(ICU_unit1, ICU_unit1$dateDiff %in% (0:1209600))
str(ICU_unit2)

#filter dates to keep only closest (min) datediff with a value (not NA), grouped by id and index datetime

#ICU_unit2 <- weight_data5[complete.cases(weight_data5), ] 

ICU_unit3<- ICU_unit2 %>% 
group_by(ICU_unit2$project_id) %>%
filter(dateDiff == min(dateDiff))  %>%
        ungroup()
        
str(ICU_unit3)

unique(ICU_unit3$project_id)

ICUunit_data1 <- select(ICU_unit3, project_id, CICU, PICU, NICU) 
str(ICUunit_data1)

# now put back into a single variable

ICUunit_data1$CICU <- ifelse(ICUunit_data1$CICU==1, "CICU", NA)
ICUunit_data1$PICU <- ifelse(ICUunit_data1$PICU==1, "PICU", NA)
ICUunit_data1$NICU <- ifelse(ICUunit_data1$NICU==1, "NICU", NA)


ICUunit_data2 <- ICUunit_data1 %>%
  unite("Unit", CICU:NICU, na.rm = TRUE)
str(ICUunit_data2)

# table
t.location <- table(ICUunit_data2$Unit)

addmargins(t.location)
t.location <- round(prop.table(t.location)*100, 2) #to give percentage
print(t.location)

###check for OSI group

unitosi <- full_join(ICUunit_data2, OSIgroup2, by="project_id")
str(unitosi)

###change NA to no in OSI column
unitosi$OSI[is.na(unitosi$OSI)] <- 'no'
 
str(unitosi)

t.unitosi <- table(unitosi$Unit, unitosi$OSI)

addmargins(t.unitosi)
round(prop.table(t.unitosi)*100, 2) #to give percentage

###stats difference

chisq <- chisq.test(unitosi$Unit, unitosi$OSI)
chisq

##########################################
######### exploring length of ICU stay
#########################################

str(wardstay_data)

ICUlength_data <- select(wardstay_data, project_id, ward_stay_days) # selecting 2 columns
str(ICUlength_data)

# combine rows by id, adding values

ICUlength_data_sum <- aggregate(. ~ project_id, data=ICUlength_data, FUN=sum)
str(ICUlength_data_sum)

los_osi <- full_join(ICUlength_data_sum, OSIgroup2, by="project_id")
str(los_osi)

###change NA to no in OSI column
los_osi$OSI[is.na(los_osi$OSI)] <- 'no'

hist(los_osi$ward_stay_days)
los_median <- los_osi %>% 
group_by(OSI) %>% 
  summarize(median = median(ward_stay_days))
  
los_quant <- los_osi %>% 
group_by(OSI) %>%  summarise(ward_stay_days = quantile(ward_stay_days, c(0.25, 0.5, 0.75)))  
            
wilcox.test(los_osi$ward_stay_days ~ los_osi$OSI)

##############################
####  admission type
################################

##load in data set 1
admission01_data <- xap.read_table("complete01_caboodle_patient_hospital_admissions")

dim(admission01_data)
str(admission01_data)

##load in data set 2

admission02_data <- xap.read_table("complete02_caboodle_patient_hospital_admissions")

dim(admission02_data)
str(admission02_data)

###load in partial

admission_p <- xap.read_table("partial_caboodle_patient_hospital_admissions")

##combine datasets

admission_dataa <- rbind(admission01_data, admission02_data)
admission_data <- rbind(admission_dataa, admission_p)
str(admission_data)

unique(admission_data$admission_type)
table(admission_data$admission_type)
is.na(admission_data$admission_type)
admission_data[400:450,]

# create 2 variables

admission_data1 <- admission_data %>%
mutate(Emergency = ifelse(admission_data$admission_type == "Emergency - A&E, Casualty, or Dental Casualty Department" | admission_data$admission_type == "Emergency Transfer" | admission_data$admission_type == "Emergency - Consultant Clinic" | admission_data$admission_type == "Emergency - Bed Bureau" | admission_data$admission_type == "Emergency - Other" | admission_data$admission_type == "Baby Born Elsewhere" | admission_data$admission_type == "Emergency - via A&E of another Health Care Provider", 1, 0),
        Elective = ifelse(admission_data$admission_type == "Elective - Planned" | admission_data$admission_type == "Elective - Booked" | admission_data$admission_type == "Non-Emergency Transfer" | admission_data$admission_type == "Elective - Waiting List", 1, 0))

str(admission_data1)

admission_data1$Emergency = ifelse(admission_data1$Emergency==1, "Emergency", NA)
admission_data1$Elective = ifelse(admission_data1$Elective==1, "Elective", NA)

admission_data1 <- admission_data1 %>%
  unite("admission.type", Emergency:Elective, na.rm = TRUE)

type_osi <- full_join(admission_data1, OSIgroup2, by="project_id")
str(type_osi)

###change NA to no in OSI column
type_osi$OSI[is.na(type_osi$OSI)] <- 'no'


t.type <- table(type_osi$admission.type, type_osi$OSI)

addmargins(t.type)
round(prop.table(t.type)*100, 2) #to give percentage

###stats difference

chisq <- chisq.test(type_osi$admission.type, type_osi$OSI)
chisq

###############################################
##pelod
###############################################

###read in pelod data

pelod_first <- xap.read_table("firstpelod")

#####join session times to osi group

pelod_osi <- full_join(pelod_first, OSIgroup2, by="project_id")
str(pelod_osi)

###change NA to no in OSI column
pelod_osi$OSI[is.na(pelod_osi$OSI)] <- 'no'

sum(is.na(pelod_osi$pelod_score))

##remove NAs

pelod_osi1<- pelod_osi[complete.cases(pelod_osi), ]
str(pelod_osi1)

####explore
hist(pelod_osi1$pelod_score)

osimedian_pelod <- pelod_osi1 %>% 
group_by(OSI) %>% 
  summarize(median = median(pelod_score))
            
osipelod_quant <- pelod_osi1 %>% 
group_by(OSI) %>%  summarise(pelod_score = quantile(pelod_score, c(0.25, 0.5, 0.75)))  

wilcox.test(pelod_osi1$pelod_score ~ pelod_osi1$OSI)

table(pelod_osi1$OSI)

#####################################################
##COVID
#################################################

str(OSIgroup2)

lab1_data <- xap.read_table("complete01_caboodle_patient_selected_lab_components_all_pivot")
str(lab1_data)

lab1_data1 <- select(lab1_data, project_id, collected_datetime, COVID19RES_SARS.CoV.2.by.PCR.Result)
str(lab1_data1)

lab2_data <- xap.read_table("complete02_caboodle_patient_selected_lab_components_all_pivot")
str(lab2_data)

lab2_data1 <- select(lab2_data, project_id, collected_datetime, COVID19RES_SARS.CoV.2.by.PCR.Result)
str(lab2_data1)

labpart <- xap.read_table("partial_caboodle_patient_selected_lab_components_all_pivot")
str(labpart)

labpart1 <- select(labpart, project_id, collected_datetime, COVID19RES_SARS.CoV.2.by.PCR.Result)
str(labpart1)

###join together

lab_covid <- rbind(lab1_data1, lab2_data1)
lab_covid1 <- rbind(lab_covid, labpart1)
str(lab_covid1)

#####################################
####find results during admission
####################################

str(admission_data)
adm_1 <- select(admission_data, project_id, start_datetime, end_datetime)
str(adm_1)

###join and filter between dates

covid_all <- inner_join(lab_covid1, adm_1, by="project_id")
str(covid_all)

covid_all1 <- filter(covid_all, collected_datetime >= start_datetime & collected_datetime <= end_datetime)
str(covid_all1)

table(covid_all1$project_id, covid_all1$COVID19RES_SARS.CoV.2.by.PCR.Result)

###create new variable
covid_all1$covid <- ifelse(covid_all1$COVID19RES_SARS.CoV.2.by.PCR.Result == "RNA Detected", "Yes", "No")
str(covid_all1)

###change NAs to no

covid_all1$covid[is.na(covid_all1$covid)] <- 'No'

unique(covid_all1$project_id)

########join to OSI group

covid_osi <- inner_join(OSIgroup2, covid_all1, by="project_id")
str(covid_osi)

unique(covid_osi$project_id)

###subset those with yes

covid_positive<- subset(covid_osi, covid == 'Yes')
str(covid_positive)


####no covid cases in osi 1.1

######################################
# explore episodes, diagnosis
######################################

## load in data set complete 01
episode01_data <- xap.read_table("complete01_caboodle_patient_episodes") # read in variables table for all patients

# check data has loaded
head(episode01_data)
dim(episode01_data)
tail(episode01_data)

##load in data set complete 02

episode02_data <- xap.read_table("complete02_caboodle_patient_episodes") # read in variables table for all patients

# check data has loaded
head(episode02_data)
dim(episode02_data)
tail(episode02_data)

##load in partial

episode_partial <- xap.read_table("partial_caboodle_patient_episodes") # read in variables table for all patients

# check data has loaded
str(episode_partial)

##join data sets

episode_data1 <- rbind(episode01_data, episode02_data)
dim(episode_data1)
str(episode_data1)
head(episode_data1)
tail(episode_data1)

episode_data <- rbind(episode_data1, episode_partial)
str(episode_data)

# need to remove duplicates
episode_data <- distinct(episode_data, episode_data$project_id, .keep_all = TRUE)
dim(episode_data)
str(episode_data)

##select only columns want
episode_data1 <- select(episode_data, project_id, start_datetime, end_datetime, primary_diagnosis_code, primary_diagnosis_name)

unique(episode_data1$primary_diagnosis_name)
str(episode_data1)

##change NA's to unknown
episode_data1[is.na(episode_data1)] <- 'unknown'
is.na(episode_data1)

#class(episode_data$primary_diagnosis_name)
#episode_data$primary_diagnosis_name <- as.factor(episode_data$primary_diagnosis_name) dont seem to have to change to factor

# create individual variables

diagnosis_data <- episode_data1 %>%    #seperates out and changes diagnosis groups
mutate(Respiratory= ifelse(grepl('^J1', episode_data1$primary_diagnosis_code) | grepl('^J2', episode_data1$primary_diagnosis_code) | grepl('^J4', episode_data1$primary_diagnosis_code) | grepl('^J6', episode_data1$primary_diagnosis_code) | grepl('^J8', episode_data1$primary_diagnosis_code) | grepl('^J9', episode_data1$primary_diagnosis_code) | episode_data1$primary_diagnosis_code == "P271" | episode_data1$primary_diagnosis_code =="P240" | episode_data1$primary_diagnosis_code == "P229" | episode_data1$primary_diagnosis_code == "P285" | episode_data1$primary_diagnosis_code == "Q330" | episode_data1$primary_diagnosis_code == "R068" | episode_data1$primary_diagnosis_code == "R092" | episode_data1$primary_diagnosis_code == "P284"| episode_data1$primary_diagnosis_code == "P288", 1, 0),
    Renal= ifelse(episode_data1$primary_diagnosis_code == "N10X" | episode_data1$primary_diagnosis_code == "Q641", 1, 0),
    Ortho= ifelse(grepl('^M', episode_data1$primary_diagnosis_code), 1, 0),
    Hepatic= ifelse(episode_data1$primary_diagnosis_code == "K270", 1, 0),
    Endocrine= ifelse(grepl('^E', episode_data1$primary_diagnosis_code) | episode_data1$primary_diagnosis_code == "P748", 1, 0),
    Haemonc= ifelse(grepl('^C', episode_data1$primary_diagnosis_code) | episode_data1$primary_diagnosis_code == "D151" | episode_data1$primary_diagnosis_code == "D761" | episode_data1$primary_diagnosis_code == "D487" | episode_data1$primary_diagnosis_code == "D71X", 1, 0),
    Cardiovascular = ifelse(grepl('^Q2', episode_data1$primary_diagnosis_code) | grepl('^I2', episode_data1$primary_diagnosis_code ) | grepl('^I3', episode_data1$primary_diagnosis_code) | grepl('^I4', episode_data1$primary_diagnosis_code) | grepl('^I7', episode_data1$primary_diagnosis_code) | episode_data1$primary_diagnosis_code == "I500" | episode_data1$primary_diagnosis_code == "I971" | episode_data1$primary_diagnosis_code == "T828" | episode_data1$primary_diagnosis_code == "P291" | episode_data1$primary_diagnosis_code == "P293" | episode_data1$primary_diagnosis_code == "P298", 1, 0),
    Neuro= ifelse(grepl('^G', episode_data1$primary_diagnosis_code) | grepl('^S', episode_data1$primary_diagnosis_code) | grepl('^P9', episode_data1$primary_diagnosis_code) | grepl('^I6', episode_data1$primary_diagnosis_code) | episode_data1$primary_diagnosis_code == "T850" | episode_data1$primary_diagnosis_code == "P525" | episode_data1$primary_diagnosis_code == "Q858" | episode_data1$primary_diagnosis_code == "R568" | episode_data1$primary_diagnosis_code == "R55X" | episode_data1$primary_diagnosis_code == "P252" | episode_data1$primary_diagnosis_code == "P219", 1, 0),
    Gastro= ifelse(grepl('^K', episode_data1$primary_diagnosis_code) | grepl('^Q7', episode_data1$primary_diagnosis_code) | episode_data1$primary_diagnosis_code == "R633" | episode_data1$primary_diagnosis_code == "A081" | episode_data1$primary_diagnosis_code == "Q423" | episode_data1$primary_diagnosis_code == "R11X" | episode_data1$primary_diagnosis_code == "Q390" | episode_data1$primary_diagnosis_code == "Q393" | episode_data1$primary_diagnosis_code == "Q411" | episode_data1$primary_diagnosis_code == "T286" | episode_data1$primary_diagnosis_code == "T855" | episode_data1$primary_diagnosis_code == "Q391" | episode_data1$primary_diagnosis_code == "Q392" | episode_data1$primary_diagnosis_code == "P540", 1, 0), 
    Airway= ifelse(grepl('^J3', episode_data1$primary_diagnosis_code) | episode_data1$primary_diagnosis_code == "Q318" | episode_data1$primary_diagnosis_code == "Q320" | episode_data1$primary_diagnosis_code == "Q321" | episode_data1$primary_diagnosis_code == "Q310" | episode_data1$primary_diagnosis_code == "Q311" | episode_data1$primary_diagnosis_code == "R061", 1, 0),
    Sepsis= ifelse(grepl('^A4', episode_data1$primary_diagnosis_code) | episode_data1$primary_diagnosis_code == "P360", 1, 0),
    Other= ifelse(episode_data1$primary_diagnosis_code == "D821" | episode_data1$primary_diagnosis_code == "D180" | episode_data1$primary_diagnosis_code == "U071" | episode_data1$primary_diagnosis_code == "T810" | episode_data1$primary_diagnosis_code == "P398" | episode_data1$primary_diagnosis_code == "T823" | episode_data1$primary_diagnosis_code == "T818" | episode_data1$primary_diagnosis_code == "R560" | episode_data1$primary_diagnosis_code == "T741" | episode_data1$primary_diagnosis_code == "A199" | episode_data1$primary_diagnosis_code == "B349" | episode_data1$primary_diagnosis_code == "T856" | episode_data1$primary_diagnosis_code == "T543"| episode_data1$primary_diagnosis_code == "T813", 1, 0),
    Unknown= ifelse(episode_data1$primary_diagnosis_code == "unknown", 1, 0))

str(diagnosis_data)

# rename so can merge
diagnosis_data$Respiratory <- ifelse(diagnosis_data$Respiratory==1, "Respiratory", NA) 
diagnosis_data$Renal <- ifelse(diagnosis_data$Renal==1, "Renal", NA) 
diagnosis_data$Ortho <- ifelse(diagnosis_data$Ortho==1, "Ortho", NA) 
diagnosis_data$Hepatic <- ifelse(diagnosis_data$Hepatic==1, "Hepatic", NA) 
diagnosis_data$Endocrine <- ifelse(diagnosis_data$Endocrine==1, "Endocrine", NA) 
diagnosis_data$Haemonc <- ifelse(diagnosis_data$Haemonc==1, "Haemonc", NA) 
diagnosis_data$Cardiovascular <- ifelse(diagnosis_data$Cardiovascular==1, "Cardiovascular", NA) 
diagnosis_data$Neuro <- ifelse(diagnosis_data$Neuro==1, "Neuro", NA) 
diagnosis_data$Gastro <- ifelse(diagnosis_data$Gastro==1, "Gastro", NA) 
diagnosis_data$Airway <- ifelse(diagnosis_data$Airway==1, "Airway", NA) 
diagnosis_data$Sepsis <- ifelse(diagnosis_data$Sepsis==1, "Sepsis", NA) 
diagnosis_data$Other <- ifelse(diagnosis_data$Other==1, "Other", NA) 
diagnosis_data$Unknown <- ifelse(diagnosis_data$Unknown==1, "Unknown", NA) 


# need to merge the columns
diagnosis_data1 <- diagnosis_data %>%
  unite("diagnosis", Respiratory:Unknown, na.rm = TRUE)
str(diagnosis_data1)

unique(diagnosis_data1$primary_diagnosis_name)
unique(diagnosis_data1$primary_diagnosis_code)

which(diagnosis_data1$primary_diagnosis_code == "I500") 

diagnosis_data1[391,]

## create table
t.diagnosis <- table(diagnosis_data1$diagnosis)

addmargins(t.diagnosis)
round(prop.table(t.diagnosis)*100, 2)
  
# graph without id linked
ggplot(diagnosis_data1, aes(x=diagnosis_data1$diagnosis, fill=diagnosis_data1$diagnosis)) + 
geom_bar() +
 ggtitle("Patients admission diagnosis") + # add a title
    xlab('Diagnosis group') + ylab('Number of patients') + # add axis names
theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), axis.text.x=element_text(angle=45, hjust=1), legend.position="none") +
scale_fill_viridis_d()

##subset resp

resp_data <- subset(diagnosis_data1, diagnosis =="Respiratory" )
str(resp_data)

resp_data[50:100,]

######create diagnosis subgroups
##cardiac

diagnosis_data2 <- diagnosis_data %>%
mutate(Congenitalcardiac= ifelse(grepl('^Q2', diagnosis_data$primary_diagnosis_code) | diagnosis_data$primary_diagnosis_code =="T828" | diagnosis_data$primary_diagnosis_code =="I288" | diagnosis_data$primary_diagnosis_code =="I370", 1, 0 ),
        Cardiomyopathy= ifelse(diagnosis_data$primary_diagnosis_code == "I420" | diagnosis_data$primary_diagnosis_code == "I422", 1, 0),
        Endo_myocarditis= ifelse(diagnosis_data$primary_diagnosis_code == "I400" | diagnosis_data$primary_diagnosis_code == "I330", 1, 0),
        Cardiacother= ifelse(diagnosis_data$primary_diagnosis_code == "P291" | diagnosis_data$primary_diagnosis_code == "I313" | diagnosis_data$primary_diagnosis_code == "I460" | diagnosis_data$primary_diagnosis_code == "I251" | diagnosis_data$primary_diagnosis_code == "P298" | diagnosis_data$primary_diagnosis_code == "I971" | diagnosis_data$primary_diagnosis_code == "I712" | diagnosis_data$primary_diagnosis_code == "I710" | diagnosis_data$primary_diagnosis_code =="P293" | diagnosis_data$primary_diagnosis_code =="I460" | diagnosis_data$primary_diagnosis_code =="I272"| diagnosis_data$primary_diagnosis_code == "I500", 1, 0),
        Asthma= ifelse(diagnosis_data$primary_diagnosis_code == "J46X", 1, 0),
        Pneumonia= ifelse(diagnosis_data$primary_diagnosis_code == "J181" | diagnosis_data$primary_diagnosis_code == "J122" | diagnosis_data$primary_diagnosis_code == "J22X" | diagnosis_data$primary_diagnosis_code == "J690" | diagnosis_data$primary_diagnosis_code =="J189", 1, 0),
        ARDS= ifelse(diagnosis_data$primary_diagnosis_code == "J80X", 1, 0),
        Bronchiolitis= ifelse(diagnosis_data$primary_diagnosis_code == "J210" | diagnosis_data$primary_diagnosis_code == "J218", 1, 0),
        MAS= ifelse(diagnosis_data$primary_diagnosis_code == "P240", 1, 0),
        Respfailure= ifelse(diagnosis_data$primary_diagnosis_code == "J9690" | diagnosis_data$primary_diagnosis_code == "P229" | diagnosis_data$primary_diagnosis_code == "P285" | diagnosis_data$primary_diagnosis_code == "J9600" | diagnosis_data$primary_diagnosis_code == "J9601" | diagnosis_data$primary_diagnosis_code =="J9699", 1, 0),
        Respother= ifelse(diagnosis_data$primary_diagnosis_code == "J860" | diagnosis_data$primary_diagnosis_code == "J980" | diagnosis_data$primary_diagnosis_code == "J869" | diagnosis_data$primary_diagnosis_code == "J930" | diagnosis_data$primary_diagnosis_code == "R092" | diagnosis_data$primary_diagnosis_code == "J948" | diagnosis_data$primary_diagnosis_code == "Q330" | diagnosis_data$primary_diagnosis_code == "P284" | diagnosis_data$primary_diagnosis_code == "J848" | diagnosis_data$primary_diagnosis_code == "P271" | diagnosis_data$primary_diagnosis_code == "R068" | diagnosis_data$primary_diagnosis_code == "J985"| diagnosis_data$primary_diagnosis_code =="P288" | diagnosis_data$primary_diagnosis_code =="J988", 1, 0))

str(diagnosis_data2)

##remane so can merge

diagnosis_data2$Congenitalcardiac <- ifelse(diagnosis_data2$Congenitalcardiac==1, "Congenitalcardiac", NA) 
diagnosis_data2$Cardiomyopathy <- ifelse(diagnosis_data2$Cardiomyopathy==1, "Cardiomyopathy", NA) 
diagnosis_data2$Endo_myocarditis <- ifelse(diagnosis_data2$Endo_myocarditis==1, "Endo_myocarditis", NA) 
diagnosis_data2$Cardiacother <- ifelse(diagnosis_data2$Cardiacother==1, "Cardiacother", NA) 
diagnosis_data2$Asthma <- ifelse(diagnosis_data2$Asthma==1, "Asthmatic", NA) 
diagnosis_data2$Pneumonia <- ifelse(diagnosis_data2$Pneumonia==1, "Pneumonia", NA) 
diagnosis_data2$ARDS <- ifelse(diagnosis_data2$ARDS==1, "ARDS", NA) 
diagnosis_data2$Bronchiolitis <- ifelse(diagnosis_data2$Bronchiolitis==1, "Bronchiolitis", NA) 
diagnosis_data2$MAS <- ifelse(diagnosis_data2$MAS==1, "MAS", NA)   
diagnosis_data2$Respfailure <- ifelse(diagnosis_data2$Respfailure==1, "Respfailure", NA)    
diagnosis_data2$Respother<- ifelse(diagnosis_data2$Respother==1, "Respother", NA)     
    
    
###merge new columns

diagnosis_data3 <- diagnosis_data2 %>%
  unite("Cardiac_diagnosis", Congenitalcardiac:Cardiacother, na.rm = TRUE)
str(diagnosis_data3)

diagnosis_data4 <- diagnosis_data3 %>%
  unite("Respiratory_diagnosis", Asthma:Respother, na.rm = TRUE)
str(diagnosis_data4)

diagnosis_resp_cardiac <- select(diagnosis_data4, project_id, Cardiac_diagnosis, Respiratory_diagnosis)
str(diagnosis_resp_cardiac)

##############################
###select only for OSI group
###################################

##join to osi group

diagnosis_data_osi <- inner_join(diagnosis_resp_cardiac, OSIgroup, by="project_id")
str(diagnosis_data_osi)


###explore subgroups

t.diagnosis_cardiac <- table(diagnosis_data_osi$Cardiac_diagnosis)

t.diagnosis_resp <- table(diagnosis_resp_cardiac$Respiratory_diagnosis)

#########################################
####mortality
#######################################

osi_longterm <- xap.read_table("osi_longtermnew")
str(osi_longterm)

osi_longterm1 <-inner_join(osi_longterm, OSIgroup2, by="project_id")
str(osi_longterm1)

table(osi_longterm1$disstatus)

############################
####gestation
#########################

table(osi_longterm1$gest_group)

####################################
####group comparison long term
###################################


full_longterm <- xap.read_table("full_longterm")
str(full_longterm)

longterm_osi <- full_join(full_longterm, OSIgroup2)
str(longterm_osi)
longterm_osi$OSI[is.na(longterm_osi$OSI)] <- 'no'

table(longterm_osi$OSI)

#####################################
#####gest
######################################

table(longterm_osi$gest_group, longterm_osi$OSI)

chisq <- chisq.test(longterm_osi$gest_group, longterm_osi$OSI)
chisq

#############################
###mortality
################################

table(longterm_osi$disstatus, longterm_osi$OSI)
fisher.test(longterm_osi$gest_group, longterm_osi$OSI)


##############
####pim3
##############

osimedian_pim <- longterm_osi %>% 
group_by(OSI) %>% 
  summarize(median = median(pim3, na.rm = TRUE))
            
osipim_quant <- longterm_osi %>% 
group_by(OSI) %>%  summarise(pim3 = quantile(pim3, c(0.25, 0.5, 0.75), na.rm = TRUE))  

wilcox.test(longterm_osi$pim3 ~ longterm_osi$OSI)












######################################################Script 5 – Ventilation exploration########################################################################

###################################
## load in data
##################################
#################################
##load in data for part 1
##############################

##load in physio times data and check

physiotimes1_data <- xap.read_table("complete01_wp2_physio_times_check")
str(physiotimes1_data)
head(physiotimes1_data)
unique(physiotimes1_data$project_id)

##################################
##load in data part 2
#########################################

##load in physio times data and check

physiotimes2_data <- xap.read_table("complete02_wp2_physio_times_check")
str(physiotimes2_data)
head(physiotimes2_data)
unique(physiotimes2_data$project_id)

######################################
##load in partial
########################################
physiotimespart_data <- xap.read_table("partial_wp2_physio_times_check")
str(physiotimespart_data)
head(physiotimespart_data)
unique(physiotimespart_data$project_id)

########################################
##Join part 1 and 2
##########################################

physiotimes_data <- rbind(physiotimes1_data, physiotimes2_data)
str(physiotimes_data)

##################################
##join to partial
##########################################

physiotimes_data1 <- rbind(physiotimes_data, physiotimespart_data)
str(physiotimes_data1)

########################
#load in vent data
##########################



###################################
##part 1
##################################
vent1_data <- xap.read_table("complete01_caboodle_patient_selected_flowsheetrows_vent_pivot")
str(vent1_data)

###############################
##part 2
###############################

vent2_data <- xap.read_table("complete02_caboodle_patient_selected_flowsheetrows_vent_pivot")
str(vent2_data)

#############################
##partial
##########################

ventpart<- xap.read_table("partial_caboodle_patient_selected_flowsheetrows_vent_pivot")
str(ventpart)

###############################
##join part 1 and 2
##############################

vent_data <- rbind(vent1_data, vent2_data)

###################################
##join to partial
##############################

vent_datax <- rbind(vent_data, ventpart)
str(vent_datax)

# select variables want

vent_data1 <- select(vent_datax, project_id, taken_datetime, R.GOSH.IP.VENTILATOR.TYPE, R.AN.VENT.MODE, R.FIO2_., R.IP.VENT.MODE, R.VENT.PEEP_cm.H2O, R.GOSH.IP.VENT.PEEP.SETTING_cm.H2O, R.INSPIRED.NO.SETTING, R.VENT.PIP.OBS_cm.H2O, R.VENT.MAP_cm.H2O)
str(vent_data1)

# change to numeric

vent_data1[c(5,7:11)] <- lapply(vent_data1[c(5,7:11)], as.numeric)
str(vent_data1)

###########################
## join data frames
###########################
vent <- left_join(physiotimes_data1, vent_data1, by = "project_id" )
str(vent)

## remove rows with all NA in vent columns
vent_clean <- vent[rowSums(is.na(vent[,6:13]))!=8,]
str(vent_clean)

###############################################
# find corresponding values for time of physio
################################################

#find difference between dates/times

vent1 <- vent_clean %>%
 mutate(dateDiff = (vent_clean$datetime - vent_clean$taken_datetime))
 
#filter dates for those between 30 mins and 24 hours prior only

vent2 <- filter(vent1, vent1$dateDiff %in% (0:3600))

#filter dates to keep only closest (min) datediff, grouped by id and index datetime

vent3 <- vent2 %>% 
group_by(vent2$project_id, vent2$datetime) %>%
filter(dateDiff == min(dateDiff))

vent3 <- vent3 %>%
        ungroup()
        
str(vent3)
head(vent3)

summary(vent3)
max(vent3$dateDiff)
unique(vent3$project_id)
#####################################
## create new iNO column. yes/no 
####################################

unique(vent3$R.INSPIRED.NO.SETTING)

# ? get rid of NA id iNo original column

vent3$R.INSPIRED.NO.SETTING[is.na(vent3$R.INSPIRED.NO.SETTING)] <- 0.0

##new iNO column

vent3$iNO <- ifelse(vent3$R.INSPIRED.NO.SETTING==0.0, 'no', 'yes')

str(vent3)

########################################
## create new vent column CV or HFOV
########################################

vent3$ventmode <- ifelse(vent3$R.IP.VENT.MODE == 'HFOV', 2, 1)

str(vent3)

t.ventmode <- table(vent3$ventmode)

addmargins(t.ventmode)
round(prop.table(t.ventmode)*100, 2)

######################################
######################################
##subset for first session only
#######################################
##################################

vent_first <- subset(vent3, day == 1 & session == 1)
str(vent_first)

unique(vent_first$project_id)

############
## iNO
############
t.iNO <- table(vent_first$iNO)

addmargins(t.iNO)
round(prop.table(t.iNO)*100, 2)

## select just those who had iNO 
vent_iNO <- vent_first %>%
filter(vent_first$iNO == 'yes')

str(vent_iNO)

summary(vent_iNO$R.INSPIRED.NO.SETTING)

ggplot(vent_iNO, aes(vent_iNO$R.INSPIRED.NO.SETTING, fill = as.character(vent_iNO$R.INSPIRED.NO.SETTING))) +
  geom_bar() +
  ggtitle('Inhaled nitric oxide setting at time of physiotherapy') +
  xlab('Inhaled iNO (ppm)') + ylab('Number of patients') + # add axis names
  xlim(0,25) +
  theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none") +
   scale_fill_viridis_d()

########################################
## create new vent column CV or HFOV
########################################

str(vent_first)

t.ventmode <- table(vent_first$ventmode)

addmargins(t.ventmode)
round(prop.table(t.ventmode)*100, 2)

####################
# vent mode
######################
t.typevent <- table(vent_first$R.IP.VENT.MODE)

addmargins(t.typevent)
round(prop.table(t.typevent)*100, 2)

ggplot(vent_first, aes(x = vent_first$R.IP.VENT.MODE, fill = vent_first$R.IP.VENT.MODE)) + 
  geom_bar() +
  ggtitle('Modes of ventilation') + # add a title
  xlab('Ventilation modes') + ylab('Number of patients') + # add axis names
 theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), axis.text.x = element_text(angle = 45, hjust=1), legend.position= "none") +
 scale_fill_viridis_d()

##create subgroups of vent

vent_first$pressurevent <- ifelse(vent_first$R.IP.VENT.MODE == 'BIPAP' | vent_first$R.IP.VENT.MODE == 'BIPAP + ASB' | vent_first$R.IP.VENT.MODE == 'BIPAP Assist' | vent_first$R.IP.VENT.MODE == 'PC' | vent_first$R.IP.VENT.MODE == 'PC-AC' | vent_first$R.IP.VENT.MODE == 'PC-SIMV' | vent_first$R.IP.VENT.MODE == 'PC-SIMV / PS' | vent_first$R.IP.VENT.MODE == 'PC-SIMV + PS + VG' | vent_first$R.IP.VENT.MODE == 'Pressure Control' | vent_first$R.IP.VENT.MODE == 'SIMV (PC) + PS' | vent_first$R.IP.VENT.MODE == 'SIMV+PC (PS)' | vent_first$R.IP.VENT.MODE == 'SIMV+PS (PC)', "pressure controlled", NA)

vent_first$volumevent <- ifelse(vent_first$R.IP.VENT.MODE == 'PRVC' | vent_first$R.IP.VENT.MODE == 'PRVC/AC' | vent_first$R.IP.VENT.MODE == 'SIMV (PRVC) + PS' | vent_first$R.IP.VENT.MODE == 'SIMV (PRVC)+PPS' | vent_first$R.IP.VENT.MODE == 'SIMV (PRVC)+PS' | vent_first$R.IP.VENT.MODE == 'SIMV (VC)+PS' | vent_first$R.IP.VENT.MODE == 'SIMV Autoflow' | vent_first$R.IP.VENT.MODE == 'SIMV Autoflow + ASB', "volume controlled", NA  )

vent_first$HFOV <- ifelse(vent_first$R.IP.VENT.MODE == 'HFOV', "HFOV", NA)
vent_first$CPAP_PS <- ifelse(vent_first$R.IP.VENT.MODE == 'CPAP / ASB' | vent_first$R.IP.VENT.MODE == 'PS/CPAP' | vent_first$R.IP.VENT.MODE == 'CPAP-PS', "CPAP_PS", NA)
str(vent_first)

##join columns
vent_first1 <- vent_first %>%
unite("VentilationMode", pressurevent:CPAP_PS, na.rm = TRUE)
str(vent_first1)

##remove na's

unique(vent_first1$VentilationMode)
vent_first2 <- vent_first1[!vent_first1$VentilationMode == "",]
str(vent_first2)


t.vent <- table(vent_first2$VentilationMode)

addmargins(t.vent)
round(prop.table(t.vent)*100, 2)

ggplot(vent_first2, aes(x = vent_first2$VentilationMode, fill = vent_first2$VentilationMode)) + 
  geom_bar() +
  ggtitle('Modes of ventilation') + # add a title
  xlab('Ventilation modes') + ylab('Number of patients') + # add axis names
 theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), axis.text.x = element_text(angle = 45, hjust=1), legend.position= "none") +
 scale_fill_viridis_d()
















##############################################Script 6 – SpO2 first session exploration####################################################################


#################################
##load in data for part 1
##############################

spo2_part1 <- xap.read_table("spo2_part1_first2_july")

str(spo2_part1)

##################################
##load in data part 2
#########################################

spo2_part2 <- xap.read_table("spo2_part2_first2_july")

str(spo2_part2)

#####################################
## load in partial
###################################
spo2_partial <- xap.read_table("spo2_partial_first2_july")

str(spo2_partial)

########################
##join spo2 sets
#########################

spo2_firsta <- rbind (spo2_part1, spo2_part2)
spo2_firstx <- rbind(spo2_firsta, spo2_partial)
str(spo2_firstx)

summary(spo2_firstx)  #no physiologically impossible values

unique(spo2_firstx$project_id)

##########################
##load in OSI group
###########################

OSIgroup <- xap.read_table("osigroupjuly")
str(OSIgroup)

##get rid of id column
OSIgroup2 <- select(OSIgroup, project_id)
str(OSIgroup2)

#############################################
###join OSI group to full demo
############################################

spo2_first <- inner_join(spo2_firstx, OSIgroup2, by="project_id")
str(spo2_first)

unique(spo2_first$project_id)

##################################
###plot raw data, calculate diff time
###################################

spo2_first1<- spo2_first %>%
  arrange(project_id, record_date_time) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time - pre_datetime,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(spo2_first1)

ggplot(spo2_first1, aes(x=diff_secs, y=spo2, color = project_id)) + 
 geom_point(aes(color = project_id), size = 0.5) +
            ggtitle("SpO2 pre and post physiotherapy") + # add a title
    xlab('Time (seconds)') + ylab('SpO2') + # add axis names
    xlim(0,7500) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position="none") +
             scale_color_viridis(discrete = TRUE, option = "D") +
                 geom_vline(xintercept = c(1800, 3600), color = "red")

##############################################################
###create pre and post data set
#############################################################
          
## pre physio
pre_spo2_first <- spo2_first %>% group_by(project_id) %>%
filter(record_date_time > pre_datetime & record_date_time < start_datetime) %>% ungroup()
str(pre_spo2_first)
summary(pre_spo2_first)

#write.csv(pre_spo2_first, "~/files/datafiles/prespo2first.csv")

##read in file
#pre_spo2_first<- xap.read_table("prespo2first")
     
## post physio            
             
post_spo2_first <-  spo2_first %>% group_by(project_id) %>%
filter(record_date_time > datetime & record_date_time < end_datetime) %>% ungroup()
str(post_spo2_first)

summary(post_spo2_first)
             
#write.csv(post_spo2_first, "~/files/datafiles/postspo2first.csv")

##read in file
#post_spo2_first <- xap.read_table("postspo2first")

#########################################################################
# to plot raw data on grpah - calculate time difference from first recorded (baseline)
##check group split has worked
#########################################################################

###pre physio

pre_spo2_first2 <- pre_spo2_first %>%
  arrange(project_id, record_date_time) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time - pre_datetime,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(pre_spo2_first2)

ggplot(pre_spo2_first2, aes(x=diff_secs, y=spo2, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            ggtitle("SpO2 pre physiotherapy") + # add a title
    xlab('Time (secs)') + ylab('SpO2') + # add axis names
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
             
###post physio

 post_spo2_first2 <- post_spo2_first %>%
  arrange(project_id, record_date_time) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time - datetime,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(post_spo2_first2)

ggplot(post_spo2_first2, aes(x=diff_secs, y=spo2, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            ggtitle("SpO2 post physiotherapy") + # add a title
    xlab('Time (secs)') + ylab('SpO2') + # add axis names
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")             
             
########################################
# prepare data to calulate 5 min epochs
######################################
###pre physio, prepare consistent dates times

str(pre_spo2_first2)

pre_spo2_first_2a <- mutate(pre_spo2_first2, spo2_time = as.POSIXct(diff_secs, origin = "1970-01-01"))
str(pre_spo2_first_2a)

####generate 5 min epochs and summaries
pre_spo2_first_5 <- pre_spo2_first_2a %>% group_by(project_id, by5=cut(spo2_time, "5 min")) %>%
  summarise(median=median(spo2), across())
  
str(pre_spo2_first_5)
head(pre_spo2_first_5)

##remove repeated rows 'by 5'

pre_spo2_first_5a <- pre_spo2_first_5 %>% group_by(project_id, by5) %>% 
  filter(row_number()==1) %>%
  ungroup()

str(pre_spo2_first_5a)

###check how many values for each 

table(pre_spo2_first_5a$project_id)

##post physio prepare new times
        
str(post_spo2_first2)

post_spo2_first2a <- mutate(post_spo2_first2, spo2_time = as.POSIXct(diff_secs, origin = "1970-01-01"))
str(post_spo2_first2a)

##create 5 min epochs

post_spo2_first_5 <- post_spo2_first2a %>% group_by(project_id, by5=cut(spo2_time, "5 min")) %>%
  summarise(median=median(spo2), across())
  
str(post_spo2_first_5)
head(post_spo2_first_5)

##remove repeated rows 'by 5'

post_spo2_first_5a <- post_spo2_first_5 %>% group_by(project_id, by5) %>% 
  filter(row_number()==1) %>%
  ungroup()

str(post_spo2_first_5a)

###check how many values for each 

table(post_spo2_first_5a$project_id)

#########################################################################
## draw graph of medians 
#########################################################################

#need to change by into POSIXct from factor

pre_spo2_first_5a$by5 <- as.POSIXct(pre_spo2_first_5a$by5,format='%Y-%m-%d %H:%M:%S')

post_spo2_first_5a$by5 <- as.POSIXct(post_spo2_first_5a$by5,format='%Y-%m-%d %H:%M:%S')

### pre-physio

## plot median SpO2  

fun_color_range <- colorRampPalette(c("lightblue", "navy"))   
my_colors <- fun_color_range(261)

             
pre_plot <- ggplot(pre_spo2_first_5a, aes(x=diff_secs, y=median, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            geom_line() +
            ggtitle("SpO2 pre-physiotherapy") + # add a title
    xlab('Time (seconds)') + ylab('Medians SpO2') + # add axis names
    scale_y_continuous(expand = c(0, 0), limits = c(0, 100)) +
    scale_x_continuous(expand = c(0, 0), limits = c(0,1800)) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_manual(values=my_colors) 
              
## plot median SpO2     
             
post_plot <- ggplot(post_spo2_first_5a, aes(x=diff_secs, y=median, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            geom_line() +
            ggtitle("SpO2 post-physiotherapy") + # add a title
    xlab('Time (seconds)') + ylab(NULL) + # add axis names
     scale_y_continuous(expand = c(0, 0), limits = c(0, 100)) +
    scale_x_continuous(expand = c(0, 0), limits = c(0,3600)) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_manual(values=my_colors) 
                                    
grid.arrange(pre_plot, post_plot, ncol=2)

#####change to 0 decimal places

pre_spo2_first_5a$premedian <- round(pre_spo2_first_5a$median,0)
str(pre_spo2_first_5a)


post_spo2_first_5a$postmedian <- round(post_spo2_first_5a$median,0)
str(post_spo2_first_5a)

##########################################
###5 mins  pre and post add extra column
#########################################

str(pre_spo2_first_5a)
str(post_spo2_first_5a)
##select columns want

prespo2 <- select(pre_spo2_first_5a, project_id, by5, premedian)
postspo2 <- select(post_spo2_first_5a, project_id, by5, postmedian)

##add extra column 

pre_spo2 <- prespo2 %>%
group_by(project_id) %>%
  mutate(label1 = LETTERS[row_number()]) %>%
  ungroup()

post_spo2 <- postspo2 %>%
group_by(project_id) %>%
  mutate(label = LETTERS[row_number()]) %>%
  ungroup()

str(pre_spo2)
str(post_spo2)

##reverse pre spo2 letters

pre_spo2_1 <- pre_spo2 %>%
group_by(project_id) %>%
mutate(label = rev(label1)) %>%
ungroup()

str(pre_spo2_1)

unique(pre_spo2_1$project_id)
unique(post_spo2$project_id)

###################################################################################################################
########################################
###analysis 1 5 min pre vs 5 min post
########################################
#####################################################################################################################

###################################################
##subset pre for just 5min immediately pre "A"
#################################################

pre_spo2_2 <- select(pre_spo2_1, project_id, by5, premedian, label)

pre_spo2_3 <- subset(pre_spo2_2, label == "A")
str(pre_spo2_3)

pre_spo2_4 <- select(pre_spo2_3, project_id, by5, premedian)
str(pre_spo2_4)

###remove row if by5 time not 00:25:00

pre_spo2_5 <- pre_spo2_4[pre_spo2_4$by5 == "1970-01-01 00:25:00",]
str(pre_spo2_5)

#########################################
##subset post for 5 min imm post A
######################################

post_spo2_1 <- subset(post_spo2, label == "A")
str(post_spo2_1)

###remove rows if by5 time not 00:00:00

post_spo2_2 <- post_spo2_1[post_spo2_1$by5 == "1970-01-01 00:00:00",]

str(post_spo2_2)

################################
##join pre and post together
###################################

spo2_prepost_5 <- inner_join(post_spo2_2, pre_spo2_5, by="project_id")
str(spo2_prepost_5)    

unique(spo2_prepost_5$project_id)
sum(is.na(spo2_prepost_5))

########################################
##create difference variable
############################################

spo2_prepost_5$spo2_diff <- spo2_prepost_5$postmedian - spo2_prepost_5$premedian
str(spo2_prepost_5)

ggplot(spo2_prepost_5, aes(x = project_id, y=spo2_diff, colour = project_id)) + 
            geom_point() +
             ggtitle("SpO2 difference post-pre physio") + # add a title
    xlab('Individual patients') + ylab('difference in spo2') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0, color = "black") +
                  geom_hline(yintercept = 15, color = "red")
                 
##################################
##create percentage change variable
####################################

spo2_prepost_5$spo2_perc_change <- (spo2_prepost_5$spo2_diff / spo2_prepost_5$premedian)* 100
str(spo2_prepost_5)


ggplot(spo2_prepost_5, aes(x = project_id, y=spo2_perc_change, colour = project_id)) + 
            geom_point() +
             ggtitle("Percentage SpO2 difference pre-post physio") + # add a title
    xlab('Project id') + ylab(' % difference in SpO2') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") +
             geom_hline(yintercept = 15, color = "red")

spo2_prepost_5$spo2_threshold <- ifelse(spo2_prepost_5$spo2_perc_change < -15, "yes", "no")

str(spo2_prepost_5)

t.spo2 <- table(spo2_prepost_5$spo2_threshold)
print(t.spo2)

###creat new variable

spo2_prepost_5$spo2_result <- ifelse(spo2_prepost_5$spo2_perc_change > 0, 'Improved',
                         ifelse(spo2_prepost_5$spo2_perc_change == 0, 'ISQ',
                         ifelse(spo2_prepost_5$spo2_perc_change< 0 & spo2_prepost_5$spo2_perc_change > -15 , 'Worse', 'AE')))
str(spo2_prepost_5)    


plot5b <- ggplot(spo2_prepost_5, aes(x = project_id, y=spo2_perc_change, colour=spo2_result)) + 
            geom_point(size=0.8) +
             ggtitle("0-5 minutes post physio") + # add a title
    xlab(NULL) + ylab('5 change in 5 minute medians of SpO2') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
        ylim(-35,52) +
            scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
              geom_hline(yintercept = 0, color = "black")
        
        
result1 <- table(spo2_prepost_5$spo2_result)

addmargins(result1)
round(prop.table(result1)*100, 2) #to give percentage

plot5a <- ggplot(spo2_prepost_5, aes(x = premedian, y=spo2_diff, colour=spo2_result)) + 
            geom_point() +
             ggtitle("0-5 minutes post-physiotherapy") + # add a title
    ylab('Absolute change in median SpO2') + xlab(NULL) +
    xlim(100, 50) + ylim(-35,35)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
                              geom_hline(yintercept = 0, color = "black")


#####read in OSI results


osi_5_map<- xap.read_table("osi_5_map")

spo2_prepost_5 <- inner_join(spo2_prepost_5, osi_5_map, by="project_id")
str(spo2_prepost_5)

plot5x <- ggplot(spo2_prepost_5, aes(x = premedian, y=spo2_diff, colour=osi_threshold)) + 
            geom_jitter(width = 0.1) +
             ggtitle("0-5 minutes post-physiotherapy") + # add a title
    ylab('Absolute change in median SpO2') + xlab(NULL) +
    xlim(100, 50) + ylim(-35,35)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("TRUE", "FALSE"),
                        values=c("red", "steelblue4"))  +
                              geom_hline(yintercept = 0, color = "black")

###################################################################################################################
########################################
###analysis 2 5 min pre vs 15 min post
########################################
#####################################################################################################################

###################################################
##subset pre for just 5min immediately pre "A"
#################################################

str(pre_spo2_5)

#########################################
##subset post for 15 min imm post C
######################################

post_spo2_1a <- subset(post_spo2, label == "C")
str(post_spo2_1a)

###remove rows if by5 time not 00:10:00

post_spo2_2a <- post_spo2_1a[post_spo2_1a$by5 == "1970-01-01 00:10:00",]

str(post_spo2_2a)

################################
##join pre and post together
###################################

spo2_prepost_15 <- inner_join(post_spo2_2a, pre_spo2_5, by="project_id")
str(spo2_prepost_15)    

unique(spo2_prepost_15$project_id)
sum(is.na(spo2_prepost_15))

########################################
##create difference variable
############################################


spo2_prepost_15$spo2_diff <- spo2_prepost_15$postmedian - spo2_prepost_15$premedian
str(spo2_prepost_15)

ggplot(spo2_prepost_5, aes(x = project_id, y=spo2_diff, colour = project_id)) + 
            geom_point() +
             ggtitle("SpO2 difference pre-post physio") + # add a title
    xlab('Individual patients') + ylab('difference in spo2') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0, color = "black")
                 
##################################
##create percentage change variable
####################################

spo2_prepost_15$spo2_perc_change <- (spo2_prepost_15$spo2_diff / spo2_prepost_15$premedian)* 100
str(spo2_prepost_15)


ggplot(spo2_prepost_15, aes(x = project_id, y=spo2_perc_change, colour = project_id)) + 
            geom_point() +
             ggtitle("Percentage SpO2 difference pre-post physio") + # add a title
    xlab('Project id') + ylab(' % difference in SpO2') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") +
             geom_hline(yintercept = 15, color = "red")

spo2_prepost_15$spo2_threshold <- ifelse(spo2_prepost_15$spo2_perc_change < -15 , "yes", "no")

str(spo2_prepost_15)

t.spo2 <- table(spo2_prepost_15$spo2_threshold)
print(t.spo2)

###creat new variable

spo2_prepost_15$spo2_result <- ifelse(spo2_prepost_15$spo2_perc_change > 0, 'Improved',
                         ifelse(spo2_prepost_15$spo2_perc_change == 0, 'ISQ',
                         ifelse(spo2_prepost_15$spo2_perc_change < 0 & spo2_prepost_15$spo2_perc_change > -15, 'Worse', 'AE')))
str(spo2_prepost_15)    


plot15b <- ggplot(spo2_prepost_15, aes(x = project_id, y=spo2_perc_change, colour=spo2_result)) + 
            geom_point(size=0.8) +
             ggtitle("10-15 minutes post physio") + # add a title
    xlab(NULL) + ylab(NULL) + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
        ylim(-35,52) +
            scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
        geom_hline(yintercept = 0, color = "black")
        
        
result2 <- table(spo2_prepost_15$spo2_result)

addmargins(result2)
round(prop.table(result2)*100, 2) #to give percentage

plot15a <- ggplot(spo2_prepost_15, aes(x = premedian, y=spo2_diff, colour=spo2_result)) + 
            geom_point() +
             ggtitle("10-15 minutes post-physiotherapy") + # add a title
    ylab(NULL) + xlab(NULL) +
    xlim(100, 50) + ylim(-35, 35) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
         scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
           geom_hline(yintercept = 0, color = "black")


#####read in OSI results

osi_15_map<- xap.read_table("osi_15_map")

spo2_prepost_15 <- inner_join(spo2_prepost_15, osi_15_map, by="project_id")
str(spo2_prepost_15)

plot15x <- ggplot(spo2_prepost_15, aes(x = premedian, y=spo2_diff, colour=osi_threshold)) + 
            geom_jitter(width = 0.1) +
             ggtitle("10-15 minutes post-physiotherapy") + # add a title
    ylab(NULL) + xlab(NULL) +
    xlim(100, 50) + ylim(-35,35)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("TRUE", "FALSE"),
                        values=c("red", "steelblue4"))  +
                              geom_hline(yintercept = 0, color = "black")

###################################################################################################################
########################################
###analysis 3 5 min pre vs 30 min post
########################################
#####################################################################################################################

###################################################
##subset pre for just 5min immediately pre "A"
#################################################

str(pre_spo2_5)

#########################################
##subset post for 30 min imm post F
######################################

post_spo2_30 <- subset(post_spo2, label == "F")
str(post_spo2_30)

###remove rows if by5 time not 00:25:00

post_spo2_30a <- post_spo2_30[post_spo2_30$by5 == "1970-01-01 00:25:00",]

str(post_spo2_30a)

################################
##join pre and post together
###################################

spo2_prepost_30 <- inner_join(post_spo2_30a, pre_spo2_5, by="project_id")
str(spo2_prepost_30)    

unique(spo2_prepost_30$project_id)
sum(is.na(spo2_prepost_30))

########################################
##create difference variable
############################################

spo2_prepost_30$spo2_diff <- spo2_prepost_30$postmedian - spo2_prepost_30$premedian
str(spo2_prepost_30)

ggplot(spo2_prepost_30, aes(x = project_id, y=spo2_diff, colour = project_id)) + 
            geom_point() +
             ggtitle("SpO2 difference pre-post physio") + # add a title
    xlab('Individual patients') + ylab('difference in spo2') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0, color = "black")
                 
##################################
##create percentage change variable
####################################

spo2_prepost_30$spo2_perc_change <- (spo2_prepost_30$spo2_diff / spo2_prepost_30$premedian)* 100
str(spo2_prepost_30)

ggplot(spo2_prepost_30, aes(x = project_id, y=spo2_perc_change, colour = project_id)) + 
            geom_point() +
             ggtitle("Percentage SpO2 difference pre-post physio") + # add a title
    xlab('Project id') + ylab(' % difference in SpO2') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
           
spo2_prepost_30$spo2_threshold <- ifelse(spo2_prepost_30$spo2_perc_change < -15, "yes", "no")

str(spo2_prepost_30)

t.spo2 <- table(spo2_prepost_30$spo2_threshold)
print(t.spo2)

###creat new variable

spo2_prepost_30$spo2_result <- ifelse(spo2_prepost_30$spo2_perc_change > 0, 'Improved',
                         ifelse(spo2_prepost_30$spo2_perc_change == 0, 'ISQ',
                         ifelse(spo2_prepost_30$spo2_perc_change < 0 & spo2_prepost_30$spo2_perc_change > -15, 'Worse', 'AE')))
str(spo2_prepost_30)    


plot30b <- ggplot(spo2_prepost_30, aes(x = project_id, y=spo2_perc_change, colour=spo2_result)) + 
            geom_point(size=0.8) +
             ggtitle("25-30 minutes post physio") + # add a title
    xlab('Individual patients') + ylab('Difference in 5 minute medians of SpO2') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),axis.ticks.x=element_blank(), legend.position = "none")+
        ylim(-35,52) +
            scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
        geom_hline(yintercept = 0, color = "black")
        
        
result3 <- table(spo2_prepost_30$spo2_result)

addmargins(result3)
round(prop.table(result3)*100, 2) #to give percentage

plot30a <- ggplot(spo2_prepost_30, aes(x = premedian, y=spo2_diff, colour =spo2_result)) + 
            geom_point() +
             ggtitle("25-30 minutes post-physiotherapy") + # add a title
    ylab('Absolute change in median SpO2') + xlab('Median SpO2 5 minutes pre-physiotherapy') +
    xlim(100, 50) + ylim(-35, 35) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
         scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
           geom_hline(yintercept = 0, color = "black")

#####read in OSI results

osi_30_map<- xap.read_table("osi_30_map")

spo2_prepost_30 <- inner_join(spo2_prepost_30, osi_30_map, by="project_id")
str(spo2_prepost_30)

plot30x <- ggplot(spo2_prepost_30, aes(x = premedian, y=spo2_diff, colour=osi_threshold)) + 
            geom_jitter(width = 0.1) +
             ggtitle("25-30 minutes post-physiotherapy") + # add a title
    ylab('Absolute change in median SpO2') + xlab('Median SpO2 5 minutes pre-physiotherapy') +
    xlim(100, 50) + ylim(-35,35)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("TRUE", "FALSE"),
                        values=c("red", "steelblue4"))  +
                              geom_hline(yintercept = 0, color = "black")

###################################################################################################################
########################################
###analysis 4 5 min pre vs 60 min post
########################################
#####################################################################################################################

###################################################
##subset pre for just 5min immediately pre "A"
#################################################

str(pre_spo2_5)

#########################################
##subset post for 30 min imm post L
######################################

post_spo2_60 <- subset(post_spo2, label == "L")
str(post_spo2_60)

###remove rows if by5 time not 00:55:00

post_spo2_60a <- post_spo2_60[post_spo2_60$by5 == "1970-01-01 00:55:00",]

str(post_spo2_60a)

################################
##join pre and post together
###################################

spo2_prepost_60 <- inner_join(post_spo2_60a, pre_spo2_5, by="project_id")
str(spo2_prepost_60)    

unique(spo2_prepost_60$project_id)
sum(is.na(spo2_prepost_60))

########################################
##create difference variable
############################################

spo2_prepost_60$spo2_diff <- spo2_prepost_60$postmedian - spo2_prepost_60$premedian
str(spo2_prepost_60)

ggplot(spo2_prepost_60, aes(x = project_id, y=spo2_diff, colour = project_id)) + 
            geom_point() +
             ggtitle("SpO2 difference pre-post physio") + # add a title
    xlab('Individual patients') + ylab('difference in spo2') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0, color = "black")
                 
##################################
##create percentage change variable
####################################

spo2_prepost_60$spo2_perc_change <- (spo2_prepost_60$spo2_diff / spo2_prepost_60$premedian)* 100
str(spo2_prepost_60)


ggplot(spo2_prepost_5, aes(x = project_id, y=spo2_perc_change, colour = project_id)) + 
            geom_point() +
             ggtitle("Percentage SpO2 difference pre-post physio") + # add a title
    xlab('Project id') + ylab(' % difference in SpO2') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
         

spo2_prepost_60$spo2_threshold <- ifelse(spo2_prepost_60$spo2_perc_change < -15, "yes", "no")

str(spo2_prepost_60)
max(spo2_prepost_60$spo2_perc_change)

t.spo2 <- table(spo2_prepost_60$spo2_threshold)
print(t.spo2)

###creat new variable

spo2_prepost_60$spo2_result <- ifelse(spo2_prepost_60$spo2_perc_change > 0, 'Improved',
                         ifelse(spo2_prepost_60$spo2_perc_change == 0, 'ISQ',
                         ifelse(spo2_prepost_60$spo2_perc_change < 0 & spo2_prepost_60$spo2_perc_change > -15, 'Worse', 'AE')))
str(spo2_prepost_60)    


plot60b <- ggplot(spo2_prepost_60, aes(x = project_id, y=spo2_perc_change, colour=spo2_result)) + 
            geom_point(size=0.8) +
             ggtitle("55-60 minutes post physio") + # add a title
    ylab(NULL) + xlab('Individual patients') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), axis.text.x=element_blank(),axis.ticks.x=element_blank(), legend.position = "none")+
        ylim(-35, 52) +
            scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
        geom_hline(yintercept = 0, color = "black")
               
result4 <- table(spo2_prepost_60$spo2_result)

addmargins(result4)
round(prop.table(result4)*100, 2) #to give percentage

plot60a <- ggplot(spo2_prepost_60, aes(x = premedian, y=spo2_diff, colour = spo2_result)) + 
            geom_point() +
             ggtitle("55-60 minutes post-physiotherapy") + # add a title
    ylab(NULL) + xlab('Median SpO2 5 minutes pre-physiotherapy') +
   ylim(-35,35) + xlim(100, 50) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
             geom_hline(yintercept = 0, color = "black")

#####read in OSI results

osi_60_map<- xap.read_table("osi_60_map")

spo2_prepost_60 <- inner_join(spo2_prepost_60, osi_60_map, by="project_id")
str(spo2_prepost_60)

plot60x <- ggplot(spo2_prepost_60, aes(x = premedian, y=spo2_diff, colour=osi_threshold)) + 
            geom_jitter(width = 0.1) +
             ggtitle("55-60 minutes post-physiotherapy") + # add a title
    ylab(NULL) + xlab('Median SpO2 5 minutes pre-physiotherapy') +
    xlim(100, 50) + ylim(-35,35)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("TRUE", "FALSE"),
                        values=c("red", "steelblue4"))  +
                              geom_hline(yintercept = 0, color = "black")
                              
########################
##combine plots
############################

grid.arrange(plot5a, plot15a, plot30a, plot60a, ncol=2, nrow=2)

grid.arrange(plot5x, plot15x, plot30x, plot60x, ncol=2, nrow=2)

##############################################
###repeated measures anova -friedmans 
###########################################

#####get individual datasets
##5 min
str(spo2_prepost_5)  

spo2_5 <- select(spo2_prepost_5, project_id, postmedian, premedian)
str(spo2_5)

names(spo2_5)[names(spo2_5) == "postmedian"] <- "postmedian5"
str(spo2_5)

###15mins

str(spo2_prepost_15)

spo2_15 <- select(spo2_prepost_15, project_id, postmedian)
str(spo2_15)

names(spo2_15)[names(spo2_15) == "postmedian"] <- "postmedian15"
str(spo2_15)

##30mins

spo2_30 <- select(spo2_prepost_30, project_id, postmedian)
str(spo2_30)

names(spo2_30)[names(spo2_30) == "postmedian"] <- "postmedian30"
str(spo2_30)

##60mins
spo2_60 <- select(spo2_prepost_60, project_id, postmedian)
str(spo2_60)

names(spo2_60)[names(spo2_60) == "postmedian"] <- "postmedian60"
str(spo2_60)

####################join together

spo2_change <- full_join(spo2_5, spo2_15, by="project_id")
str(spo2_change)

spo2_change1 <- full_join(spo2_change, spo2_30, by="project_id")
str(spo2_change1)

spo2_change2 <- full_join(spo2_change1, spo2_60, by="project_id")
str(spo2_change2)

###change order of columns
spo2_change3 <- spo2_change2[, c(1, 3, 2, 4, 5, 6)]
str(spo2_change3)

################change to long format

spo2_change4 <- tidyr::gather(spo2_change3, key=time, value=medianspo2, premedian:postmedian60) %>% 
                    arrange(project_id)
                    
head(spo2_change4)
str(spo2_change4)

test <- spo2_change4 %>% friedman_test(medianspo2 ~ time |project_id)
test


test1 <- spo2_change4 %>% friedman_effsize(medianspo2 ~ time |project_id)
test1


test3 <- spo2_change4 %>% wilcox_test(medianspo2 ~ time, paired = TRUE, p.adjust.method = "bonferroni")
test3

#######################################################################

#################################################################################################################
####multilevel regression
################################################################################################################

str(spo2_change4)
unique(spo2_change4$project_id)

#######################################
####convert to factor
################################

spo2_change4$time <- as.factor(spo2_change4$time)
str(spo2_change4)

levels(spo2_change4$time)

#################################################
#####need to bring in other variables
#################################################

####GENDER
#####gender from Demo explor 1.1
str(demographic_dataa)

spo2_gender <- select(demographic_data, project_id, sex)
str(spo2_gender)

####join to osi_change4

spo2_change5 <- left_join(spo2_change4, spo2_gender, by="project_id")
str(spo2_change5)
unique(spo2_change5$project_id)

######AGE
#####age from Demo explor 1.1
str(age_dataa)

spo2_age <- select(age_dataa, project_id, age_in_months)
str(spo2_age)

####join to spo2_change5

spo2_change6 <- left_join(spo2_change5, spo2_age, by="project_id")
str(spo2_change6)
unique(spo2_change6$project_id)

#######WEIGHT
#########weight from Demo explor 1.1

str(weight_data7)
spo2_weight <- select(weight_data7, project_id, weight)
str(spo2_weight)

####join to osi_change6

spo2_change7 <- left_join(spo2_change6, spo2_weight, by="project_id")
str(spo2_change7)
unique(spo2_change7$project_id)

############ADMSSION TYPE
#######type from Demo explor 1.1

str(admission_data1)
spo2_admission <- select(admission_data1, project_id, admission.type)
str(spo2_admission)

####join to osi_change7

spo2_change8 <- left_join(spo2_change7, spo2_admission, by="project_id")
str(spo2_change8)
unique(spo2_change8$project_id)

################PELOD
#####pelod from Demo explor 1.1

str(pelod_first)
spo2_pelod <- select(pelod_first, project_id, pelod_score)
str(spo2_pelod)

####join to osi_change8
spo2_change9 <- left_join(spo2_change8, spo2_pelod, by="project_id")
str(spo2_change9)
unique(spo2_change9$project_id)

unique(spo2_change9$time)

###rename for regression and change reference to premedian

spo2_change9$time <- relevel(spo2_change9$time, "postmedian60")
spo2_change9$time <- relevel(spo2_change9$time, "postmedian30")
spo2_change9$time <- relevel(spo2_change9$time, "postmedian15")
spo2_change9$time <- relevel(spo2_change9$time, "postmedian5")
spo2_change9$time <- relevel(spo2_change9$time, "premedian")

str(spo2_change9)

levels(spo2_change9$time) <- c("5 pre", "0-5 post", "10-15 post", "25-30 post", "55-60 post")

str(spo2_change9)

beanplot(spo2_change9$medianspo2 ~ spo2_change9$time, overallline = "median", beanlines = "median",
            col = list("steelblue1", "steelblue2", "steelblue3", "steelblue", "steelblue4"), border = c("steelblue1", "steelblue2", "steelblue3", "steelblue", "steelblue4"),
        xlab = "Time point in relation to physiotherapy treatment (minutes)", ylab = "Median SpO2")
   
################################
###multi level models
####################################

model1 <- lmer(medianspo2 ~ time + log(weight) + admission.type + log(pelod_score) + (1|project_id), data=spo2_change9)
summary(model1)

confint(model1)

#########################################
############################################
##secondary analysis spo2
#############################################
###########################################

##create new time points 

str(spo2_first)

###5 min pre

spo2_first_1 <- spo2_first %>% 
                mutate(pre5_datetime =(start_datetime - (minutes=300)))

str(spo2_first_1 )

### 0-5 mins post
spo2_first_2 <- spo2_first_1 %>% 
                mutate(post5_datetime =(datetime + (minutes=300)))

str(spo2_first_2)

###10-15 mins post

spo2_first_3 <- spo2_first_2 %>% 
                mutate(post10_datetime =(datetime + (minutes=600)))

str(spo2_first_3)
        
spo2_first_4 <- spo2_first_3 %>% 
                mutate(post15_datetime =(datetime + (minutes=900)))

str(spo2_first_4)

#####25-30 mins post

spo2_first_5 <- spo2_first_4 %>% 
                mutate(post25_datetime =(datetime + (minutes=1500)))

str(spo2_first_5)

spo2_first_6 <- spo2_first_5 %>% 
                mutate(post30_datetime =(datetime + (minutes=1800)))

str(spo2_first_6)

###55-60 mins

spo2_first_7 <- spo2_first_6 %>% 
                mutate(post55_datetime =(datetime + (minutes=3300)))

str(spo2_first_7)

##############################################
######subset raw data into new time frames
##############################################

###0-5 mins

spo2_post5 <- spo2_first_7 %>% group_by(project_id) %>%
filter(record_date_time > datetime & record_date_time < post5_datetime) %>% ungroup()
str(spo2_post5)

####10-15

spo2_post15 <- spo2_first_7 %>% group_by(project_id) %>%
filter(record_date_time > post10_datetime & record_date_time < post15_datetime) %>% ungroup()
str(spo2_post15)

####25-30

spo2_post30 <- spo2_first_7 %>% group_by(project_id) %>%
filter(record_date_time > post25_datetime & record_date_time < post30_datetime) %>% ungroup()
str(spo2_post30)

####55-60

spo2_post60 <- spo2_first_7 %>% group_by(project_id) %>%
filter(record_date_time > post55_datetime & record_date_time < end_datetime) %>% ungroup()
str(spo2_post60)

#################################################################
#########calculate 15% premedian threshold for each patient
################################################################

str(pre_spo2_5)

pre_spo2_5$threshold_85perc <- pre_spo2_5$premedian*0.85

str(pre_spo2_5)

##round to 0 decimal places

pre_spo2_5$threshold_85perc <- round(pre_spo2_5$threshold_85perc, 0)

str(pre_spo2_5)

#########################################################################
###join each time period to pre median, and proportion over threshold
#########################################################################

###################
###0-5 mins
#######################
spo2_post_5 <- inner_join(pre_spo2_5, spo2_post5, by="project_id")
str(spo2_post_5)

##create new above or below threshold

spo2_post_5$threshold <- spo2_post_5$spo2 < spo2_post_5$threshold_85perc

str(spo2_post_5)

table1 <- table(spo2_post_5$threshold)
table1

plot5e <- ggplot(spo2_post_5, aes(x = project_id, y=spo2, colour=threshold)) + 
            geom_point(size=0.8) +
             ggtitle("0-5 minutes post physio") + # add a title
    ylab('SpO2') + xlab(NULL) + # add axis names
    ylim(0,100) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), axis.text.x=element_blank(),axis.ticks.x=element_blank(), legend.position = "none")+
            scale_color_manual(breaks = c("TRUE", "FALSE"),
                        values=c("brown3", "chartreuse3"))  
     
#################
###10-15 mins
###################
spo2_post_15 <- inner_join(pre_spo2_5, spo2_post15, by="project_id")
str(spo2_post_15)

##create new above or below threshold

spo2_post_15$threshold <- spo2_post_15$spo2 < spo2_post_15$threshold_85perc

str(spo2_post_15)

table2 <- table(spo2_post_15$threshold)
table2

plot15e <- ggplot(spo2_post_15, aes(x = project_id, y=spo2, colour=threshold)) + 
            geom_point(size=0.8) +
             ggtitle("10-15 minutes post physio") + # add a title
    ylab(NULL) + xlab(NULL) + # add axis names
    ylim(0,100) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), axis.text.x=element_blank(),axis.ticks.x=element_blank(), legend.position = "none")+
            scale_color_manual(breaks = c("TRUE", "FALSE"),
                        values=c("brown3", "chartreuse3"))  
     
####################
###25-30 mins
####################

spo2_post_30 <- inner_join(pre_spo2_5, spo2_post30, by="project_id")
str(spo2_post_30)

##create new above or below threshold

spo2_post_30$threshold <- spo2_post_30$spo2 < spo2_post_30$threshold_85perc

str(spo2_post_30)

table3 <- table(spo2_post_30$threshold)
table3

plot30e <- ggplot(spo2_post_30, aes(x = project_id, y=spo2, colour=threshold)) + 
            geom_point(size=0.8) +
             ggtitle("25-30 minutes post physio") + # add a title
    ylab('Spo2') + xlab('Individual patients') + # add axis names
    ylim(0,100) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), axis.text.x=element_blank(),axis.ticks.x=element_blank(), legend.position = "none")+
            scale_color_manual(breaks = c("TRUE", "FALSE"),
                        values=c("brown3", "chartreuse3"))  
     
#################
###55-60 mins
##################
spo2_post_60 <- inner_join(pre_spo2_5, spo2_post60, by="project_id")
str(spo2_post_60)

##create new above or below threshold

spo2_post_60$threshold <- spo2_post_60$spo2 < spo2_post_60$threshold_85perc

str(spo2_post_60)

table4 <- table(spo2_post_60$threshold)
table4

plot60e <- ggplot(spo2_post_60, aes(x = project_id, y=spo2, colour=threshold)) + 
            geom_point(size=0.8) +
             ggtitle("55-60 minutes post physio") + # add a title
    ylab(NULL) + xlab('Individual patients') + # add axis names
    ylim(0,100) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), axis.text.x=element_blank(),axis.ticks.x=element_blank(), legend.position = "none")+
            scale_color_manual(breaks = c("TRUE", "FALSE"),
                        values=c("brown3", "chartreuse3"))  
     
 grid.arrange(plot5e, plot15e, plot30e, plot60e, ncol=2, nrow=2)









#####################################Script 7 – SpO2 exploration first session patients without OSI data##########################################################


#################################
##load in data for part 1
##############################

spo2_part1 <- xap.read_table("spo2_part1_first2_july")

str(spo2_part1)

##################################
##load in data part 2
#########################################

spo2_part2 <- xap.read_table("spo2_part2_first2_july")

str(spo2_part2)

#####################################
## load in partial
###################################
spo2_partial <- xap.read_table("spo2_partial_first2_july")

str(spo2_partial)

########################
##join spo2 sets
#########################

spo2_firsta <- rbind (spo2_part1, spo2_part2)
spo2_firstx <- rbind(spo2_firsta, spo2_partial)
str(spo2_firstx)

summary(spo2_firstx)  #no physiologically impossible values

unique(spo2_firstx$project_id)

##########################
##load in OSI group
###########################

OSIgroup <- xap.read_table("osigroupjuly")
str(OSIgroup)

##get rid of id column
OSIgroup2 <- select(OSIgroup, project_id)
str(OSIgroup2)

n <- 251
OSI <- rep('yes', n)
OSI

OSIgroup2a<- cbind(OSIgroup2, OSI = OSI)

str(OSIgroup2a)
#############################################
###join OSI group to full demo
############################################

spo2_first <- full_join(spo2_firstx, OSIgroup2a, by="project_id")
str(spo2_first)

unique(spo2_first$project_id)

unique(spo2_first$OSI)
#########remove those with osi

spo2_firstx <- subset(spo2_first, is.na(OSI))
str(spo2_firstx)
unique(spo2_firstx$project_id)

#####save non-OSI group for demographics

Spo2_non_osi <- select(spo2_firstx, project_id)

spo2_non_osi <- Spo2_non_osi %>%
  distinct(.keep_all = TRUE)
  
  str(spo2_non_osi)
  
write.csv(spo2_non_osi, "~/files/datafiles/spo2_non_osi.csv")

##################################
###plot raw data, calculate diff time
###################################

spo2_first1<- spo2_firstx %>%
  arrange(project_id, record_date_time) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time - pre_datetime,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(spo2_first1)

ggplot(spo2_first1, aes(x=diff_secs, y=spo2, color = project_id)) + 
 geom_point(aes(color = project_id), size = 0.5) +
            ggtitle("SpO2 pre and post physiotherapy") + # add a title
    xlab('Time (seconds)') + ylab('SpO2') + # add axis names
    xlim(0,7500) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position="none") +
             scale_color_viridis(discrete = TRUE, option = "D") +
                 geom_vline(xintercept = c(1800, 3600), color = "red")

##############################################################
###create pre and post data set
#############################################################
          
## pre physio
pre_spo2_first <- spo2_firstx %>% group_by(project_id) %>%
filter(record_date_time > pre_datetime & record_date_time < start_datetime) %>% ungroup()
str(pre_spo2_first)
summary(pre_spo2_first)

#write.csv(pre_spo2_first, "~/files/datafiles/prespo2first.csv")

##read in file
#pre_spo2_first<- xap.read_table("prespo2first")
         
## post physio            
             
post_spo2_first <-  spo2_firstx %>% group_by(project_id) %>%
filter(record_date_time > datetime & record_date_time < end_datetime) %>% ungroup()
str(post_spo2_first)

summary(post_spo2_first)
             
#write.csv(post_spo2_first, "~/files/datafiles/postspo2first.csv")

##read in file
#post_spo2_first <- xap.read_table("postspo2first")

#############################################################################
# to plot raw data on grpah - calculate time difference from first recorded (baseline)
##check group split has worked
#############################################################################

###pre physio

pre_spo2_first2 <- pre_spo2_first %>%
  arrange(project_id, record_date_time) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time - pre_datetime,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(pre_spo2_first2)

ggplot(pre_spo2_first2, aes(x=diff_secs, y=spo2, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            ggtitle("SpO2 pre physiotherapy") + # add a title
    xlab('Time (secs)') + ylab('SpO2') + # add axis names
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
             
###post physio

 post_spo2_first2 <- post_spo2_first %>%
  arrange(project_id, record_date_time) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time - datetime,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(post_spo2_first2)


ggplot(post_spo2_first2, aes(x=diff_secs, y=spo2, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            ggtitle("SpO2 post physiotherapy") + # add a title
    xlab('Time (secs)') + ylab('SpO2') + # add axis names
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")             
             
########################################
# prepare data to calulate 5 min epochs
######################################

###pre physio, prepare consistant dates times

str(pre_spo2_first2)

pre_spo2_first_2a <- mutate(pre_spo2_first2, spo2_time = as.POSIXct(diff_secs, origin = "1970-01-01"))
str(pre_spo2_first_2a)

####generate 5 min epochs and summaries

pre_spo2_first_5 <- pre_spo2_first_2a %>% group_by(project_id, by5=cut(spo2_time, "5 min")) %>%
  summarise(median=median(spo2), across())
  
str(pre_spo2_first_5)
head(pre_spo2_first_5)

##remove repeated rows 'by 5'

pre_spo2_first_5a <- pre_spo2_first_5 %>% group_by(project_id, by5) %>% 
  filter(row_number()==1) %>%
  ungroup()

str(pre_spo2_first_5a)

###check how many values for each 

table(pre_spo2_first_5a$project_id)

##post physio prepare new times
      
str(post_spo2_first2)

post_spo2_first2a <- mutate(post_spo2_first2, spo2_time = as.POSIXct(diff_secs, origin = "1970-01-01"))
str(post_spo2_first2a)

##create 5 min epochs

post_spo2_first_5 <- post_spo2_first2a %>% group_by(project_id, by5=cut(spo2_time, "5 min")) %>%
  summarise(median=median(spo2), across())
  
str(post_spo2_first_5)
head(post_spo2_first_5)

##remove repeated rows 'by 5'

post_spo2_first_5a <- post_spo2_first_5 %>% group_by(project_id, by5) %>% 
  filter(row_number()==1) %>%
  ungroup()

str(post_spo2_first_5a)

###check how many values for each 

table(post_spo2_first_5a$project_id)

#########################################################################
## draw graph of medians 
#########################################################################

#need to change by into POSIXct from factor

pre_spo2_first_5a$by5 <- as.POSIXct(pre_spo2_first_5a$by5,format='%Y-%m-%d %H:%M:%S')

post_spo2_first_5a$by5 <- as.POSIXct(post_spo2_first_5a$by5,format='%Y-%m-%d %H:%M:%S')

### pre-physio

fun_color_range <- colorRampPalette(c("lightblue", "navy"))   
my_colors <- fun_color_range(261)
## plot median SpO2     
             
pre_plot <- ggplot(pre_spo2_first_5a, aes(x=diff_secs, y=median, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            geom_line() +
            ggtitle("SpO2 pre-physiotherapy") + # add a title
    xlab('Time (seconds)') + ylab('Median SpO2') + # add axis names
    scale_y_continuous(expand = c(0, 0), limits = c(0, 100)) +
    scale_x_continuous(expand = c(0, 0), limits = c(0,1800)) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_manual(values=my_colors) 
           
### post-physio

#calcualtion difference in seconds 

         
## plot median SpO2     
             
post_plot <- ggplot(post_spo2_first_5a, aes(x=diff_secs, y=median, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            geom_line() +
            ggtitle("SpO2 post-physiotherapy") + # add a title
    xlab('Time (seconds)') + ylab(NULL) + # add axis names
        xlab('Time (seconds)') + ylab(NULL) + # add axis names
     scale_y_continuous(expand = c(0, 0), limits = c(0, 100)) +
    scale_x_continuous(expand = c(0, 0), limits = c(0,3600)) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_manual(values=my_colors) 
                                       
grid.arrange(pre_plot, post_plot, ncol=2)

#####change to 0 decimal places

pre_spo2_first_5a$premedian <- round(pre_spo2_first_5a$median,0)
str(pre_spo2_first_5a)

post_spo2_first_5a$postmedian <- round(post_spo2_first_5a$median,0)
str(post_spo2_first_5a)

##########################################
###5 mins  pre and post add extra column
#########################################

str(pre_spo2_first_5a)
str(post_spo2_first_5a)

##select columns want

prespo2 <- select(pre_spo2_first_5a, project_id, by5, premedian)
postspo2 <- select(post_spo2_first_5a, project_id, by5, postmedian)

##add extra column 

pre_spo2 <- prespo2 %>%
group_by(project_id) %>%
  mutate(label1 = LETTERS[row_number()]) %>%
  ungroup()

post_spo2 <- postspo2 %>%
group_by(project_id) %>%
  mutate(label = LETTERS[row_number()]) %>%
  ungroup()

str(pre_spo2)
str(post_spo2)

##reverse pre spo2 letters

pre_spo2_1 <- pre_spo2 %>%
group_by(project_id) %>%
mutate(label = rev(label1)) %>%
ungroup()

str(pre_spo2_1)

unique(pre_spo2_1$project_id)
unique(post_spo2$project_id)

###################################################################################################################
########################################
###analysis 1 5 min pre vs 5 min post
########################################
#####################################################################################################################

###################################################
##subset pre for just 5min immediately pre "A"
#################################################

pre_spo2_2 <- select(pre_spo2_1, project_id, by5, premedian, label)

pre_spo2_3 <- subset(pre_spo2_2, label == "A")
str(pre_spo2_3)

pre_spo2_4 <- select(pre_spo2_3, project_id, by5, premedian)
str(pre_spo2_4)

###remove row if by5 time not 00:25:00

pre_spo2_5 <- pre_spo2_4[pre_spo2_4$by5 == "1970-01-01 00:25:00",]

str(pre_spo2_5)

#########################################
##subset post for 5 min imm post A
######################################

post_spo2_1 <- subset(post_spo2, label == "A")
str(post_spo2_1)

###remove rows if by5 time not 00:00:00

post_spo2_2 <- post_spo2_1[post_spo2_1$by5 == "1970-01-01 00:00:00",]

str(post_spo2_2)

################################
##join pre and post together
###################################

spo2_prepost_5 <- inner_join(post_spo2_2, pre_spo2_5, by="project_id")
str(spo2_prepost_5)    

unique(spo2_prepost_5$project_id)
sum(is.na(spo2_prepost_5))

########################################
##create difference variable
############################################

spo2_prepost_5$spo2_diff <- spo2_prepost_5$postmedian - spo2_prepost_5$premedian
str(spo2_prepost_5)

ggplot(spo2_prepost_5, aes(x = project_id, y=spo2_diff, colour = project_id)) + 
            geom_point() +
             ggtitle("SpO2 difference post-pre physio") + # add a title
    xlab('Individual patients') + ylab('difference in spo2') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0, color = "black") +
                  geom_hline(yintercept = 15, color = "red")
                 
##################################
##create percentage change variable
####################################

spo2_prepost_5$spo2_perc_change <- (spo2_prepost_5$spo2_diff / spo2_prepost_5$premedian)* 100
str(spo2_prepost_5)

ggplot(spo2_prepost_5, aes(x = project_id, y=spo2_perc_change, colour = project_id)) + 
            geom_point() +
             ggtitle("Percentage SpO2 difference pre-post physio") + # add a title
    xlab('Project id') + ylab(' % difference in SpO2') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") +
             geom_hline(yintercept = 15, color = "red")

spo2_prepost_5$spo2_threshold <- ifelse(spo2_prepost_5$spo2_perc_change < -15, "yes", "no")

str(spo2_prepost_5)

t.spo2 <- table(spo2_prepost_5$spo2_threshold)
print(t.spo2)

###creat new variable

spo2_prepost_5$spo2_result <- ifelse(spo2_prepost_5$spo2_perc_change > 0, 'Improved',
                         ifelse(spo2_prepost_5$spo2_perc_change == 0, 'ISQ',
                         ifelse(spo2_prepost_5$spo2_perc_change< 0 & spo2_prepost_5$spo2_perc_change > -15 , 'Worse', 'AE')))
str(spo2_prepost_5)    


plot5b <- ggplot(spo2_prepost_5, aes(x = project_id, y=spo2_perc_change, colour=spo2_result)) + 
            geom_point(size=0.8) +
             ggtitle("0-5 minutes post physio") + # add a title
    xlab(NULL) + ylab('5 change in 5 minute medians of SpO2') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
        ylim(-35,52) +
            scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
              geom_hline(yintercept = 0, color = "black")
           
result1 <- table(spo2_prepost_5$spo2_result)

addmargins(result1)
round(prop.table(result1)*100, 2) #to give percentage

plot5a <- ggplot(spo2_prepost_5, aes(x = premedian, y=spo2_diff, colour=spo2_result)) + 
            geom_point() +
             ggtitle("0-5 minutes post-physiotherapy") + # add a title
    ylab('Absolute change in median SpO2') + xlab(NULL) +
    xlim(100, 50) + ylim(-35,35)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
                              geom_hline(yintercept = 0, color = "black")

###################################################################################################################
########################################
###analysis 2 5 min pre vs 15 min post
########################################
#####################################################################################################################

###################################################
##subset pre for just 5min immediately pre "A"
#################################################

str(pre_spo2_5)

#########################################
##subset post for 15 min imm post C
######################################

post_spo2_1a <- subset(post_spo2, label == "C")
str(post_spo2_1a)

###remove rows if by5 time not 00:10:00

post_spo2_2a <- post_spo2_1a[post_spo2_1a$by5 == "1970-01-01 00:10:00",]

str(post_spo2_2a)

################################
##join pre and post together
###################################

spo2_prepost_15 <- inner_join(post_spo2_2a, pre_spo2_5, by="project_id")
str(spo2_prepost_15)    

unique(spo2_prepost_15$project_id)
sum(is.na(spo2_prepost_15))

########################################
##create difference variable
############################################

spo2_prepost_15$spo2_diff <- spo2_prepost_15$postmedian - spo2_prepost_15$premedian
str(spo2_prepost_15)

ggplot(spo2_prepost_5, aes(x = project_id, y=spo2_diff, colour = project_id)) + 
            geom_point() +
             ggtitle("SpO2 difference pre-post physio") + # add a title
    xlab('Individual patients') + ylab('difference in spo2') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0, color = "black")
                 
##################################
##create percentage change variable
####################################

spo2_prepost_15$spo2_perc_change <- (spo2_prepost_15$spo2_diff / spo2_prepost_15$premedian)* 100
str(spo2_prepost_15)

ggplot(spo2_prepost_15, aes(x = project_id, y=spo2_perc_change, colour = project_id)) + 
            geom_point() +
             ggtitle("Percentage SpO2 difference pre-post physio") + # add a title
    xlab('Project id') + ylab(' % difference in SpO2') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") +
             geom_hline(yintercept = 15, color = "red")

spo2_prepost_15$spo2_threshold <- ifelse(spo2_prepost_15$spo2_perc_change < -15 , "yes", "no")

str(spo2_prepost_15)

t.spo2 <- table(spo2_prepost_15$spo2_threshold)
print(t.spo2)

###creat new variable

spo2_prepost_15$spo2_result <- ifelse(spo2_prepost_15$spo2_perc_change > 0, 'Improved',
                         ifelse(spo2_prepost_15$spo2_perc_change == 0, 'ISQ',
                         ifelse(spo2_prepost_15$spo2_perc_change< 0 & spo2_prepost_15$spo2_perc_change > -15, 'Worse', 'AE')))
str(spo2_prepost_15)    

plot15b <- ggplot(spo2_prepost_15, aes(x = project_id, y=spo2_perc_change, colour=spo2_result)) + 
            geom_point(size=0.8) +
             ggtitle("10-15 minutes post physio") + # add a title
    xlab(NULL) + ylab(NULL) + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
        ylim(-35,52) +
            scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
        geom_hline(yintercept = 0, color = "black")
        
result2 <- table(spo2_prepost_15$spo2_result)

addmargins(result2)
round(prop.table(result2)*100, 2) #to give percentage

plot15a <- ggplot(spo2_prepost_15, aes(x = premedian, y=spo2_diff, colour=spo2_result)) + 
            geom_point() +
             ggtitle("10-15 minutes post-physiotherapy") + # add a title
    ylab(NULL) + xlab(NULL) +
    xlim(100, 50) + ylim(-35,35) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
         scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
           geom_hline(yintercept = 0, color = "black")

###################################################################################################################
########################################
###analysis 3 5 min pre vs 30 min post
########################################
#####################################################################################################################

###################################################
##subset pre for just 5min immediately pre "A"
#################################################

str(pre_spo2_5)

#########################################
##subset post for 30 min imm post F
######################################

post_spo2_30 <- subset(post_spo2, label == "F")
str(post_spo2_30)

###remove rows if by5 time not 00:25:00

post_spo2_30a <- post_spo2_30[post_spo2_30$by5 == "1970-01-01 00:25:00",]

str(post_spo2_30a)

################################
##join pre and post together
###################################

spo2_prepost_30 <- inner_join(post_spo2_30a, pre_spo2_5, by="project_id")
str(spo2_prepost_30)    

unique(spo2_prepost_30$project_id)
sum(is.na(spo2_prepost_30))

########################################
##create difference variable
############################################

spo2_prepost_30$spo2_diff <- spo2_prepost_30$postmedian - spo2_prepost_30$premedian
str(spo2_prepost_30)

ggplot(spo2_prepost_30, aes(x = project_id, y=spo2_diff, colour = project_id)) + 
            geom_point() +
             ggtitle("SpO2 difference pre-post physio") + # add a title
    xlab('Individual patients') + ylab('difference in spo2') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0, color = "black")
                 
##################################
##create percentage change variable
####################################

spo2_prepost_30$spo2_perc_change <- (spo2_prepost_30$spo2_diff / spo2_prepost_30$premedian)* 100
str(spo2_prepost_30)

ggplot(spo2_prepost_30, aes(x = project_id, y=spo2_perc_change, colour = project_id)) + 
            geom_point() +
             ggtitle("Percentage SpO2 difference pre-post physio") + # add a title
    xlab('Project id') + ylab(' % difference in SpO2') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
           

spo2_prepost_30$spo2_threshold <- ifelse(spo2_prepost_30$spo2_perc_change < -15, "yes", "no")

str(spo2_prepost_30)

t.spo2 <- table(spo2_prepost_30$spo2_threshold)
print(t.spo2)

###creat new variable

spo2_prepost_30$spo2_result <- ifelse(spo2_prepost_30$spo2_perc_change > 0, 'Improved',
                         ifelse(spo2_prepost_30$spo2_perc_change == 0, 'ISQ',
                         ifelse(spo2_prepost_30$spo2_perc_change< 0 & spo2_prepost_30$spo2_perc_change > -15, 'Worse', 'AE')))
str(spo2_prepost_30)    

plot30b <- ggplot(spo2_prepost_30, aes(x = project_id, y=spo2_perc_change, colour=spo2_result)) + 
            geom_point(size=0.8) +
             ggtitle("25-30 minutes post physio") + # add a title
    xlab('Individual patients') + ylab('Difference in 5 minute medians of SpO2') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),axis.ticks.x=element_blank(), legend.position = "none")+
        ylim(-35,52) +
            scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
        geom_hline(yintercept = 0, color = "black")
        
        
result3 <- table(spo2_prepost_30$spo2_result)

addmargins(result3)
round(prop.table(result3)*100, 2) #to give percentage

plot30a <- ggplot(spo2_prepost_30, aes(x = premedian, y=spo2_diff, colour =spo2_result)) + 
            geom_point() +
             ggtitle("25-30 minutes post-physiotherapy") + # add a title
    ylab('Absolute change in median SpO2') + xlab('Median SpO2 5 minutes pre-physiotherapy') +
    xlim(100, 50) + ylim(-35, 35) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
         scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
           geom_hline(yintercept = 0, color = "black")


###################################################################################################################
########################################
###analysis 4 5 min pre vs 60 min post
########################################
#####################################################################################################################

###################################################
##subset pre for just 5min immediately pre "A"
#################################################

str(pre_spo2_5)

#########################################
##subset post for 30 min imm post L
######################################

post_spo2_60 <- subset(post_spo2, label == "L")
str(post_spo2_60)

###remove rows if by5 time not 00:55:00

post_spo2_60a <- post_spo2_60[post_spo2_60$by5 == "1970-01-01 00:55:00",]

str(post_spo2_60a)

################################
##join pre and post together
###################################

spo2_prepost_60 <- inner_join(post_spo2_60a, pre_spo2_5, by="project_id")
str(spo2_prepost_60)    

unique(spo2_prepost_60$project_id)
sum(is.na(spo2_prepost_60))

########################################
##create difference variable
############################################

spo2_prepost_60$spo2_diff <- spo2_prepost_60$postmedian - spo2_prepost_60$premedian
str(spo2_prepost_60)

ggplot(spo2_prepost_60, aes(x = project_id, y=spo2_diff, colour = project_id)) + 
            geom_point() +
             ggtitle("SpO2 difference pre-post physio") + # add a title
    xlab('Individual patients') + ylab('difference in spo2') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0, color = "black")
                 
##################################
##create percentage change variable
####################################

spo2_prepost_60$spo2_perc_change <- (spo2_prepost_60$spo2_diff / spo2_prepost_60$premedian)* 100
str(spo2_prepost_60)


ggplot(spo2_prepost_5, aes(x = project_id, y=spo2_perc_change, colour = project_id)) + 
            geom_point() +
             ggtitle("Percentage SpO2 difference pre-post physio") + # add a title
    xlab('Project id') + ylab(' % difference in SpO2') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
         
spo2_prepost_60$spo2_threshold <- ifelse(spo2_prepost_60$spo2_perc_change < -15, "yes", "no")

str(spo2_prepost_60)
max(spo2_prepost_60$spo2_perc_change)

t.spo2 <- table(spo2_prepost_60$spo2_threshold)
print(t.spo2)

###creat new variable

spo2_prepost_60$spo2_result <- ifelse(spo2_prepost_60$spo2_perc_change > 0, 'Improved',
                         ifelse(spo2_prepost_60$spo2_perc_change == 0, 'ISQ',
                         ifelse(spo2_prepost_60$spo2_perc_change< 0 & spo2_prepost_60$spo2_perc_change > -15, 'Worse', 'AE')))
str(spo2_prepost_60)    

plot60b <- ggplot(spo2_prepost_60, aes(x = project_id, y=spo2_perc_change, colour=spo2_result)) + 
            geom_point(size=0.8) +
             ggtitle("55-60 minutes post physio") + # add a title
    ylab(NULL) + xlab('Individual patients') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), axis.text.x=element_blank(),axis.ticks.x=element_blank(), legend.position = "none")+
        ylim(-35, 52) +
            scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
        geom_hline(yintercept = 0, color = "black")
              
result4 <- table(spo2_prepost_60$spo2_result)

addmargins(result4)
round(prop.table(result4)*100, 2) #to give percentage

plot60a <- ggplot(spo2_prepost_60, aes(x = premedian, y=spo2_diff, colour = spo2_result)) + 
            geom_point() +
             ggtitle("55-60 minutes post-physiotherapy") + # add a title
    ylab(NULL) + xlab('Median SpO2 5 minutes pre-physiotherapy') +
    xlim(100, 50) +ylim(-35,35) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
             geom_hline(yintercept = 0, color = "black")

########################
##combine plots
############################

grid.arrange(plot5a, plot15a, plot30a, plot60a, ncol=2, nrow=2)

grid.arrange(plot5b, plot15b, plot30b, plot60b, ncol=2, nrow=2)

##############################################
###repeated measures anova -friedmans 
###########################################

#####get individual datasets
##5 min
str(spo2_prepost_5)  

spo2_5 <- select(spo2_prepost_5, project_id, postmedian, premedian)
str(spo2_5)

names(spo2_5)[names(spo2_5) == "postmedian"] <- "postmedian5"
str(spo2_5)

###15mins

str(spo2_prepost_15)

spo2_15 <- select(spo2_prepost_15, project_id, postmedian)
str(spo2_15)

names(spo2_15)[names(spo2_15) == "postmedian"] <- "postmedian15"
str(spo2_15)

##30mins

spo2_30 <- select(spo2_prepost_30, project_id, postmedian)
str(spo2_30)

names(spo2_30)[names(spo2_30) == "postmedian"] <- "postmedian30"
str(spo2_30)

##60mins
spo2_60 <- select(spo2_prepost_60, project_id, postmedian)
str(spo2_60)

names(spo2_60)[names(spo2_60) == "postmedian"] <- "postmedian60"
str(spo2_60)

####################join together

spo2_change <- full_join(spo2_5, spo2_15, by="project_id")
str(spo2_change)

spo2_change1 <- full_join(spo2_change, spo2_30, by="project_id")
str(spo2_change1)

spo2_change2 <- full_join(spo2_change1, spo2_60, by="project_id")
str(spo2_change2)
###change order of columns
spo2_change3 <- spo2_change2[, c(1, 3, 2, 4, 5, 6)]
str(spo2_change3)

#####get non OSI group
#spo2_non_osioct <- select(spo2_change3, project_id)
#str(spo2_non_osioct)
#write.csv(spo2_non_osioct, "~/files/datafiles/spo2_non_osioct.csv")


spo2_change3$diff1 <- spo2_change3$postmedian5 - spo2_change3$premedian
spo2_change3$diff2 <- spo2_change3$postmedian15 - spo2_change3$premedian
spo2_change3$diff3 <- spo2_change3$postmedian30 - spo2_change3$premedian
spo2_change3$diff4 <- spo2_change3$postmedian60 - spo2_change3$premedian
spo2_change3$diff5 <- spo2_change3$postmedian15 - spo2_change3$postmedian5
spo2_change3$diff6 <- spo2_change3$postmedian30 - spo2_change3$postmedian5
spo2_change3$diff7 <- spo2_change3$postmedian60 - spo2_change3$postmedian5
spo2_change3$diff8 <- spo2_change3$postmedian30 - spo2_change3$postmedian15
spo2_change3$diff9 <- spo2_change3$postmedian60 - spo2_change3$postmedian15
spo2_change3$diff10 <- spo2_change3$postmedian60 - spo2_change3$postmedian30

summary(spo2_change3)

################change to long format

spo2_change4 <- tidyr::gather(spo2_change3, key=time, value=medianspo2, premedian:postmedian60) %>% 
                    arrange(project_id)
                    
head(spo2_change4)
str(spo2_change4)

test <- spo2_change4 %>% friedman_test(medianspo2 ~ time |project_id)
test


test1 <- spo2_change4 %>% friedman_effsize(medianspo2 ~ time |project_id)
test1


test3 <- spo2_change4 %>% wilcox_test(medianspo2 ~ time, paired = TRUE, p.adjust.method = "bonferroni")
test3

#################################################################################################################
####multilevel regression
################################################################################################################

str(spo2_change4)
unique(spo2_change4$project_id)

#######################################
####convert to factor
################################

spo2_change4$time <- as.factor(spo2_change4$time)
str(spo2_change4)

levels(spo2_change4$time)

#################################################
#####need to bring in other variables
#################################################

####GENDER
#####gender from Demo explor non osi
str(demographic_data_osi)

spo2_gender <- select(demographic_data_osi, project_id, sex)
str(spo2_gender)

####join to osi_change4

spo2_change5 <- left_join(spo2_change4, spo2_gender, by="project_id")
str(spo2_change5)
unique(spo2_change5$project_id)

######AGE
#####age from Demo explor non osi
str(age_data_osi)

spo2_age <- select(age_data_osi, project_id, age_in_months)
str(spo2_age)

####join to spo2_change5

spo2_change6 <- left_join(spo2_change5, spo2_age, by="project_id")
str(spo2_change6)
unique(spo2_change6$project_id)

#######WEIGHT
#########weight from Demo explor 1.1

str(weight_osi)
spo2_weight <- select(weight_osi, project_id, weight)
str(spo2_weight)

####join to osi_change6

spo2_change7 <- left_join(spo2_change6, spo2_weight, by="project_id")
str(spo2_change7)
unique(spo2_change7$project_id)

############ADMSSION TYPE
#######type from Demo explor 1.1

str(type_osi)
spo2_admission <- select(type_osi, project_id, admission.type)
str(spo2_admission)

####join to osi_change7

spo2_change8 <- left_join(spo2_change7, spo2_admission, by="project_id")
str(spo2_change8)
unique(spo2_change8$project_id)

################PELOD
#####pelod from Demo non osi
str(pelod_osi)
spo2_pelod <- select(pelod_osi, project_id, pelod_score)
str(spo2_pelod)

####join to osi_change8

spo2_change9 <- left_join(spo2_change8, spo2_pelod, by="project_id")
str(spo2_change9)
unique(spo2_change9$project_id)

unique(spo2_change9$time)

####################unit
##unit from demo non osi

spo2_unit <- select(unitosi, project_id, Unit)
str(spo2_unit)

####join to spo2 change 9

spo2_change9a <- left_join(spo2_change9, spo2_unit, by="project_id")
str(spo2_change9a)

###rename for regression and change reference to premedian

spo2_change9a$time <- relevel(spo2_change9a$time, "postmedian60")
spo2_change9a$time <- relevel(spo2_change9a$time, "postmedian30")
spo2_change9a$time <- relevel(spo2_change9a$time, "postmedian15")
spo2_change9a$time <- relevel(spo2_change9a$time, "postmedian5")
spo2_change9a$time <- relevel(spo2_change9a$time, "premedian")

str(spo2_change9a)

levels(spo2_change9a$time) <- c("5 pre", "0-5 post", "10-15 post", "25-30 post", "55-60 post")

str(spo2_change9a)

beanplot(spo2_change9a$medianspo2 ~ spo2_change9a$time, overallline = "median", beanlines = "median",
            col = list("steelblue1", "steelblue2", "steelblue3", "steelblue", "steelblue4"), border = c("steelblue1", "steelblue2", "steelblue3", "steelblue", "steelblue4"),
        xlab = "Time point in relation to physiotherapy treatment (minutes)", ylab = "Median SpO2")
   
####################################
###multi level models
####################################

Model1 <- lmer(medianspo2 ~ time + log(weight) + admission.type  + log(pelod_score) + Unit + (1|project_id), data=spo2_change9a)
summary(model1)

confint(model1)









##################################################Script 8 – FiO2 first session exploration############################################################


#################################
##load in data for part 1
##############################

## load in FiO2 raw data

fio2_part1_raw <- xap.read_table("complete01_mdc_cgois")

names(fio2_part1_raw )[1] <- 'project_id'
fio2_part1_raw <- select(fio2_part1_raw , project_id, monitor, record_date_time, num_value )
str(fio2_part1_raw)
head(fio2_part1_raw)
tail(fio2_part1_raw)

unique(fio2_part1_raw$project_id)

##################################
##load in data part 2
#########################################

fio2_part2_raw <- xap.read_table("complete02_mdc_cgois")

names(fio2_part2_raw )[1] <- 'project_id'
fio2_part2_raw <- select(fio2_part2_raw , project_id, monitor, record_date_time, num_value )
str(fio2_part2_raw)
head(fio2_part2_raw)
tail(fio2_part2_raw)

unique(fio2_part2_raw$project_id)

#####################################
## load in partial
###################################

fio2_partial <- xap.read_table("partial_mdc_cgois")

names(fio2_partial )[1] <- 'project_id'
fio2_partial <- select(fio2_partial, project_id, monitor, record_date_time, num_value )
str(fio2_partial)
head(fio2_partial)
tail(fio2_partial)

unique(fio2_partial$project_id)


########################
##join fio2 sets
#########################

fio2_a <- rbind (fio2_part1_raw, fio2_part2_raw)
fio2_b <- rbind(fio2_a, fio2_partial)
str(fio2_b)

#########################
##load in physiotimes
#########################


##load in physio times data and check 1

physiotimes1_data <- xap.read_table("complete01_wp2_physio_times_check")
str(physiotimes1_data)
head(physiotimes1_data)
unique(physiotimes1_data$project_id)

##load in physio times data and check 2

physiotimes2_data <- xap.read_table("complete02_wp2_physio_times_check")
str(physiotimes2_data)
head(physiotimes2_data)
unique(physiotimes2_data$project_id)

##load in physio times data and check partial

physiotimes_partial <- xap.read_table("partial_wp2_physio_times_check")
str(physiotimes_partial)
head(physiotimes_partial)
unique(physiotimes_partial$project_id)


##join 1 and 2

physiotimes1 <- rbind(physiotimes1_data, physiotimes2_data)

###join partial

physiotimes <- rbind(physiotimes1, physiotimes_partial)
str(physiotimes)

###############################################################################################
## manipulate physio times data frame to have first session only and add in time window
###############################################################################################

## select first day and session only

firstsession_part1 <- subset(physiotimes, day==1 & session==1)
str(firstsession_part1)


#generate pre physio time - subtract 60 mins

firstsession_part1 <- firstsession_part1 %>% 
                mutate(pre_datetime =(datetime - (minutes=3600)))

# generate start time for physio each patient - subtracting 60 minutes

firstsession_part1_a <- firstsession_part1 %>% 
                mutate(start_datetime =(datetime - (minutes=1800)))

# generate end times for 30 mins after physio each patient - adding 30 mins 

firstsession_part1_b <- firstsession_part1_a %>% 
                mutate(end_datetime =(datetime + (minutes=3600)))

str(firstsession_part1_b)

firstsession_part1_b <- select(firstsession_part1_b, project_id, datetime, pre_datetime, start_datetime, end_datetime)

str(firstsession_part1_b)

################################################
###join to fio2 and select only value within time
#######################################################

fio2_first <- full_join(firstsession_part1_b, fio2_b, by="project_id") %>% 
filter(record_date_time > pre_datetime & record_date_time < end_datetime)
str(fio2_first)

summary(fio2_first)  

unique(fio2_first$project_id)

##remove physiologically imposible values

fio2_first$num_value[fio2_first$num_value > 100] = NA

summary(fio2_first)
unique(fio2_first$project_id)

###convert to fraction

fio2_first$fio2 <- fio2_first$num_value/100

str(fio2_first)

sum(is.na(fio2_first))

###remove NA rows

fio2_first <- fio2_first[complete.cases(fio2_first), ]
str(fio2_first)
sum(is.na(fio2_first))
##################################
###plot raw data, calculate diff time
###################################

fio2_first1<- fio2_first %>%
  arrange(project_id, record_date_time) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time - pre_datetime,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(fio2_first1)

ggplot(fio2_first1, aes(x=diff_secs, y=fio2, color = project_id)) + 
 geom_point(aes(color = project_id), size = 0.5) +
            ggtitle("FiO2 pre and post physiotherapy") + # add a title
    xlab('Time (seconds)') + ylab('FiO2') + # add axis names
    xlim(0,7500) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position="none") +
             scale_color_viridis(discrete = TRUE, option = "D") +
                 geom_vline(xintercept = c(1800, 3600), color = "red")

##############################################################
###create pre and post data set
#############################################################
          
## pre physio
pre_fio2_first <- fio2_first %>% group_by(project_id) %>%
filter(record_date_time > pre_datetime & record_date_time < start_datetime) %>% ungroup()
str(pre_fio2_first)
summary(pre_fio2_first)

#write.csv(pre_spo2_first, "~/files/datafiles/prespo2first.csv")

##read in file
#pre_spo2_first<- xap.read_table("prespo2first")
       
## post physio            
             
post_fio2_first <-  fio2_first %>% group_by(project_id) %>%
filter(record_date_time > datetime & record_date_time < end_datetime) %>% ungroup()
str(post_fio2_first)

summary(post_fio2_first)
             
#write.csv(post_spo2_first, "~/files/datafiles/postspo2first.csv")

##read in file
#post_spo2_first <- xap.read_table("postspo2first")

#########################################################################
# to plot raw data on graph - calculate time difference from first recorded (baseline)
##check group split has worked
#########################################################################

###pre physio

pre_fio2_first2 <- pre_fio2_first %>%
  arrange(project_id, record_date_time) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time - pre_datetime,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(pre_fio2_first2)

ggplot(pre_fio2_first2, aes(x=diff_secs, y=fio2, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 0.5) +
            ggtitle("FiO2 pre physiotherapy") + # add a title
    xlab('Time (secs)') + ylab('FiO2') + # add axis names
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
             
###post physio

 post_fio2_first2 <- post_fio2_first %>%
  arrange(project_id, record_date_time) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time - datetime,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(post_fio2_first2)

ggplot(post_fio2_first2, aes(x=diff_secs, y=fio2, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            ggtitle("FiO2 post physiotherapy") + # add a title
    xlab('Time (secs)') + ylab('FiO2') + # add axis names
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")             
             
########################################
# prepare data to calulate 5 min epochs
######################################

###pre physio, prepare consistant dates times

str(pre_fio2_first2)

pre_fio2_first_2a <- mutate(pre_fio2_first2, fio2_time = as.POSIXct(diff_secs, origin = "1970-01-01"))
str(pre_fio2_first_2a)

####generate 5 min epochs and summaries

pre_fio2_first_5 <- pre_fio2_first_2a %>% group_by(project_id, by5=cut(fio2_time, "5 min")) %>%
  summarise(median=median(fio2), across())
  
str(pre_fio2_first_5)
head(pre_fio2_first_5)

##remove repeated rows 'by 5'
pre_fio2_first_5a <- pre_fio2_first_5 %>% group_by(project_id, by5) %>% 
  filter(row_number()==1) %>%
  ungroup()

str(pre_fio2_first_5a)

###check how many values for each 

table(pre_fio2_first_5a$project_id)

##post physio prepare new times

str(post_fio2_first2)

post_fio2_first2a <- mutate(post_fio2_first2, fio2_time = as.POSIXct(diff_secs, origin = "1970-01-01"))
str(post_fio2_first2a)

##create 5 min epochs

post_fio2_first_5 <- post_fio2_first2a %>% group_by(project_id, by5=cut(fio2_time, "5 min")) %>%
  summarise(median=median(fio2), across())
  
str(post_fio2_first_5)

##remove repeated rows 'by 5'

post_fio2_first_5a <- post_fio2_first_5 %>% group_by(project_id, by5) %>% 
  filter(row_number()==1) %>%
  ungroup()

str(post_fio2_first_5a)

###check how many values for each 

table(post_fio2_first_5a$project_id)

###check distrubution

ggplot(pre_fio2_first_5a, aes(x=fio2)) + geom_histogram()
ggplot(post_fio2_first_5a, aes(x=fio2)) + geom_histogram()

##check log
##pre
pre_fio2_first_5a$fio2_log <- log(pre_fio2_first_5a$fio2)
str(pre_fio2_first_5a)

ggplot(pre_fio2_first_5a, aes(x=fio2_log)) + geom_histogram()

##post
post_fio2_first_5a$fio2_log <- log(post_fio2_first_5a$fio2)
str(post_fio2_first_5a)

ggplot(post_fio2_first_5a, aes(x=fio2_log)) + geom_histogram()

skewness(pre_fio2_first_5a$fio2, na.rm = TRUE)
skewness(pre_fio2_first_5a$fio2_log, na.rm = TRUE)

#########################################################################
## draw graph of medians 
#########################################################################

#need to change by into POSIXct from factor

pre_fio2_first_5a$by5 <- as.POSIXct(pre_fio2_first_5a$by5,format='%Y-%m-%d %H:%M:%S')

post_fio2_first_5a$by5 <- as.POSIXct(post_fio2_first_5a$by5,format='%Y-%m-%d %H:%M:%S')

unique(pre_fio2_first_5a$project_id)

fun_color_range <- colorRampPalette(c("lightblue", "navy"))   
my_colors <- fun_color_range(261)  
  
#pre

## plot median FiO2     
             
pre_plot <- ggplot(pre_fio2_first_5a, aes(x=diff_secs, y=median, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            geom_line() +
            ggtitle("Median FiO2 pre-physiotherapy") + # add a title
    xlab('Time (seconds)') + ylab('Median FiO2') + # add axis names
     scale_x_continuous(expand = c(0, 0), limits = c(0,1800)) + scale_y_continuous(expand = c(0, 0), limits = c(0.21,1))+
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_manual(values=my_colors) 
            
### post-physio

#calcualtion difference in seconds 

## plot median FiO2     
             
post_plot <- ggplot(post_fio2_first_5a, aes(x=diff_secs, y=median, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            geom_line() +
            ggtitle("Median FiO2 post-physiotherapy") + # add a title
    xlab('Time (seconds)') + ylab(NULL) + # add axis names
    scale_x_continuous(expand = c(0, 0), limits = c(0,3800)) + scale_y_continuous(expand = c(0, 0), limits = c(0.21,1))+
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_manual(values=my_colors) 
          
                                
grid.arrange(pre_plot, post_plot, ncol=2)

##########################################
###5 mins  pre and post add extra column
#########################################

str(pre_fio2_first_5a)
str(post_fio2_first_5a)

##select columns want

prefio2 <- select(pre_fio2_first_5a, project_id, by5, median)
postfio2 <- select(post_fio2_first_5a, project_id, by5, median)

##rename medians for clarity

names(prefio2)[names(prefio2) == 'median'] <- 'premedian'
names(postfio2)[names(postfio2) == 'median'] <- 'postmedian'

str(prefio2)
str(postfio2)

##add extra column 

pre_fio2 <- prefio2 %>%
group_by(project_id) %>%
  mutate(label1 = LETTERS[row_number()]) %>%
  ungroup()

post_fio2 <- postfio2 %>%
group_by(project_id) %>%
  mutate(label = LETTERS[row_number()]) %>%
  ungroup()

str(pre_fio2)
str(post_fio2)

##reverse pre spo2 letters

pre_fio2_1 <- pre_fio2 %>%
group_by(project_id) %>%
mutate(label = rev(label1)) %>%
ungroup()

str(pre_fio2_1)

###################################################################################################################
########################################
###analysis 1 5 min pre vs 5 min post
########################################
#####################################################################################################################

###################################################
##subset pre for just 5min immediately pre "A"
#################################################

pre_fio2_2 <- select(pre_fio2_1, project_id, by5, premedian, label)

pre_fio2_3 <- subset(pre_fio2_2, label == "A")
str(pre_fio2_3)

pre_fio2_4 <- select(pre_fio2_3, project_id, by5, premedian)
str(pre_fio2_4)

###remove row if by5 time not 00:25:00

pre_fio2_5 <- pre_fio2_4[pre_fio2_4$by5 == "1970-01-01 00:25:00",]

str(pre_fio2_5)

#########################################
##subset post for 5 min imm post A
######################################

post_fio2_1 <- subset(post_fio2, label == "A")
str(post_fio2_1)

###remove rows if by5 time not 00:00:00

post_fio2_2 <- post_fio2_1[post_fio2_1$by5 == "1970-01-01 00:00:00",]

str(post_fio2_2)

################################
##join pre and post together
###################################

fio2_prepost_5 <- inner_join(post_fio2_2, pre_fio2_5, by="project_id")
str(fio2_prepost_5)    

unique(fio2_prepost_5$project_id)
sum(is.na(fio2_prepost_5))

###remove NAs

fio2_prepost_5 <- fio2_prepost_5[complete.cases(fio2_prepost_5), ]

str(fio2_prepost_5)

########################################
##create difference variable
########################################

fio2_prepost_5$fio2_diff <- fio2_prepost_5$postmedian - fio2_prepost_5$premedian
str(fio2_prepost_5)

plot5c <-ggplot(fio2_prepost_5, aes(x = project_id, y=fio2_diff, colour = project_id)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle("0-5 mins post-physiotherapy") + # add a title
    xlab(NULL) + ylab('Absolute difference in fio2') + # add axis names
    ylim(-0.4,0.7)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
                 geom_hline(yintercept = 0, color = "black")
                 
##################################
##create percentage change variable
##################################

fio2_prepost_5$fio2_perc_change <- (fio2_prepost_5$fio2_diff / fio2_prepost_5$premedian)* 100
str(fio2_prepost_5)

ggplot(fio2_prepost_5, aes(x = project_id, y=fio2_perc_change, colour = project_id)) + 
            geom_point() +
             ggtitle("Percentage FiO2 difference post-pre physio") + # add a title
    xlab('Project id') + ylab(' % difference in FiO2') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
       
fio2_prepost_5$fio2_threshold <- ifelse(fio2_prepost_5$fio2_perc_change > 20, "yes", "no")

str(fio2_prepost_5)

t.fio2 <- table(fio2_prepost_5$fio2_threshold)
print(t.fio2)

###creat new variable

fio2_prepost_5$fio2_result <- ifelse(fio2_prepost_5$fio2_perc_change < 0, 'Improved',
                         ifelse(fio2_prepost_5$fio2_perc_change == 0, 'ISQ',
                         ifelse(fio2_prepost_5$fio2_perc_change> 0 & fio2_prepost_5$fio2_perc_change < 20 , 'Worse', 'AE')))
str(fio2_prepost_5)    

plot5b <- ggplot(fio2_prepost_5, aes(x = project_id, y=fio2_perc_change, colour=fio2_result)) + 
            geom_point(size=0.8) +
             ggtitle("0-5 minutes post physio") + # add a title
    xlab(NULL) + ylab('% change in 5 minute medians of FiO2') + # add axis names
    ylim(-50,250) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
            scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
              geom_hline(yintercept = 0, color = "black")
        
result1 <- table(fio2_prepost_5$fio2_result)

addmargins(result1)
round(prop.table(result1)*100, 2) #to give percentage

plot5a <- ggplot(fio2_prepost_5, aes(x = premedian, y=fio2_diff, colour=fio2_result)) + 
            geom_point(size=0.8) +
             ggtitle(" 0-5 mins post physiotherapy") + # add a title
    ylab('Absolute change in 5 minute medians of FiO2') + xlab(NULL) +
    ylim(-1,1) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
            geom_hline(yintercept = 0, color = "black")

plot5d <- ggplot(fio2_prepost_5, aes(x = project_id, y=fio2_diff, colour=fio2_result)) + 
            geom_point(size=0.8) +
             ggtitle("0-5 minutes post physio") + # add a title
    xlab(NULL) + ylab('Absolute difference 5 minute medians of FiO2') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
            scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
              geom_hline(yintercept = 0, color = "black")
              
 plot5x <- ggplot(fio2_prepost_5, aes(x = premedian, y=fio2_diff, colour=fio2_result)) + 
            geom_point(size = 0.5) + geom_jitter() +
             ggtitle("0-5 minutes post-physiotherapy") + # add a title
    ylab('Absolute change in median FiO2') + xlab(NULL) +
    ylim(-0.8, 0.8) +scale_x_continuous(expand = c(0, 0), limits = c(0.2,1.1)) + 
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
            geom_hline(yintercept = 0, color = "black")     
            
#####read in OSI results


osi_5_map<- xap.read_table("osi_5_map")

fio2_prepost_5 <- inner_join(fio2_prepost_5, osi_5_map, by="project_id")
str(fio2_prepost_5)

 plot5z<- ggplot(fio2_prepost_5, aes(x = premedian, y=fio2_diff, colour=osi_threshold)) + 
            geom_point(size = 0.5) + geom_jitter() +
             ggtitle("0-5 minutes post-physiotherapy") + # add a title
    ylab('Absolute change in median FiO2') + xlab(NULL) +
    ylim(-0.8, 0.8) +scale_x_continuous(expand = c(0, 0), limits = c(0.2,1.1)) + 
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("TRUE", "FALSE"),
                        values=c("red", "steelblue4"))  +
            geom_hline(yintercept = 0, color = "black")       

###################################################################################################################
########################################
###analysis 2 5 min pre vs 15 min post
########################################
#####################################################################################################################

str(pre_fio2_5)

#########################################
##subset post for 5 min imm post C
######################################

post_fio2_15 <- subset(post_fio2, label == "C")
str(post_fio2_15)

###remove rows if by5 time not 00:10:00

post_fio2_15a <- post_fio2_15[post_fio2_15$by5 == "1970-01-01 00:10:00",]

str(post_fio2_15a)

################################
##join pre and post together
###################################

fio2_prepost_15 <- inner_join(post_fio2_15a, pre_fio2_5, by="project_id")
str(fio2_prepost_15)    

unique(fio2_prepost_15$project_id)
sum(is.na(fio2_prepost_15))

###remove NAs

fio2_prepost_15 <- fio2_prepost_15[complete.cases(fio2_prepost_15), ]

str(fio2_prepost_15)

########################################
##create difference variable
########################################

fio2_prepost_15$fio2_diff <- fio2_prepost_15$postmedian - fio2_prepost_15$premedian
str(fio2_prepost_15)

plot15c <- ggplot(fio2_prepost_15, aes(x = project_id, y=fio2_diff, colour = project_id)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle("10-15 minutes post-physiotherapy") + # add a title
    xlab(NULL) + ylab(NULL) + # add axis names
    ylim(-0.4, 0.7) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
                 geom_hline(yintercept = 0, color = "black")
                 
##################################
##create percentage change variable
####################################

fio2_prepost_15$fio2_perc_change <- (fio2_prepost_15$fio2_diff / fio2_prepost_15$premedian)* 100
str(fio2_prepost_15)

ggplot(fio2_prepost_15, aes(x = project_id, y=fio2_perc_change, colour = project_id)) + 
            geom_point() +
             ggtitle("Percentage FiO2 difference post-pre physio") + # add a title
    xlab('Project id') + ylab(' % difference in FiO2') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
       

fio2_prepost_15$fio2_threshold <- ifelse(fio2_prepost_15$fio2_perc_change > 20, "yes", "no")

str(fio2_prepost_15)

t.fio2 <- table(fio2_prepost_15$fio2_threshold)
print(t.fio2)

###create new variable

fio2_prepost_15$fio2_result <- ifelse(fio2_prepost_15$fio2_perc_change < 0, 'Improved',
                         ifelse(fio2_prepost_15$fio2_perc_change == 0, 'ISQ',
                         ifelse(fio2_prepost_15$fio2_perc_change> 0 & fio2_prepost_15$fio2_perc_change < 20 , 'Worse', 'AE')))
str(fio2_prepost_15)    

plot15b <- ggplot(fio2_prepost_15, aes(x = project_id, y=fio2_perc_change, colour=fio2_result)) + 
            geom_point(size=0.8) +
             ggtitle("10-15 minutes post physio") + # add a title
    xlab(NULL) + ylab(NULL) + # add axis names
    ylim(-50,250) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
            scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
              geom_hline(yintercept = 0, color = "black")
          
result2 <- table(fio2_prepost_15$fio2_result)

addmargins(result2)
round(prop.table(result2)*100, 2) #to give percentage

plot15a <- ggplot(fio2_prepost_15, aes(x = premedian, y=fio2_diff, colour=fio2_result)) + 
            geom_point(size=0.8) +
             ggtitle(" 10-15 mins post physiotherapy") + # add a title
    ylab(NULL) + xlab(NULL) +
    ylim(-1,1) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
         scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
            geom_hline(yintercept = 0, color = "black")

plot15x <- ggplot(fio2_prepost_15, aes(x = premedian, y=fio2_diff, colour=fio2_result)) + 
            geom_point(size = 0.5) + geom_jitter() +
             ggtitle("10-15 minutes post-physiotherapy") + # add a title
    ylab(NULL) + xlab(NULL) +
    ylim(-0.8,0.8) +scale_x_continuous(expand = c(0, 0), limits = c(0.2,1.1)) + 
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
            geom_hline(yintercept = 0, color = "black")
            
            
#####read in OSI results


osi_15_map<- xap.read_table("osi_15_map")

fio2_prepost_15 <- inner_join(fio2_prepost_15, osi_15_map, by="project_id")
str(fio2_prepost_15)

 plot15z<- ggplot(fio2_prepost_15, aes(x = premedian, y=fio2_diff, colour=osi_threshold)) + 
            geom_point(size = 0.5) + geom_jitter() +
             ggtitle("10-15 minutes post-physiotherapy") + # add a title
    ylab(NULL) + xlab(NULL) +
    ylim(-0.8, 0.8) +scale_x_continuous(expand = c(0, 0), limits = c(0.2,1.1)) + 
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("TRUE", "FALSE"),
                        values=c("red", "steelblue4"))  +
            geom_hline(yintercept = 0, color = "black")                
                     
###################################################################################################################
########################################
###analysis 3 5 min pre vs 30 min post
########################################
#####################################################################################################################

str(pre_fio2_5)

#########################################
##subset post for 30 min imm post F
######################################

post_fio2_30 <- subset(post_fio2, label == "F")
str(post_fio2_30)

###remove rows if by5 time not 00:25:00


post_fio2_30a <- post_fio2_30[post_fio2_30$by5 == "1970-01-01 00:25:00",]

str(post_fio2_30a)

################################
##join pre and post together
###################################

fio2_prepost_30 <- inner_join(post_fio2_30a, pre_fio2_5, by="project_id")
str(fio2_prepost_30)    

unique(fio2_prepost_30$project_id)
sum(is.na(fio2_prepost_30))

###remove NAs

fio2_prepost_30 <- fio2_prepost_30[complete.cases(fio2_prepost_30), ]

str(fio2_prepost_30)
########################################
##create difference variable
############################################

fio2_prepost_30$fio2_diff <- fio2_prepost_30$postmedian - fio2_prepost_30$premedian
str(fio2_prepost_30)

plot30c <- ggplot(fio2_prepost_30, aes(x = project_id, y=fio2_diff, colour = project_id)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle("25-30 mins post-physiotherapy") + # add a title
    xlab('Individual patients') + ylab('Absolute difference in fio2') + # add axis names
      ylim(-0.4,0.7) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
                 geom_hline(yintercept = 0, color = "black")
                 
##################################
##create percentage change variable
####################################

fio2_prepost_30$fio2_perc_change <- (fio2_prepost_30$fio2_diff / fio2_prepost_30$premedian)* 100
str(fio2_prepost_30)

ggplot(fio2_prepost_30, aes(x = project_id, y=fio2_perc_change, colour = project_id)) + 
            geom_point() +
             ggtitle("Percentage FiO2 difference post-pre physio") + # add a title
    xlab('Project id') + ylab(' % difference in FiO2') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
       
fio2_prepost_30$fio2_threshold <- ifelse(fio2_prepost_30$fio2_perc_change > 20, "yes", "no")

str(fio2_prepost_30)

t.fio2 <- table(fio2_prepost_30$fio2_threshold)
print(t.fio2)

###create new variable

fio2_prepost_30$fio2_result <- ifelse(fio2_prepost_30$fio2_perc_change < 0, 'Improved',
                         ifelse(fio2_prepost_30$fio2_perc_change == 0, 'ISQ',
                         ifelse(fio2_prepost_30$fio2_perc_change> 0 & fio2_prepost_30$fio2_perc_change < 20 , 'Worse', 'AE')))
str(fio2_prepost_30)    

plot30b <- ggplot(fio2_prepost_30, aes(x = project_id, y=fio2_perc_change, colour=fio2_result)) + 
            geom_point(size=0.8) +
             ggtitle("25-30 minutes post physio") + # add a title
    xlab('Individual patients') + ylab('% change in 5 minute medians of FiO2') + # add axis names
    ylim(-50, 250) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
            scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
              geom_hline(yintercept = 0, color = "black")
             
result3 <- table(fio2_prepost_30$fio2_result)

addmargins(result3)
round(prop.table(result3)*100, 2) #to give percentage

plot30x <- ggplot(fio2_prepost_30, aes(x = premedian, y=fio2_diff, colour=fio2_result)) + 
            geom_point(size = 0.5) + geom_jitter() +
             ggtitle("25-30 minutes post-physiotherapy") + # add a title
    ylab('Absolute change in median FiO2') + xlab('Median FiO2 5 minutes pre-physiotherapy') +
    ylim(-0.8,0.8) + scale_x_continuous(expand = c(0, 0), limits = c(0.2,1.1)) + 
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
            geom_hline(yintercept = 0, color = "black")

#####read in OSI results

osi_30_map<- xap.read_table("osi_30_map")

fio2_prepost_30 <- inner_join(fio2_prepost_30, osi_30_map, by="project_id")
str(fio2_prepost_30)

 plot30z<- ggplot(fio2_prepost_30, aes(x = premedian, y=fio2_diff, colour=osi_threshold)) + 
            geom_point(size = 0.5) + geom_jitter() +
             ggtitle("25-30 minutes post-physiotherapy") + # add a title
    ylab('Absolute change in median FiO2') + xlab('Median FiO2 5 minutes pre-physiotherapy') +
    ylim(-0.8, 0.8) +scale_x_continuous(expand = c(0, 0), limits = c(0.2,1.1)) + 
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("TRUE", "FALSE"),
                        values=c("red", "steelblue4"))  +
            geom_hline(yintercept = 0, color = "black")    

###################################################################################################################
########################################
###analysis 4 5 min pre vs 60 min post
########################################
#####################################################################################################################

str(pre_fio2_5)

#########################################
##subset post for 60 min imm post L
######################################

post_fio2_60 <- subset(post_fio2, label == "L")
str(post_fio2_60)

###remove rows if by5 time not 00:55:00

post_fio2_60a <- post_fio2_60[post_fio2_60$by5 == "1970-01-01 00:55:00",]

str(post_fio2_60a)

################################
##join pre and post together
###################################

fio2_prepost_60 <- inner_join(post_fio2_60a, pre_fio2_5, by="project_id")
str(fio2_prepost_60)    

unique(fio2_prepost_60$project_id)
sum(is.na(fio2_prepost_60))

###remove NAs

fio2_prepost_60 <- fio2_prepost_60[complete.cases(fio2_prepost_60), ]

str(fio2_prepost_60)

########################################
##create difference variable
############################################

fio2_prepost_60$fio2_diff <- fio2_prepost_60$postmedian - fio2_prepost_60$premedian
str(fio2_prepost_60)

plot60c <- ggplot(fio2_prepost_60, aes(x = project_id, y=fio2_diff, colour = project_id)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle("55-60 mins post-physiotherapy") + # add a title
    xlab('Individual patients') + ylab(NULL) + # add axis names
     ylim(-0.4,0.7) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
                 geom_hline(yintercept = 0, color = "black")
                 
##################################
##create percentage change variable
####################################

fio2_prepost_60$fio2_perc_change <- (fio2_prepost_60$fio2_diff / fio2_prepost_60$premedian)* 100
str(fio2_prepost_60)

ggplot(fio2_prepost_60, aes(x = project_id, y=fio2_perc_change, colour = project_id)) + 
            geom_point() +
             ggtitle("") + # add a title
    xlab('Project id') + ylab(' % difference in FiO2') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
       
fio2_prepost_60$fio2_threshold <- ifelse(fio2_prepost_60$fio2_perc_change > 20, "yes", "no")

str(fio2_prepost_60)

t.fio2 <- table(fio2_prepost_60$fio2_threshold)
print(t.fio2)

###create new variable

fio2_prepost_60$fio2_result <- ifelse(fio2_prepost_60$fio2_perc_change < 0, 'Improved',
                         ifelse(fio2_prepost_60$fio2_perc_change == 0, 'ISQ',
                         ifelse(fio2_prepost_60$fio2_perc_change> 0 & fio2_prepost_60$fio2_perc_change < 20 , 'Worse', 'AE')))
str(fio2_prepost_60)    

plot60b <- ggplot(fio2_prepost_60, aes(x = project_id, y=fio2_perc_change, colour=fio2_result)) + 
            geom_point(size=0.8) +
             ggtitle("55-60 minutes post physio") + # add a title
    xlab('Individual patients') + ylab(NULL) + # add axis names
    ylim(-50,250) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
            scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
              geom_hline(yintercept = 0, color = "black")
          
result4 <- table(fio2_prepost_60$fio2_result)

addmargins(result4)
round(prop.table(result4)*100, 2) #to give percentage

plot60x <- ggplot(fio2_prepost_60, aes(x = premedian, y=fio2_diff, colour=fio2_result)) + 
            geom_point(size = 0.5) + geom_jitter() +
             ggtitle("55-60 minutes post-physiotherapy") + # add a title
    ylab(NULL) + xlab('Median FiO2 5 minutes pre-physiotherapy') +
    ylim(-0.8,0.8) +scale_x_continuous(expand = c(0, 0), limits = c(0.2,1.1)) + 
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
            geom_hline(yintercept = 0, color = "black") 
           
#####read in OSI results

osi_60_map<- xap.read_table("osi_60_map")

fio2_prepost_60 <- inner_join(fio2_prepost_60, osi_60_map, by="project_id")
str(fio2_prepost_60)

 plot60z<- ggplot(fio2_prepost_60, aes(x = premedian, y=fio2_diff, colour=osi_threshold)) + 
            geom_point(size = 0.5) + geom_jitter() +
             ggtitle("55-60 minutes post-physiotherapy") + # add a title
    ylab(NULL) + xlab('Median FiO2 5 minutes pre-physiotherapy') +
    ylim(-0.8, 0.8) +scale_x_continuous(expand = c(0, 0), limits = c(0.2,1.1)) + 
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("TRUE", "FALSE"),
                        values=c("red", "steelblue4"))  +
            geom_hline(yintercept = 0, color = "black")    

########################
##combine plots
############################

grid.arrange(plot5c, plot15c, plot30c, plot60c, ncol=2, nrow=2)

grid.arrange(plot5a, plot15a, plot30a, plot60a, ncol=2, nrow=2)

grid.arrange(plot5x, plot15x, plot30x, plot60x, ncol=2, nrow=2)

grid.arrange(plot5z, plot15z, plot30z, plot60z, ncol=2, nrow=2)

##############################################
###repeated measures anova -friedmans 
###########################################

#####get individual datasets
##5 min
str(fio2_prepost_5)  

fio2_5 <- select(fio2_prepost_5, project_id, postmedian, premedian)
str(fio2_5)

names(fio2_5)[names(fio2_5) == "postmedian"] <- "postmedian5"
str(fio2_5)

###15mins

str(fio2_prepost_15)

fio2_15 <- select(fio2_prepost_15, project_id, postmedian)
str(fio2_15)

names(fio2_15)[names(fio2_15) == "postmedian"] <- "postmedian15"
str(fio2_15)

##30mins

fio2_30 <- select(fio2_prepost_30, project_id, postmedian)
str(fio2_30)

names(fio2_30)[names(fio2_30) == "postmedian"] <- "postmedian30"
str(fio2_30)

##60mins
fio2_60 <- select(fio2_prepost_60, project_id, postmedian)
str(fio2_60)

names(fio2_60)[names(fio2_60) == "postmedian"] <- "postmedian60"
str(fio2_60)

####################join together

fio2_change <- full_join(fio2_5, fio2_15, by="project_id")
str(fio2_change)

fio2_change1 <- full_join(fio2_change, fio2_30, by="project_id")
str(fio2_change1)

fio2_change2 <- full_join(fio2_change1, fio2_60, by="project_id")
str(fio2_change2)

###change order of columns
fio2_change3 <- fio2_change2[, c(1, 3, 2, 4, 5, 6)]
str(fio2_change3)

fio2_change3$diff1 <- fio2_change3$postmedian5 - fio2_change3$premedian
fio2_change3$diff2 <- fio2_change3$postmedian15 - fio2_change3$premedian
fio2_change3$diff3 <- fio2_change3$postmedian30 - fio2_change3$premedian
fio2_change3$diff4 <- fio2_change3$postmedian60 - fio2_change3$premedian
fio2_change3$diff5 <- fio2_change3$postmedian15 - fio2_change3$postmedian5
fio2_change3$diff6 <- fio2_change3$postmedian30 - fio2_change3$postmedian5
fio2_change3$diff7 <- fio2_change3$postmedian60 - fio2_change3$postmedian5
fio2_change3$diff8 <- fio2_change3$postmedian30 - fio2_change3$postmedian15
fio2_change3$diff9 <- fio2_change3$postmedian60 - fio2_change3$postmedian15
fio2_change3$diff10 <- fio2_change3$postmedian60 - fio2_change3$postmedian30

summary(fio2_change3)

################change to long format

fio2_change4 <- tidyr::gather(fio2_change3, key=time, value=medianfio2, premedian:postmedian60) %>% 
                    arrange(project_id)
                    
head(fio2_change4)
str(fio2_change4)

test <- fio2_change4 %>% friedman_test(medianfio2 ~ time |project_id)
test

test1 <- fio2_change4 %>% friedman_effsize(medianfio2 ~ time |project_id)
test1


test3 <- fio2_change4 %>% wilcox_test(medianfio2 ~ time, paired = TRUE, p.adjust.method = "bonferroni")
test3

#################################################################################################################
####multilevel regression
################################################################################################################

str(fio2_change4)
unique(fio2_change4$project_id)

#######################################
####convert to factor
################################

fio2_change4$time <- as.factor(fio2_change4$time)
str(fio2_change4)

levels(fio2_change4$time)

#################################################
#####need to bring in other variables
#################################################

####GENDER
#####gender from Demo explor 
str(demographic_data)

fio2_gender <- select(demographic_data, project_id, sex)
str(fio2_gender)

####join to osi_change4

fio2_change5 <- left_join(fio2_change4, fio2_gender, by="project_id")
str(fio2_change5)
unique(fio2_change5$project_id)

######AGE
#####age from Demo explor 
str(age_data)

fio2_age <- select(age_data, project_id, age_in_months)
str(fio2_age)

####join to spo2_change5

fio2_change6 <- left_join(fio2_change5, fio2_age, by="project_id")
str(fio2_change6)
unique(fio2_change6$project_id)

#######WEIGHT
#########weight from Demo explor 

str(weight_data6a)
fio2_weight <- select(weight_data6a, project_id, weight)
str(fio2_weight)

####join to osi_change6

fio2_change7 <- left_join(fio2_change6, fio2_weight, by="project_id")
str(fio2_change7)
unique(fio2_change7$project_id)

############ADMSSION TYPE
#######type from Demo explor 

str(admission_data1)
fio2_admission <- select(admission_data1, project_id, admission.type)
str(fio2_admission)

####join to osi_change7

fio2_change8 <- left_join(fio2_change7,fio2_admission, by="project_id")
str(fio2_change8)
unique(fio2_change8$project_id)

################PELOD
#####pelod from Demo explor 1.1

str(pelod_first)
fio2_pelod <- select(pelod_first, project_id, pelod_score)
str(fio2_pelod)

####join to osi_change8

fio2_change9 <- left_join(fio2_change8, fio2_pelod, by="project_id")
str(fio2_change9)
unique(fio2_change9$project_id)

unique(fio2_change9$time)

###rename for regression and change reference to premedian

fio2_change9$time <- relevel(fio2_change9$time, "postmedian60")
fio2_change9$time <- relevel(fio2_change9$time, "postmedian30")
fio2_change9$time <- relevel(fio2_change9$time, "postmedian15")
fio2_change9$time <- relevel(fio2_change9$time, "postmedian5")
fio2_change9$time <- relevel(fio2_change9$time, "premedian")

str(fio2_change9$time)

levels(fio2_change9$time) <- c("5 pre", "0-5 post", "10-15 post", "25-30 post", "55-60 post")

str(fio2_change9)

beanplot(fio2_change9$medianfio2 ~ fio2_change9$time, overallline = "median", beanlines = "median",
            col = list("steelblue1", "steelblue2", "steelblue3", "steelblue", "steelblue4"), border = c("steelblue1", "steelblue2", "steelblue3", "steelblue", "steelblue4"),
        xlab = "Time point in relation to physiotherapy treatment (minutes)", ylab = "Median FiO2")
       
####################################
###multi level models
####################################

model1 <- glmer(medianfio2 ~ time + weight + admission.type + pelod_score + (1|project_id), data=fio2_change9, family=Gamma(link="log"))
summary(model1)

#####get confidence intervals

confint(model1,parm="beta_",method="Wald")
#########################################################################################################
#####sensitivity analysis   30 mins pre physio
###############################################################################################

###################################################
##subset pre for 30min  pre "F"
#################################################

pre_fio2_2a <- select(pre_fio2_1, project_id, by5, premedian, label)

pre_fio2_3a <- subset(pre_fio2_2a, label == "F")
str(pre_fio2_3a)

pre_fio2_4a <- select(pre_fio2_3a, project_id, by5, premedian)
str(pre_fio2_4a)

###remove row if by5 time not 00:00:00

pre_fio2_5a <- pre_fio2_4a[pre_fio2_4a$by5 == "1970-01-01 00:00:00",]

str(pre_fio2_5a)

###################################################################################################################
########################################
###analysis 1 5 min pre vs 5 min post
########################################
#####################################################################################################################

#########################################
##subset post for 5 min imm post A
######################################

post_fio2_1 <- subset(post_fio2, label == "A")
str(post_fio2_1)

###remove rows if by5 time not 00:00:00

post_fio2_2 <- post_fio2_1[post_fio2_1$by5 == "1970-01-01 00:00:00",]

str(post_fio2_2)

################################
##join pre and post together
###################################

fio2_prepost_5a <- inner_join(post_fio2_2, pre_fio2_5a, by="project_id")
str(fio2_prepost_5a)    

unique(fio2_prepost_5a$project_id)
sum(is.na(fio2_prepost_5a))

###remove NAs

fio2_prepost_5a <- fio2_prepost_5a[complete.cases(fio2_prepost_5a), ]

str(fio2_prepost_5a)

########################################
##create difference variable
############################################

fio2_prepost_5a$fio2_diff <- fio2_prepost_5a$postmedian - fio2_prepost_5a$premedian
str(fio2_prepost_5a)

plot5ac <-ggplot(fio2_prepost_5a, aes(x = project_id, y=fio2_diff, colour = project_id)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle("0-5 mins post-physiotherapy") + # add a title
    xlab(NULL) + ylab('Absolute difference in fio2') + # add axis names
    ylim(-0.4,0.7)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
                 geom_hline(yintercept = 0, color = "black")
                 
##################################
##create percentage change variable
####################################

fio2_prepost_5a$fio2_perc_change <- (fio2_prepost_5a$fio2_diff / fio2_prepost_5a$premedian)* 100
str(fio2_prepost_5a)

ggplot(fio2_prepost_5a, aes(x = project_id, y=fio2_perc_change, colour = project_id)) + 
            geom_point() +
             ggtitle("Percentage FiO2 difference post-pre physio") + # add a title
    xlab('Project id') + ylab(' % difference in FiO2') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
       

fio2_prepost_5a$fio2_threshold <- ifelse(fio2_prepost_5a$fio2_perc_change > 20, "yes", "no")

str(fio2_prepost_5a)

t.fio2 <- table(fio2_prepost_5a$fio2_threshold)
print(t.fio2)

###create new variable

fio2_prepost_5a$fio2_result <- ifelse(fio2_prepost_5a$fio2_perc_change < 0, 'Improved',
                         ifelse(fio2_prepost_5a$fio2_perc_change == 0, 'ISQ',
                         ifelse(fio2_prepost_5a$fio2_perc_change> 0 & fio2_prepost_5a$fio2_perc_change < 20 , 'Worse', 'AE')))
str(fio2_prepost_5a)    

plot5b <- ggplot(fio2_prepost_5a, aes(x = project_id, y=fio2_perc_change, colour=fio2_result)) + 
            geom_point(size=0.8) +
             ggtitle("0-5 minutes post physio") + # add a title
    xlab(NULL) + ylab('% change in 5 minute medians of FiO2') + # add axis names
    ylim(-50,250) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
            scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
              geom_hline(yintercept = 0, color = "black")
        
result1 <- table(fio2_prepost_5a$fio2_result)

addmargins(result1)
round(prop.table(result1)*100, 2) #to give percentage

plot5ac <- ggplot(fio2_prepost_5a, aes(x = premedian, y=fio2_diff, colour=fio2_result)) + 
            geom_point(size=0.8) +
             ggtitle(" 0-5 mins post physiotherapy") + # add a title
    ylab('Absolute change in 5 minute medians of FiO2') + xlab(NULL) +
    ylim(-1,1) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
            geom_hline(yintercept = 0, color = "black")

plot5ab <- ggplot(fio2_prepost_5a, aes(x = project_id, y=fio2_diff, colour=fio2_result)) + 
            geom_point(size=0.8) +
             ggtitle("0-5 minutes post physio") + # add a title
    xlab(NULL) + ylab('Absolute difference 5 minute medians of FiO2') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
            scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
              geom_hline(yintercept = 0, color = "black")
              
 plot5ax <- ggplot(fio2_prepost_5a, aes(x = premedian, y=fio2_diff, colour=fio2_result)) + 
            geom_point(size = 0.5) + geom_jitter() +
             ggtitle("0-5 minutes post-physiotherapy") + # add a title
    ylab('Absolute change in median FiO2') + xlab(NULL) +
    ylim(-0.8, 0.8) +scale_x_continuous(expand = c(0, 0), limits = c(0.2,1.1)) + 
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
            geom_hline(yintercept = 0, color = "black")             

##################################################################################################################
########################################
###analysis 2 5 min pre vs 15 min post
########################################
#####################################################################################################################

str(pre_fio2_5a)

#########################################
##subset post for 5 min imm post C
######################################

post_fio2_15 <- subset(post_fio2, label == "C")
str(post_fio2_15)

###remove rows if by5 time not 00:10:00

post_fio2_15a <- post_fio2_15[post_fio2_15$by5 == "1970-01-01 00:10:00",]

str(post_fio2_15a)

################################
##join pre and post together
###################################

fio2_prepost_15a <- inner_join(post_fio2_15a, pre_fio2_5a, by="project_id")
str(fio2_prepost_15a)    

unique(fio2_prepost_15a$project_id)
sum(is.na(fio2_prepost_15a))

###remove NAs

fio2_prepost_15a <- fio2_prepost_15a[complete.cases(fio2_prepost_15a), ]

str(fio2_prepost_15a)

########################################
##create difference variable
############################################

fio2_prepost_15a$fio2_diff <- fio2_prepost_15a$postmedian - fio2_prepost_15a$premedian
str(fio2_prepost_15a)

plot15ac <- ggplot(fio2_prepost_15a, aes(x = project_id, y=fio2_diff, colour = project_id)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle("10-15 minutes post-physiotherapy") + # add a title
    xlab(NULL) + ylab(NULL) + # add axis names
    ylim(-0.4, 0.7) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
                 geom_hline(yintercept = 0, color = "black")
                 
##################################
##create percentage change variable
####################################

fio2_prepost_15a$fio2_perc_change <- (fio2_prepost_15a$fio2_diff / fio2_prepost_15a$premedian)* 100
str(fio2_prepost_15a)

ggplot(fio2_prepost_15a, aes(x = project_id, y=fio2_perc_change, colour = project_id)) + 
            geom_point() +
             ggtitle("Percentage FiO2 difference post-pre physio") + # add a title
    xlab('Project id') + ylab(' % difference in FiO2') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
       
fio2_prepost_15a$fio2_threshold <- ifelse(fio2_prepost_15a$fio2_perc_change > 20, "yes", "no")

str(fio2_prepost_15a)

t.fio2 <- table(fio2_prepost_15a$fio2_threshold)
print(t.fio2)

###creat new variable

fio2_prepost_15a$fio2_result <- ifelse(fio2_prepost_15a$fio2_perc_change < 0, 'Improved',
                         ifelse(fio2_prepost_15a$fio2_perc_change == 0, 'ISQ',
                         ifelse(fio2_prepost_15a$fio2_perc_change> 0 & fio2_prepost_15a$fio2_perc_change <= 20 , 'Worse', 'AE')))
str(fio2_prepost_15a)    

plot15ab <- ggplot(fio2_prepost_15a, aes(x = project_id, y=fio2_perc_change, colour=fio2_result)) + 
            geom_point(size=0.8) +
             ggtitle("10-15 minutes post physio") + # add a title
    xlab(NULL) + ylab(NULL) + # add axis names
    ylim(-50,250) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
            scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
              geom_hline(yintercept = 0, color = "black")
        
        
result2 <- table(fio2_prepost_15a$fio2_result)

addmargins(result2)
round(prop.table(result2)*100, 2) #to give percentage

plot15aa <- ggplot(fio2_prepost_15a, aes(x = premedian, y=fio2_diff, colour=fio2_result)) + 
            geom_point(size=0.8) +
             ggtitle(" 10-15 mins post physiotherapy") + # add a title
    ylab(NULL) + xlab(NULL) +
    ylim(-1,1) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
         scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
            geom_hline(yintercept = 0, color = "black")

plot15ax <- ggplot(fio2_prepost_15a, aes(x = premedian, y=fio2_diff, colour=fio2_result)) + 
            geom_point(size = 0.5) + geom_jitter() +
             ggtitle("10-15 minutes post-physiotherapy") + # add a title
    ylab(NULL) + xlab(NULL) +
    ylim(-0.8,0.8) + scale_x_continuous(expand = c(0, 0), limits = c(0.2,1.1)) + 
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
            geom_hline(yintercept = 0, color = "black")
            
###################################################################################################################
########################################
###analysis 3 5 min pre vs 30 min post
########################################
#####################################################################################################################

str(pre_fio2_5a)

#########################################
##subset post for 30 min imm post F
######################################

post_fio2_30 <- subset(post_fio2, label == "F")
str(post_fio2_30)

###remove rows if by5 time not 00:25:00

post_fio2_30a <- post_fio2_30[post_fio2_30$by5 == "1970-01-01 00:25:00",]

str(post_fio2_30a)

################################
##join pre and post together
###################################

fio2_prepost_30a <- inner_join(post_fio2_30a, pre_fio2_5a, by="project_id")
str(fio2_prepost_30a)    

unique(fio2_prepost_30a$project_id)
sum(is.na(fio2_prepost_30a))

###remove NAs

fio2_prepost_30a <- fio2_prepost_30a[complete.cases(fio2_prepost_30a), ]

str(fio2_prepost_30a)

########################################
##create difference variable
############################################

fio2_prepost_30a$fio2_diff <- fio2_prepost_30a$postmedian - fio2_prepost_30a$premedian
str(fio2_prepost_30a)

plot30ac <- ggplot(fio2_prepost_30a, aes(x = project_id, y=fio2_diff, colour = project_id)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle("25-30 mins post-physiotherapy") + # add a title
    xlab('Individual patients') + ylab('Absolute difference in fio2') + # add axis names
      ylim(-0.4,0.7) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
                 geom_hline(yintercept = 0, color = "black")
                 
##################################
##create percentage change variable
####################################

fio2_prepost_30a$fio2_perc_change <- (fio2_prepost_30a$fio2_diff / fio2_prepost_30a$premedian)* 100
str(fio2_prepost_30a)

ggplot(fio2_prepost_30a, aes(x = project_id, y=fio2_perc_change, colour = project_id)) + 
            geom_point() +
             ggtitle("Percentage FiO2 difference post-pre physio") + # add a title
    xlab('Project id') + ylab(' % difference in FiO2') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
       

fio2_prepost_30a$fio2_threshold <- ifelse(fio2_prepost_30a$fio2_perc_change > 20, "yes", "no")

str(fio2_prepost_30a)

t.fio2 <- table(fio2_prepost_30a$fio2_threshold)
print(t.fio2)

###creat new variable

fio2_prepost_30a$fio2_result <- ifelse(fio2_prepost_30a$fio2_perc_change < 0, 'Improved',
                         ifelse(fio2_prepost_30a$fio2_perc_change == 0, 'ISQ',
                         ifelse(fio2_prepost_30a$fio2_perc_change> 0 & fio2_prepost_30a$fio2_perc_change <= 20 , 'Worse', 'AE')))
str(fio2_prepost_30a)    

plot30ab <- ggplot(fio2_prepost_30a, aes(x = project_id, y=fio2_perc_change, colour=fio2_result)) + 
            geom_point(size=0.8) +
             ggtitle("25-30 minutes post physio") + # add a title
    xlab('Individual patients') + ylab('% change in 5 minute medians of FiO2') + # add axis names
    ylim(-50, 250) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
            scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
              geom_hline(yintercept = 0, color = "black")
          
result3 <- table(fio2_prepost_30a$fio2_result)

addmargins(result3)
round(prop.table(result3)*100, 2) #to give percentage

plot30ax <- ggplot(fio2_prepost_30a, aes(x = premedian, y=fio2_diff, colour=fio2_result)) + 
            geom_point(size = 0.5) + geom_jitter() +
             ggtitle("25-30 minutes post-physiotherapy") + # add a title
    ylab('Absolute change in median FiO2') + xlab('Median FiO2 5 minutes pre-physiotherapy') +
    ylim(-0.8,0.8) + scale_x_continuous(expand = c(0, 0), limits = c(0.2,1.1)) + 
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
            geom_hline(yintercept = 0, color = "black")

###################################################################################################################
########################################
###analysis 4 5 min pre vs 60 min post
########################################
#####################################################################################################################

str(pre_fio2_5)

#########################################
##subset post for 60 min imm post L
######################################

post_fio2_60 <- subset(post_fio2, label == "L")
str(post_fio2_60)

###remove rows if by5 time not 00:55:00

post_fio2_60a <- post_fio2_60[post_fio2_60$by5 == "1970-01-01 00:55:00",]

str(post_fio2_60a)

################################
##join pre and post together
###################################

fio2_prepost_60a <- inner_join(post_fio2_60a, pre_fio2_5a, by="project_id")
str(fio2_prepost_60a)    

unique(fio2_prepost_60a$project_id)
sum(is.na(fio2_prepost_60a))

###remove NAs

fio2_prepost_60a <- fio2_prepost_60a[complete.cases(fio2_prepost_60a), ]

str(fio2_prepost_60a)

########################################
##create difference variable
############################################

fio2_prepost_60a$fio2_diff <- fio2_prepost_60a$postmedian - fio2_prepost_60a$premedian
str(fio2_prepost_60a)

plot60ac <- ggplot(fio2_prepost_60a, aes(x = project_id, y=fio2_diff, colour = project_id)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle("55-60 mins post-physiotherapy") + # add a title
    xlab('Individual patients') + ylab(NULL) + # add axis names
     ylim(-0.4,0.7) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
                 geom_hline(yintercept = 0, color = "black")
                 
##################################
##create percentage change variable
####################################

fio2_prepost_60a$fio2_perc_change <- (fio2_prepost_60a$fio2_diff / fio2_prepost_60a$premedian)* 100
str(fio2_prepost_60a)

ggplot(fio2_prepost_60a, aes(x = project_id, y=fio2_perc_change, colour = project_id)) + 
            geom_point() +
             ggtitle("") + # add a title
    xlab('Project id') + ylab(' % difference in FiO2') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
       
fio2_prepost_60a$fio2_threshold <- ifelse(fio2_prepost_60a$fio2_perc_change > 20, "yes", "no")

str(fio2_prepost_60a)

t.fio2 <- table(fio2_prepost_60a$fio2_threshold)
print(t.fio2)

###creat new variable

fio2_prepost_60a$fio2_result <- ifelse(fio2_prepost_60a$fio2_perc_change < 0, 'Improved',
                         ifelse(fio2_prepost_60a$fio2_perc_change == 0, 'ISQ',
                         ifelse(fio2_prepost_60a$fio2_perc_change> 0 & fio2_prepost_60a$fio2_perc_change <= 20 , 'Worse', 'AE')))
str(fio2_prepost_60a)    

plot60ab <- ggplot(fio2_prepost_60a, aes(x = project_id, y=fio2_perc_change, colour=fio2_result)) + 
            geom_point(size=0.8) +
             ggtitle("55-60 minutes post physio") + # add a title
    xlab('Individual patients') + ylab(NULL) + # add axis names
    ylim(-50,250) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
            scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
              geom_hline(yintercept = 0, color = "black")
        
result4 <- table(fio2_prepost_60a$fio2_result)

addmargins(result4)
round(prop.table(result4)*100, 2) #to give percentage

plot60ax <- ggplot(fio2_prepost_60a, aes(x = premedian, y=fio2_diff, colour=fio2_result)) + 
            geom_point(size = 0.5) + geom_jitter() +
             ggtitle("55-60 minutes post-physiotherapy") + # add a title
    ylab(NULL) + xlab('Median FiO2 5 minutes pre-physiotherapy') +
    ylim(-0.8,0.8) + scale_x_continuous(expand = c(0, 0), limits = c(0.2,1.1)) + 
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
            geom_hline(yintercept = 0, color = "black") 
           
########################
##combine plots
############################
grid.arrange(plot5ac, plot15ac, plot30ac, plot60ac, ncol=2, nrow=2)

grid.arrange(plot5ab, plot15ab, plot30ab, plot60ab, ncol=2, nrow=2)

grid.arrange(plot5ax, plot15ax, plot30ax, plot60ax, ncol=2, nrow=2)

##############################################
###repeated measures anova -friedmans 
###########################################

#####get individual datasets
##5 min
str(fio2_prepost_5a)  

fio2_5a <- select(fio2_prepost_5a, project_id, postmedian, premedian)
str(fio2_5a)

names(fio2_5a)[names(fio2_5a) == "postmedian"] <- "postmedian5"
str(fio2_5a)

###15mins

str(fio2_prepost_15a)

fio2_15a <- select(fio2_prepost_15a, project_id, postmedian)
str(fio2_15a)

names(fio2_15a)[names(fio2_15a) == "postmedian"] <- "postmedian15"
str(fio2_15a)

##30mins

fio2_30a <- select(fio2_prepost_30a, project_id, postmedian)
str(fio2_30a)

names(fio2_30a)[names(fio2_30a) == "postmedian"] <- "postmedian30"
str(fio2_30a)

##60mins
fio2_60a <- select(fio2_prepost_60a, project_id, postmedian)
str(fio2_60a)

names(fio2_60a)[names(fio2_60a) == "postmedian"] <- "postmedian60"
str(fio2_60a)

##########join together

fio2_changea <- full_join(fio2_5a, fio2_15a, by="project_id")
str(fio2_changea)

fio2_change1a <- full_join(fio2_changea, fio2_30a, by="project_id")
str(fio2_change1a)

fio2_change2a <- full_join(fio2_change1a, fio2_60a, by="project_id")
str(fio2_change2a)

###change order of columns
fio2_change3a <- fio2_change2a[, c(1, 3, 2, 4, 5, 6)]
str(fio2_change3a)

fio2_change3a$diff1 <- fio2_change3a$postmedian5 - fio2_change3a$premedian
fio2_change3a$diff2 <- fio2_change3a$postmedian15 - fio2_change3a$premedian
fio2_change3a$diff3 <- fio2_change3a$postmedian30 - fio2_change3a$premedian
fio2_change3a$diff4 <- fio2_change3a$postmedian60 - fio2_change3a$premedian
fio2_change3a$diff5 <- fio2_change3a$postmedian15 - fio2_change3a$postmedian5
fio2_change3a$diff6 <- fio2_change3a$postmedian30 - fio2_change3a$postmedian5
fio2_change3a$diff7 <- fio2_change3a$postmedian60 - fio2_change3a$postmedian5
fio2_change3a$diff8 <- fio2_change3a$postmedian30 - fio2_change3a$postmedian15
fio2_change3a$diff9 <- fio2_change3a$postmedian60 - fio2_change3a$postmedian15
fio2_change3a$diff10 <- fio2_change3a$postmedian60 - fio2_change3a$postmedian30

summary(fio2_change3a)

########change to long format

fio2_change4a <- tidyr::gather(fio2_change3a, key=time, value=medianfio2, premedian:postmedian60) %>% 
                    arrange(project_id)
                    
head(fio2_change4a)
str(fio2_change4a)

test <- fio2_change4a %>% friedman_test(medianfio2 ~ time |project_id)
test


test1 <- fio2_change4a %>% friedman_effsize(medianfio2 ~ time |project_id)
test1


test3 <- fio2_change4a %>% wilcox_test(medianfio2 ~ time, paired = TRUE, p.adjust.method = "bonferroni")
test3
       
#################################################################################################################
####multilevel regression
################################################################################################################

str(fio2_change4a)
unique(fio2_change4a$project_id)

#######################################
####convert to factor
################################

fio2_change4a$time <- as.factor(fio2_change4a$time)
str(fio2_change4a)

levels(fio2_change4a$time)

#################################################
#####need to bring in other variables
#################################################

####GENDER
#####gender from Demo explor 1.1
str(demographic_data)

fio2_gender <- select(demographic_data, project_id, sex)
str(fio2_gender)

####join to osi_change4

fio2_change5 <- left_join(fio2_change4a, fio2_gender, by="project_id")
str(fio2_change5)
unique(fio2_change5$project_id)

######AGE
#####age from Demo explor 
str(age_data)

fio2_age <- select(age_data, project_id, age_in_months)
str(fio2_age)

####join to spo2_change5

fio2_change6 <- left_join(fio2_change5, fio2_age, by="project_id")
str(fio2_change6)
unique(fio2_change6$project_id)

#######WEIGHT
#########weight from Demo explor 

str(weight_data6a)
fio2_weight <- select(weight_data6a, project_id, weight)
str(fio2_weight)

####join to osi_change6

fio2_change7 <- left_join(fio2_change6, fio2_weight, by="project_id")
str(fio2_change7)
unique(fio2_change7$project_id)

############ADMSSION TYPE
#######type from Demo explor 

str(admission_data1)
fio2_admission <- select(admission_data1, project_id, admission.type)
str(fio2_admission)

####join to osi_change7

fio2_change8 <- left_join(fio2_change7, fio2_admission, by="project_id")
str(fio2_change8)
unique(fio2_change8$project_id)

################PELOD
#####pelod from Demo explor 

str(pelod_first)
fio2_pelod <- select(pelod_first, project_id, pelod_score)
str(fio2_pelod)

####join to osi_change8

fio2_change9 <- left_join(fio2_change8, fio2_pelod, by="project_id")
str(fio2_change9)
unique(fio2_change9$project_id)

unique(fio2_change9$time)

###rename for regression and change reference to premedian

fio2_change9$time <- relevel(fio2_change9$time, "postmedian60")
fio2_change9$time <- relevel(fio2_change9$time, "postmedian30")
fio2_change9$time <- relevel(fio2_change9$time, "postmedian15")
fio2_change9$time <- relevel(fio2_change9$time, "postmedian5")
fio2_change9$time <- relevel(fio2_change9$time, "premedian")

str(fio2_change9$time)

levels(fio2_change9$time) <- c("30 pre", "0-5 post", "10-15 post", "25-30 post", "55-60 post")

str(fio2_change9)

beanplot(fio2_change9$medianfio2 ~ fio2_change9$time, overallline = "median", beanlines = "median",
            col = list("steelblue1", "steelblue2", "steelblue3", "steelblue", "steelblue4"), border = c("steelblue1", "steelblue2", "steelblue3", "steelblue", "steelblue4"),
        xlab = "Time point in relation to physiotherapy treatment (minutes)", ylab = "Median FiO2")
       
####################################
###multi level models
####################################

model1 <- glmer(medianfio2 ~ time + weight + admission.type + pelod_score + (1|project_id), data=fio2_change9, family=Gamma(link="log"))
summary(model1)

#####get confidence intervals

confint(model1,parm="beta_",method="Wald")
















#######################################Script 9 – Mean airway pressure first session exploration######################################################


##########################
##load in map files
##########################

##data set 1

map1 <- xap.read_table("map1_1_1")

str(map1)

map1a <- select(map1, project_id, datetime, pre_datetime, start_datetime, end_datetime, record_date_time, map)

str(map1a)

##data set 2

map2 <-xap.read_table("map2_1_1")
str(map2)

map2a <- select(map2, project_id, datetime, pre_datetime, start_datetime, end_datetime, record_date_time, map)

str(map2a)

##partial data set

map_p <- xap.read_table("mapp_1_1")
str(map_p)

map_p1 <- select(map_p, project_id, datetime, pre_datetime, start_datetime, end_datetime, record_date_time, map)

str(map_p1)

###################################################
###################################################
# combine part 1 and part 2 and partial hr files
####################################################
##################################################

#combine 1 & 2

MAP_a <- rbind(map1a, map2a)

str(MAP_a)

#combing with partial

MAP_first <- rbind(MAP_a, map_p1)

str(MAP_first)
unique(MAP_first$project_id)
###############
##explore map
#############

summary(MAP_first)

######################################################################################
# to plot raw data on grpah - calculate time difference from first recorded (baseline)
#######################################################################################

 map_first_data <- MAP_first %>%
  arrange(project_id, record_date_time) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time - pre_datetime,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(map_first_data)

ggplot(map_first_data, aes(x=diff_secs, y=map, color = project_id)) + 
 geom_point(aes(color = project_id), size = 1) +
            ggtitle("Mean arterial pressure pre and post physio") + # add a title
    xlab('Time (seconds)') + ylab('MAP') + # add axis names
    xlim(0,7500) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position="none") +
             scale_color_viridis(discrete = TRUE, option = "D") +
                 geom_vline(xintercept = c(1800, 3600), color = "red")

##############################################################
###create pre and post data set
#############################################################
## pre physio
pre_map_first <- MAP_first %>% group_by(project_id) %>%
filter(record_date_time > pre_datetime & record_date_time < start_datetime) %>% ungroup()
str(pre_map_first)
summary(pre_map_first)
      
## post physio            
             
post_map_first <-  MAP_first %>% group_by(project_id) %>%
filter(record_date_time > datetime & record_date_time < end_datetime) %>% ungroup()
str(post_map_first)
summary(post_map_first)

#############################################################################
# to plot raw data on grpah - calculate time difference from first recorded (baseline)
#############################################################################

###pre physio

pre_map_first2 <- pre_map_first %>%
  arrange(project_id, record_date_time) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time - pre_datetime,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(pre_map_first2)

ggplot(pre_map_first2, aes(x=diff_secs, y=map, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            ggtitle("MAP pre physiotherapy") + # add a title
    xlab('Time (secs)') + ylab('MAP') + # add axis names
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
             
###post physio

 post_map_first2 <- post_map_first %>%
  arrange(project_id, record_date_time) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time - datetime,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(post_map_first2)

ggplot(post_map_first2, aes(x=diff_secs, y=map, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            ggtitle("MAP post physiotherapy") + # add a title
    xlab('Time (secs)') + ylab('MAP') + # add axis names
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")             
             
########################################
# prepare data to calulate 5 min epochs
######################################

###pre physio, prepare consistant dates times

str(pre_map_first)

pre_map_first2 <- pre_map_first %>%
  arrange(project_id, record_date_time) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time - pre_datetime,
   diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(pre_map_first2)

pre_map_first_test <- mutate(pre_map_first2, map_time = as.POSIXct(diff_secs, origin = "1970-01-01"))
str(pre_map_first_test)

####generate 5 min epochs and summaries

pre_map_first_5 <- pre_map_first_test %>% group_by(project_id, by5=cut(map_time, "5 min")) %>%
  summarise(median=median(map), across())
  
str(pre_map_first_5)
head(pre_map_first_5)

##remove repeated rows 'by 5'

pre_map_first_5a <- pre_map_first_5 %>% group_by(project_id, by5) %>% 
  filter(row_number()==1) %>%
  ungroup()

str(pre_map_first_5a)

###check how many values for each 

table(pre_map_first_5a$project_id)

##post physio prepare new times

post_map_first2 <- post_map_first %>%
  arrange(project_id, record_date_time) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time - datetime,
   diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(post_map_first2)

post_map_first_test <- mutate(post_map_first2, map_time = as.POSIXct(diff_secs, origin = "1970-01-01"))
str(post_map_first_test)

##create 5 min epochs

post_map_first_5 <- post_map_first_test %>% group_by(project_id, by5=cut(map_time, "5 min")) %>%
  summarise(median=median(map), across())
  
str(post_map_first_5)
head(post_map_first_5)

##remove repeated rows 'by 5'

post_map_first_5a <- post_map_first_5 %>% group_by(project_id, by5) %>% 
  filter(row_number()==1) %>%
  ungroup()

str(post_map_first_5a)

###check how many values for each 

table(post_map_first_5a$project_id)

###check distrubution

ggplot(pre_map_first_5a, aes(x=map)) + geom_histogram()
ggplot(post_map_first_5a, aes(x=map)) + geom_histogram()

#########################################################################
## draw graph of median and time - calculate time difference from first recorded
#########################################################################

#need to change by into POSIXct from factor

pre_map_first_5a$by5 <- as.POSIXct(pre_map_first_5a$by5,format='%Y-%m-%d %H:%M:%S')

post_map_first_5a$by5 <- as.POSIXct(post_map_first_5a$by5,format='%Y-%m-%d %H:%M:%S')

### pre-physio

#calcualtion difference in seconds 

fun_color_range <- colorRampPalette(c("lightblue", "navy"))   
my_colors <- fun_color_range(268)  
         
## plot median map     
             
pre_plot <- ggplot(pre_map_first_5a, aes(x=diff_secs, y=median, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            geom_line() +
            ggtitle("MAP pre-physiotherapy") + # add a title
    xlab('Time (seconds)') + ylab('Median MAP') + # add axis names
     scale_x_continuous(expand = c(0, 0), limits = c(0, 1750)) +    scale_y_continuous(expand = c(0, 0), limits = c(5, 17)) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_manual(values=my_colors) 
          
### post-physio
    
## plot median map     
             
post_plot <- ggplot(post_map_first_5a, aes(x=diff_secs, y=median, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            geom_line() +
            ggtitle("MAP post-physiotherapy") + # add a title
    xlab('Time (seconds)') + ylab('Median MAP') + # add axis names
         scale_x_continuous(expand = c(0, 0), limits = c(0, 3800)) +     scale_y_continuous(expand = c(0, 0), limits = c(5, 17)) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_manual(values=my_colors)          
                                   
require(gridExtra)

grid.arrange(pre_plot, post_plot, ncol=2)

##########################################
###5 mins  pre and post add extra column
#########################################

str(pre_map_first_5a)
str(post_map_first_5a)

##select columns want

premap <- select(pre_map_first_5a, project_id, by5, median)
postmap <- select(post_map_first_5a, project_id, by5, median)

##rename medians for clarity

names(premap)[names(premap) == 'median'] <- 'premedian'
names(postmap)[names(postmap) == 'median'] <- 'postmedian'

str(premap)
str(postmap)

##add extra column 

premap1 <- premap %>%
group_by(project_id) %>%
  mutate(label1 = LETTERS[row_number()]) %>%
  ungroup()

postmap1 <- postmap %>%
group_by(project_id) %>%
  mutate(label = LETTERS[row_number()]) %>%
  ungroup()

str(premap1)
str(postmap1)

##try to reverse preOSI letters

premap2 <- premap1 %>%
group_by(project_id) %>%
mutate(label = rev(label1)) %>%
ungroup()

str(premap2)

###################################################################################################################
########################################
###analysis 1 5 min pre vs 5 min post
########################################
#####################################################################################################################

###################################################
##subset pre for just 5min immediately pre "A"
#################################################
premap3 <- select(premap2, project_id, by5, premedian, label)

premap4 <- subset(premap3, label == "A")
str(premap4)

premap5 <- select(premap4, project_id, by5, premedian)
str(premap5)

###remove row if by5 time not 00:25:00

premap6 <- premap5[premap5$by5 == "1970-01-01 00:25:00",]

str(premap6)

#########################################
##subset post for 5 min imm post A
######################################

postmap2 <- subset(postmap1, label == "A")
str(postmap2)

###remove rows if by5 time not 00:00:00

postmap3 <- postmap2[postmap2$by5 == "1970-01-01 00:00:00",]

str(postmap3)

################################
##join pre and post together
###################################

map_prepost_5a <- inner_join(postmap3, premap6, by="project_id")
str(map_prepost_5a)    

unique(map_prepost_5a$project_id)
sum(is.na(map_prepost_5a))

###############join to osi_ae

##read file in

osi_5_map<- xap.read_table("osi_5_map")

map_prepost_5 <- inner_join(map_prepost_5a, osi_5_map, by="project_id")
str(map_prepost_5)

table(map_prepost_5$osi_threshold)

##############################################
##calculate differences in 5 mins medians
###########################################
 
map_prepost_5$map_diff <- map_prepost_5$postmedian - map_prepost_5$premedian
str(map_prepost_5)

##plot with id
plot5a <- ggplot(map_prepost_5, aes(x = premedian, y=map_diff, color=osi_threshold)) + 
            geom_point() +
             ggtitle("0-5 minutes post-physiotherapy") + # add a title
    xlab(NULL) + ylab('Change in median MAP') + # add axis names
    ylim(-6,4) +scale_x_continuous(expand = c(0, 0), limits = c(6, 17)) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
               scale_color_manual(breaks = c(TRUE, FALSE),
                        values=c("red", "steelblue4")) +
                          geom_hline(yintercept = 0, color = "black")

####create new variable with improvement/worse

map_prepost_5$map_result <- ifelse(map_prepost_5$map_diff < 0, 'Improved',
                         ifelse(map_prepost_5$map_diff == 0, 'ISQ', 'Worse'))
                        
str(map_prepost_5)

t.map1 <- table(map_prepost_5$map_result)

addmargins(t.map1)
round(prop.table(t.map1)*100, 2) #to give percentage

plot5b <- ggplot(map_prepost_5, aes(x = premedian, y=map_diff, color=map_result)) + 
            geom_point() +
             ggtitle("0-5 minutes post-physiotherapy") + # add a title
    xlab(NULL) + ylab('Change in median MAP') + # add axis names
    ylim(-6,4) +scale_x_continuous(expand = c(0, 0), limits = c(6, 17)) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_manual(breaks = c("Worse", "ISQ", "Improved"),
                        values=c("red", "chartreuse4", "chartreuse3"))  +
            geom_hline(yintercept = 0, color = "black")


###################################################################################################################
########################################
###analysis 2 5 min pre vs 15 min post
########################################
#####################################################################################################################

######################################
##subset post for 15 min imm post C
######################################

postmap15 <- subset(postmap1, label == "C")
str(postmap15)

###remove rows if by5 time not 00:10:00


postmap15a <- postmap15[postmap15$by5 == "1970-01-01 00:10:00",]
str(postmap15a)

################################
##join pre and post together
################################

map_prepost_15a <- inner_join(postmap15a, premap6, by="project_id")
str(map_prepost_15a)    

unique(map_prepost_15a$project_id)
sum(is.na(map_prepost_15a))

###############join to osi_ae

##read file in

osi_15_map<- xap.read_table("osi_15_map")

map_prepost_15 <- inner_join(map_prepost_15a, osi_15_map, by="project_id")
str(map_prepost_15)

table(map_prepost_15$osi_threshold)

###########################################
##calculate differences in 5 mins medians
###########################################
 
map_prepost_15$map_diff <- map_prepost_15$postmedian - map_prepost_15$premedian
str(map_prepost_15)

##plot 
plot15a <- ggplot(map_prepost_15, aes(x = premedian, y=map_diff, colour=osi_threshold)) + 
            geom_point() +
             ggtitle("10-15 minutes post-physiotherapy ") + # add a title
    xlab(NULL) + ylab(NULL) + # add axis names
    ylim(-6,4) +scale_x_continuous(expand = c(0, 0), limits = c(6, 17)) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
                    scale_color_manual(breaks = c(TRUE, FALSE),
                        values=c("red", "steelblue4")) +
                          geom_hline(yintercept = 0, color = "black")  
           
####create new variable with improvement/worse

map_prepost_15$map_result <- ifelse(map_prepost_15$map_diff < 0, 'Improved',
                         ifelse(map_prepost_15$map_diff == 0, 'ISQ', 'Worse'))
                        
str(map_prepost_15)

t.map15 <- table(map_prepost_15$map_result)

addmargins(t.map15)
round(prop.table(t.map15)*100, 2) #to give percentage


plot15b <- ggplot(map_prepost_15, aes(x = premedian, y=map_diff, colour=map_result)) + 
            geom_point() +
             ggtitle("10-15 minutes post-physiotherapy ") + # add a title
    xlab(NULL) + ylab(NULL) + # add axis names
    ylim(-6,4) +scale_x_continuous(expand = c(0, 0), limits = c(6, 17)) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
            theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_manual(breaks = c("Worse", "ISQ", "Improved"),
                        values=c("red", "chartreuse4", "chartreuse3"))  +
            geom_hline(yintercept = 0, color = "black")

###################################################################################################################
########################################
###analysis 3 5 min pre vs 30 min post
########################################
#####################################################################################################################

######################################
##subset post for 30 min imm post F
######################################

postmap30 <- subset(postmap1, label == "F")
str(postmap30)

###remove rows if by5 time not 00:25:00

postmap30a <- postmap30[postmap30$by5 == "1970-01-01 00:25:00",]

str(postmap30a)

################################
##join pre and post together
###################################

map_prepost_30a <- inner_join(postmap30a, premap6, by="project_id")
str(map_prepost_30a)    

unique(map_prepost_30a$project_id)
sum(is.na(map_prepost_30a))

###############join to osi_ae

##read file in

osi_30_map<- xap.read_table("osi_30_map")

map_prepost_30 <- inner_join(map_prepost_30a, osi_30_map, by="project_id")
str(map_prepost_30)

table(map_prepost_30$osi_threshold)

##############################################
##calculate differences in 5 mins medians
###########################################
 
map_prepost_30$map_diff <- map_prepost_30$postmedian - map_prepost_30$premedian
str(map_prepost_30)

##plot with id
plot30a <- ggplot(map_prepost_30, aes(x = premedian, y=map_diff, colour=osi_threshold)) + 
            geom_point() +
             ggtitle("25-30 minutes post-physiotherapy") + # add a title
    xlab('Median MAP 5 minutes pre-physiotherapy') + ylab('Change in median MAP') + # add axis names
    ylim(-6,4) +scale_x_continuous(expand = c(0, 0), limits = c(6, 17)) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_manual(breaks = c(TRUE, FALSE),
                        values=c("red", "steelblue4")) +
                          geom_hline(yintercept = 0, color = "black")
           
####create new variable with improvement/worse

map_prepost_30$map_result <- ifelse(map_prepost_30$map_diff < 0, 'Improved',
                         ifelse(map_prepost_30$map_diff == 0, 'ISQ', 'Worse'))
                        
str(map_prepost_30)

t.map30 <- table(map_prepost_30$map_result)

addmargins(t.map30)
round(prop.table(t.map30)*100, 2) #to give percentage


plot30b <- ggplot(map_prepost_30, aes(x = premedian, y=map_diff, colour=map_result)) + 
            geom_point() +
             ggtitle("25-30 minutes post-physiotherapy") + # add a title
    xlab('Median MAP 5 minutes pre-physiotherapy') + ylab('Change in median MAP') + # add axis names
    ylim(-6,4) +scale_x_continuous(expand = c(0, 0), limits = c(6, 17)) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
        scale_color_manual(breaks = c("Worse", "ISQ", "Improved"),
                        values=c("red", "chartreuse4", "chartreuse3"))  +
            geom_hline(yintercept = 0, color = "black")

###################################################################################################################
########################################
###analysis 4 5 min pre vs 60 min post
########################################
#####################################################################################################################

#########################################
##subset post for 60 min imm post L
######################################

postmap60 <- subset(postmap1, label == "L")
str(postmap60)

###remove rows if by5 time not 00:55:00

postmap60a <- postmap60[postmap60$by5 == "1970-01-01 00:55:00",]

str(postmap60a)

################################
##join pre and post together
###################################

map_prepost_60a <- inner_join(postmap60a, premap6, by="project_id")
str(map_prepost_60a)    

unique(map_prepost_60a$project_id)
sum(is.na(map_prepost_60a))

###############join to osi_ae

##read file in

osi_60_map<- xap.read_table("osi_60_map")

map_prepost_60 <- inner_join(map_prepost_60a, osi_60_map, by="project_id")
str(map_prepost_60)

table(map_prepost_60$osi_threshold)

##############################################
##calculate differences in 5 mins medians
###########################################
 
map_prepost_60$map_diff <- map_prepost_60$postmedian - map_prepost_60$premedian
str(map_prepost_60)

##plot 
plot60a <- ggplot(map_prepost_60, aes(x = premedian, y=map_diff, colour=osi_threshold)) + 
            geom_point() +
             ggtitle("55-60 minutes post-physiotherapy") + # add a title
    xlab('Median MAP 5 minutes pre-physiotherapy') + ylab(NULL) + # add axis names 
    ylim(-6, 4) +scale_x_continuous(expand = c(0, 0), limits = c(6, 17)) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
            scale_color_manual(breaks = c(TRUE, FALSE),
                        values=c("red", "steelblue4")) +
                          geom_hline(yintercept = 0, color = "black")
    
####create new variable with improvement/worse

map_prepost_60$map_result <- ifelse(map_prepost_60$map_diff < 0, 'Improved',
                         ifelse(map_prepost_60$map_diff == 0, 'ISQ', 'Worse'))
                        

str(map_prepost_60)

t.map60 <- table(map_prepost_60$map_result)

addmargins(t.map60)
round(prop.table(t.map60)*100, 2) #to give percentage

plot60b <- ggplot(map_prepost_60, aes(x = premedian, y=map_diff, colour=map_result)) + 
            geom_point() +
             ggtitle("55-60 minutes post-physiotherapy") + # add a title
    xlab('Median MAP 5 minutes pre-physiotherapy') + ylab(NULL) + # add axis names 
    ylim(-6, 4) +    scale_x_continuous(expand = c(0, 0), limits = c(6, 17)) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
  scale_color_manual(breaks = c("Worse", "ISQ", "Improved"),
                        values=c("red", "chartreuse4", "chartreuse3"))  +
            geom_hline(yintercept = 0, color = "black")
            
#######################
##combine plots
############################

grid.arrange(plot5a, plot15a, plot30a, plot60a, ncol=2, nrow=2)

grid.arrange(plot5b, plot15b, plot30b, plot60b, ncol=2, nrow=2)

##################################################
###repeated measure anova, quantify change
##################################################

#####get individual datasets
##5 min
str(map_prepost_5)  

map_5 <- select(map_prepost_5, project_id, postmedian, premedian)
str(map_5)

names(map_5)[names(map_5) == "postmedian"] <- "postmedian5"
str(map_5)

###15mins

str(map_prepost_15)

map_15 <- select(map_prepost_15, project_id, postmedian)
str(map_15)

names(map_15)[names(map_15) == "postmedian"] <- "postmedian15"
str(map_15)

##30mins

map_30 <- select(map_prepost_30, project_id, postmedian)
str(map_30)

names(map_30)[names(map_30) == "postmedian"] <- "postmedian30"
str(map_30)

##60mins
map_60 <- select(map_prepost_60, project_id, postmedian)
str(map_60)

names(map_60)[names(map_60) == "postmedian"] <- "postmedian60"
str(map_60)

####################join together

map_change <- full_join(map_5, map_15, by="project_id")
str(map_change)

map_change1 <- full_join(map_change, map_30, by="project_id")
str(map_change1)

map_change2 <- full_join(map_change1, map_60, by="project_id")
str(map_change2)

###change order of columns
map_change3 <- map_change2[, c(1, 3, 2, 4, 5, 6)]
str(map_change3)

map_change3$diff1 <- map_change3$postmedian5 - map_change3$premedian
map_change3$diff2 <- map_change3$postmedian15 - map_change3$premedian
map_change3$diff3 <- map_change3$postmedian30 - map_change3$premedian
map_change3$diff4 <- map_change3$postmedian60 - map_change3$premedian
map_change3$diff5 <- map_change3$postmedian15 - map_change3$postmedian5
map_change3$diff6 <- map_change3$postmedian30 - map_change3$postmedian5
map_change3$diff7 <- map_change3$postmedian60 - map_change3$postmedian5
map_change3$diff8 <- map_change3$postmedian30 - map_change3$postmedian15
map_change3$diff9 <- map_change3$postmedian60 - map_change3$postmedian15
map_change3$diff10 <- map_change3$postmedian60 - map_change3$postmedian30

summary(map_change3)

################change to long format

map_change4 <- tidyr::gather(map_change3, key=time, value=medianmap, premedian:postmedian60) %>% 
                    arrange(project_id)
                    
head(map_change4)
str(map_change4)

test <- map_change4 %>% friedman_test(medianmap ~ time |project_id)
test

test1 <- map_change4 %>% friedman_effsize(medianmap ~ time |project_id)
test1

test3 <- map_change4 %>% wilcox_test(medianmap ~ time, paired = TRUE, p.adjust.method = "bonferroni")
test3

#################################################################################################################
####multilevel regression
################################################################################################################

str(map_change4)
unique(map_change4$project_id)

#######################################
####convert to factor
################################

map_change4$time <- as.factor(map_change4$time)
str(map_change4)

levels(map_change4$time)

#################################################
#####need to bring in other variables
#################################################

####GENDER
#####gender from Demo explor 1.1
str(demographic_data)

map_gender <- select(demographic_data, project_id, sex)
str(map_gender)

####join to osi_change4

map_change5 <- left_join(map_change4, map_gender, by="project_id")
str(map_change5)
unique(map_change5$project_id)

######AGE
#####age from Demo explor 
str(age_data)

map_age <- select(age_data, project_id, age_in_months)
str(map_age)

####join to osi_change5

map_change6 <- left_join(map_change5, map_age, by="project_id")
str(map_change6)
unique(map_change6$project_id)

#######WEIGHT
#########weight from Demo explor 

str(weight_data6a)
map_weight <- select(weight_data6a, project_id, weight)
str(map_weight)

####join to osi_change6

map_change7 <- left_join(map_change6, map_weight, by="project_id")
str(map_change7)
unique(map_change7$project_id)

############ADMSSION TYPE
#######type from Demo explor 

str(admission_data1)
map_admission <- select(admission_data1, project_id, admission.type)
str(map_admission)

####join to osi_change7

map_change8 <- left_join(map_change7, map_admission, by="project_id")
str(map_change8)
unique(map_change8$project_id)

################PELOD
#####pelod from Demo explor 

str(pelod_first)
map_pelod <- select(pelod_first, project_id, pelod_score)
str(map_pelod)

####join to osi_change8

map_change9 <- left_join(map_change8, map_pelod, by="project_id")
str(map_change9)
unique(map_change9$project_id)

unique(map_change9$time)

###rename for regression and change reference to premedian

map_change9$time <- relevel(map_change9$time, "postmedian60")
map_change9$time <- relevel(map_change9$time, "postmedian30")
map_change9$time <- relevel(map_change9$time, "postmedian15")
map_change9$time <- relevel(map_change9$time, "postmedian5")
 map_change9$time <- relevel(map_change9$time, "premedian")

str(map_change9$time)

levels(map_change9$time) <- c("5 pre", "0-5 post", "10-15 post", "25-30 post", "55-60 post")

str(map_change9)

beanplot(map_change9$medianmap ~ map_change9$time, overallline = "median", beanlines = "median",
            col = list("steelblue1", "steelblue2", "steelblue3", "steelblue", "steelblue4"), border = c("steelblue1", "steelblue2", "steelblue3", "steelblue", "steelblue4"),
        xlab = "Time period in relation to physiotherapy treatment (minutes)", ylab = "Median Mean airway pressure")
        
####################################
###multi level models
####################################

model1 <- lmer(medianmap ~ time + log(weight) + admission.type + log(pelod_score) + (1|project_id), data=map_change9)
summary(model1)

confint(model1)





                               



#########################################Script 10 – OSI day 1 session 2 and 3 exploration########################################################


##########################
##load in osi files
###################################

##data set 1

osi1_1.2 <- xap.read_table("osi1_1_2")

str(osi1_1.2)

##data set 2

osi2_1.2 <-xap.read_table("osi2_1_2")
str(osi2_1.2)

###################################################
###################################################
# combine part 1 and part 2 osi files
####################################################
##################################################

#combine 1 & 2

OSI_1.2 <- rbind(osi1_1.2, osi2_1.2)

str(OSI_1.2)

unique(OSI_1.2$project_id)

summary(OSI_1.2)

#########################################################################
# to plot raw data on grpah - calculate time difference from first recorded (baseline)
#########################################################################

 osi_1.2 <- OSI_1.2 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - pre_datetime_x,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(osi_1.2)

ggplot(osi_1.2, aes(x=diff_secs, y=osi, color = project_id)) + 
 geom_point(aes(color = project_id), size = 1) +
            ggtitle("OSI pre and post physio session 1.2") + # add a title
    xlab('Time') + ylab('OSI') + # add axis names
    xlim(0,7500) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position="none") +
             scale_color_viridis(discrete = TRUE, option = "D") +
                 geom_vline(xintercept = c(1800, 3600), color = "red")

##############################################################
###create pre and post data set
#############################################################
          
## pre physio
pre_osi_1.2 <- OSI_1.2 %>% group_by(project_id) %>%
filter(record_date_time_y > pre_datetime_x & record_date_time_y < start_datetime_x) %>% ungroup()
str(pre_osi_1.2)

summary(pre_osi_1.2)
           
## post physio            
             
post_osi_1.2 <-  OSI_1.2 %>% group_by(project_id) %>%
filter(record_date_time_y > datetime_x & record_date_time_y < end_datetime_x) %>% ungroup()
str(post_osi_1.2)

summary(post_osi_1.2)
#############################################################################
# to plot raw data on grpah - calculate time difference from first recorded (baseline)
#############################################################################

###pre physio

pre_osi_1.2_2 <- pre_osi_1.2 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - pre_datetime_x,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(pre_osi_1.2_2)

ggplot(pre_osi_1.2_2, aes(x=diff_secs, y=osi, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            ggtitle("OSI pre physiotherapy session 1.2") + # add a title
    xlab('Time (secs)') + ylab('OSI') + # add axis names
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
             
###post physio

 post_osi_1.2_2 <- post_osi_1.2 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - datetime_x,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(post_osi_1.2_2)
ggplot(post_osi_1.2_2, aes(x=diff_secs, y=osi, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            ggtitle("OSI post physiotherapy session 1.2") + # add a title
    xlab('Time (secs)') + ylab('OSI') + # add axis names
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")             
             
########################################
# prepare data to calulate 5 min epochs
######################################

###pre physio, prepare consistant dates times

str(pre_osi_1.2)

pre_OSI_1.2_2 <- pre_osi_1.2 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - pre_datetime_x,
   diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(pre_OSI_1.2_2)

pre_OSI_1.2_test <- mutate(pre_OSI_1.2_2, osi_time = as.POSIXct(diff_secs, origin = "1970-01-01"))
str(pre_OSI_1.2_test)

####generate 5 min epochs and summaries

pre_OSI_1.2_5 <- pre_OSI_1.2_test %>% group_by(project_id, by5=cut(osi_time, "5 min")) %>%
  summarise(median=median(osi), across())
  
str(pre_OSI_1.2_5)
head(pre_OSI_1.2_5)

##remove repeated rows 'by 5'

pre_OSI_1.2_5a <- pre_OSI_1.2_5 %>% group_by(project_id, by5) %>% 
  filter(row_number()==1) %>%
  ungroup()

str(pre_OSI_1.2_5a)

###check how many values for each 

table(pre_OSI_1.2_5a$project_id)

##post physio prepare new times

post_OSI_1.2_2 <- post_osi_1.2 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - datetime_x,
   diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(post_OSI_1.2_2)

post_OSI_1.2_test <- mutate(post_OSI_1.2_2, osi_time = as.POSIXct(diff_secs, origin = "1970-01-01"))
str(post_OSI_1.2_test)

##create 5 min epochs

post_OSI_1.2_5 <- post_OSI_1.2_test %>% group_by(project_id, by5=cut(osi_time, "5 min")) %>%
  summarise(median=median(osi), across())
  
str(post_OSI_1.2_5)
head(post_OSI_1.2_5)

##remove repeated rows 'by 5'

post_OSI_1.2_5a <- post_OSI_1.2_5 %>% group_by(project_id, by5) %>% 
  filter(row_number()==1) %>%
  ungroup()

str(post_OSI_1.2_5a)

###check how many values for each 

table(post_OSI_1.2_5a$project_id)

#########################################################################
## draw graph of 5 min medians pre/post
#########################################################################

#need to change by into POSIXct from factor

pre_OSI_1.2_5a$by5 <- as.POSIXct(pre_OSI_1.2_5a$by5,format='%Y-%m-%d %H:%M:%S')

post_OSI_1.2_5a$by5 <- as.POSIXct(post_OSI_1.2_5a$by5,format='%Y-%m-%d %H:%M:%S')

### pre-physio

## plot median SpO2     
             
pre_plot <- ggplot(pre_OSI_1.2_5a, aes(x=diff_secs, y=median, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            geom_line() +
            ggtitle("OSI pre-physio (5 min epochs)") + # add a title
    xlab('Time (seconds)') + ylab('median OSI') + # add axis names
      xlim(0,1800) + ylim(0,20) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
          
## plot median SpO2     
             
post_plot <- ggplot(post_OSI_1.2_5a, aes(x=diff_secs, y=median, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            geom_line() +
            ggtitle("OSI post-physio (5 min epochs)") + # add a title
    xlab('Time (seconds)') + ylab('median OSI') + # add axis names
    xlim(0,3600) + ylim(0,20) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
                 
require(gridExtra)

grid.arrange(pre_plot, post_plot, ncol=2)

##########################################
###5 mins  pre and post add extra column
#########################################

str(pre_OSI_1.2_5a)
str(post_OSI_1.2_5a)

##select columns want

preOSI_1.2 <- select(pre_OSI_1.2_5a, project_id, by5, median)
postOSI_1.2 <- select(post_OSI_1.2_5a, project_id, by5, median)

##rename medians for clarity

names(preOSI_1.2)[names(preOSI_1.2) == 'median'] <- 'premedian'
names(postOSI_1.2)[names(postOSI_1.2) == 'median'] <- 'postmedian'

str(preOSI_1.2)
str(postOSI_1.2)

##add extra column 

preOSI_1.2_1 <- preOSI_1.2 %>%
group_by(project_id) %>%
  mutate(label1 = LETTERS[row_number()]) %>%
  ungroup()

postOSI_1.2_1 <- postOSI_1.2 %>%
group_by(project_id) %>%
  mutate(label = LETTERS[row_number()]) %>%
  ungroup()

str(preOSI_1.2_1)
str(postOSI_1.2_1)

##try to reverse preOSI letters

preOSI_1.2_2 <- preOSI_1.2_1 %>%
group_by(project_id) %>%
mutate(label = rev(label1)) %>%
ungroup()

str(preOSI_1.2_2)

###################################################################################################################
########################################
###analysis 1 5 min pre vs 5 min post
########################################
#####################################################################################################################

###################################################
##subset pre for just 5min immediately pre "A"
#################################################

preOSI_1.2_3 <- select(preOSI_1.2_2, project_id, by5, premedian, label)

preOSI_1.2_4 <- subset(preOSI_1.2_3, label == "A")
str(preOSI_1.2_4)

preOSI_1.2_5 <- select(preOSI_1.2_4, project_id, by5, premedian)
str(preOSI_1.2_5)

###remove row if by5 time not 00:25:00

preOSI_1.2_6 <- preOSI_1.2_5[preOSI_1.2_5$by5 == "1970-01-01 00:25:00",]

str(preOSI_1.2_6)

#########################################
##subset post for 5 min imm post A
######################################

postOSI_1.2_2 <- subset(postOSI_1.2_1, label == "A")
str(postOSI_1.2_2)

###remove rows if by5 time not 00:00:00

postOSI_1.2_3 <- postOSI_1.2_2[postOSI_1.2_2$by5 == "1970-01-01 00:00:00",]

str(postOSI_1.2_3)

################################
##join pre and post together
###################################

osi1.2_prepost_5 <- inner_join(postOSI_1.2_3, preOSI_1.2_6, by="project_id")
str(osi1.2_prepost_5)    

unique(osi1.2_prepost_5$project_id)
sum(is.na(osi1.2_prepost_5))
##############################################
##calculate differences in 5 mins medians
###########################################
 
osi1.2_prepost_5$OSI_diff <- osi1.2_prepost_5$postmedian - osi1.2_prepost_5$premedian
str(osi1.2_prepost_5)


##plot with id
ggplot(osi1.2_prepost_5, aes(x = project_id, y=OSI_diff)) + 
            geom_point() +
             ggtitle("OSI difference post-pre physio (5 min epochs)") + # add a title
    xlab('Project id') + ylab('difference in OSI') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0.3, color = "red")
           
#### create new variable for above or below threshold

osi1.2_prepost_5$OSI_threshold <- ifelse(osi1.2_prepost_5$OSI_diff >= 0.3, "yes", "no")

str(osi1.2_prepost_5)

t.OSI <- table(osi1.2_prepost_5$OSI_threshold)

addmargins(t.OSI)
round(prop.table(t.OSI)*100, 2) #to give percentage

ggplot(osi1.2_prepost_5, aes(x = premedian, y=OSI_diff)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle(" 0-5 mins post physiotherapy") + # add a title
    ylab('Difference in 5 minute medians of OSI') + xlab(NULL) +
    ylim(-6,15)+ # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
           geom_hline(yintercept = 0.3, color = "red") 

####create new variable above, isq, below

str(osi1.2_prepost_5)

osi1.2_prepost_5$OSI_result <- ifelse(osi1.2_prepost_5$OSI_diff < 0, 'Improved',
                         ifelse(osi1.2_prepost_5$OSI_diff == 0, 'ISQ',
                         ifelse(osi1.2_prepost_5$OSI_diff > 0 & osi1.2_prepost_5$OSI_diff < 0.3, 'Worse', 'AE')))
str(osi1.2_prepost_5)    


ggplot(osi1.2_prepost_5, aes(x = project_id, y=OSI_diff, colour=OSI_result)) + 
            geom_point(size=0.5) +
             ggtitle("0-5 minutes post physio") + # add a title
    xlab(NULL) + ylab('Difference in OSI') + # add axis names
      ylim(-6,15)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
            scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
                 geom_hline(yintercept = 0.3, color = "red")+
        geom_hline(yintercept = 0, color = "black")
        
        
result1 <- table(osi1.2_prepost_5$OSI_result)

addmargins(result1)
round(prop.table(result1)*100, 2) #to give percentage

plot5a <- ggplot(osi1.2_prepost_5, aes(x = premedian, y=OSI_diff, colour=OSI_result)) + 
            geom_point() +
             ggtitle("0-5 minutes post-physiotherapy") + # add a title
    ylab('Change in median OSI') + xlab(NULL) +
    ylim(-7, 10)+
 scale_x_continuous(expand = c(0, 0), limits = c(0,20)) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
                                geom_hline(yintercept = 0.3, color = "red") +
            geom_hline(yintercept = 0, color = "black")

###get subset of those unstable

osi_prepost_5a <- select(osi1.2_prepost_5, project_id, OSI_diff, OSI_result)

names(osi_prepost_5a)[names(osi_prepost_5a) == 'OSI_diff'] <- 'OSI_diff5'
names(osi_prepost_5a)[names(osi_prepost_5a) == 'OSI_result'] <- 'OSI_result5'

str(osi_prepost_5a)     
########################################################################################
######################################
##analysis 2 5 mins pre vs 15 mins post
######################################
######################################################################################

str(preOSI_1.2_6)

#########################################
##subset post for 15 min imm post C
######################################

postOSI_1.2_15 <- subset(postOSI_1.2_1, label == "C")
str(postOSI_1.2_15)

###remove rows if by5 time not 00:10:00


postOSI_1.2_15a <- postOSI_1.2_15[postOSI_1.2_15$by5 == "1970-01-01 00:10:00",]

str(postOSI_1.2_15a)

################################
##join pre and post together
###################################

osi1.2_prepost_15 <- inner_join(postOSI_1.2_15a, preOSI_1.2_6, by="project_id")
str(osi1.2_prepost_15)    

unique(osi1.2_prepost_15$project_id)
sum(is.na(osi1.2_prepost_15))

##############################################
##calculate differences in 5 mins medians
###########################################
 
osi1.2_prepost_15$OSI_diff <- osi1.2_prepost_15$postmedian - osi1.2_prepost_15$premedian
str(osi1.2_prepost_15)

##plot with id
ggplot(osi1.2_prepost_15, aes(x = project_id, y=OSI_diff, colour = project_id)) + 
            geom_point() +
             ggtitle("OSI difference post-pre physio (5 min epochs)") + # add a title
    xlab('Project id') + ylab('difference in OSI') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0.3, color = "red")
           
#### create new variable for above or below threshold

osi1.2_prepost_15$OSI_threshold <- ifelse(osi1.2_prepost_15$OSI_diff >= 0.3, "yes", "no")

str(osi1.2_prepost_15)

t.OSI <- table(osi1.2_prepost_15$OSI_threshold)

addmargins(t.OSI)
round(prop.table(t.OSI)*100, 2) #to give percentage

 ggplot(osi1.2_prepost_15, aes(x = premedian, y=OSI_diff)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle("10-15 minutes post physiotherapy") + # add a title
    ylim(-6,15) + # add axis names
    ylab(NULL) + xlab(NULL) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
           geom_hline(yintercept = 0.3, color = "red") 
        
####create new variable above, isq, below

str(osi1.2_prepost_15)
osi1.2_prepost_15$OSI_result <- ifelse(osi1.2_prepost_15$OSI_diff < 0, 'Improved',
                         ifelse(osi1.2_prepost_15$OSI_diff == 0, 'ISQ',
                         ifelse(osi1.2_prepost_15$OSI_diff > 0 & osi1.2_prepost_15$OSI_diff < 0.3, 'Worse', 'AE')))
str(osi1.2_prepost_15)    

 ggplot(osi1.2_prepost_15, aes(x = project_id, y=OSI_diff, colour=OSI_result)) + 
            geom_point(size = 0.5) +
             ggtitle("10-15 minutes post physio") + # add a title
    xlab(NULL) + ylab(NULL) + # add axis names
      ylim(-6,15)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
            scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
                 geom_hline(yintercept = 0.3, color = "red")+
        geom_hline(yintercept = 0, color = "black")
        
result2 <- table(osi1.2_prepost_15$OSI_result)

addmargins(result2)
round(prop.table(result2)*100, 2) #to give percentage   

plot15a <- ggplot(osi1.2_prepost_15, aes(x = premedian, y=OSI_diff, colour=OSI_result)) + 
            geom_point() +
             ggtitle("10-15 minutes post-physiotherapy") + # add a title
    ylab(NULL) + xlab(NULL) +
    ylim(-7, 10)+
 scale_x_continuous(expand = c(0, 0), limits = c(0,20)) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
                                geom_hline(yintercept = 0.3, color = "red") +
            geom_hline(yintercept = 0, color = "black")

###get subset of those unstable

osi_prepost_15a <- select(osi1.2_prepost_15, project_id, OSI_diff, OSI_result)

names(osi_prepost_15a)[names(osi_prepost_15a) == 'OSI_diff'] <- 'OSI_diff15'
names(osi_prepost_15a)[names(osi_prepost_15a) == 'OSI_result'] <- 'OSI_result15'

str(osi_prepost_15a)  
####################################################################################
#############################################
### analysis 3 5 min pre vs 30 mins post
###########################################
######################################################################################

str(preOSI_1.2_6)

#########################################
##subset post for 30 min post F
######################################

postOSI_1.2_30 <- subset(postOSI_1.2_1, label == "F")
str(postOSI_1.2_30)

###remove rows if by5 time not 00:25:00

postOSI_1.2_30a <- postOSI_1.2_30[postOSI_1.2_30$by5 == "1970-01-01 00:25:00",]

str(postOSI_1.2_30a)

################################
##join pre and post together
###################################

osi1.2_prepost_30 <- inner_join(postOSI_1.2_30a, preOSI_1.2_6, by="project_id")
str(osi1.2_prepost_30)    

unique(osi1.2_prepost_30$project_id)
sum(is.na(osi1.2_prepost_30))

##############################################
##calculate differences in 5 mins medians
###########################################
 
osi1.2_prepost_30$OSI_diff <- osi1.2_prepost_30$postmedian - osi1.2_prepost_30$premedian
str(osi1.2_prepost_30)

##plot with id
ggplot(osi1.2_prepost_30, aes(x = project_id, y=OSI_diff, colour = project_id)) + 
            geom_point() +
             ggtitle("OSI difference post-pre physio (5 min epochs)") + # add a title
    xlab('Project id') + ylab('difference in OSI') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0.3, color = "red")
           
#### create new variable for above or below threshold

osi1.2_prepost_30$OSI_threshold <- ifelse(osi1.2_prepost_30$OSI_diff >= 0.3, "yes", "no")

str(osi1.2_prepost_30)

t.OSI <- table(osi1.2_prepost_30$OSI_threshold)

addmargins(t.OSI)
round(prop.table(t.OSI)*100, 2) #to give percentage

ggplot(osi1.2_prepost_30, aes(x = premedian, y=OSI_diff)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle("25-30 minutes post physiotherapy") + # add a title
    xlab('Median OSI 5-minutes pre-physiotherapy') + ylab('Difference in OSI') + # add axis names
         ylim(-6,15) +theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
           geom_hline(yintercept = 0.3, color = "red") 

 ####create new variable above, isq, below

str(osi1.2_prepost_30)

osi1.2_prepost_30$OSI_result <- ifelse(osi1.2_prepost_30$OSI_diff < 0, 'Improved',
                         ifelse(osi1.2_prepost_30$OSI_diff == 0, 'ISQ',
                         ifelse(osi1.2_prepost_30$OSI_diff > 0 & osi1.2_prepost_30$OSI_diff < 0.3, 'Worse', 'AE')))
str(osi1.2_prepost_30)    

 ggplot(osi1.2_prepost_30, aes(x = project_id, y=OSI_diff, colour=OSI_result)) + 
            geom_point(size=0.5) +
             ggtitle("25-30 minutes post physio") + # add a title
    xlab('Individual patients') + ylab('Difference in OSI') + # add axis names
      ylim(-6,15)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
              scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
                 geom_hline(yintercept = 0.3, color = "red")+
        geom_hline(yintercept = 0, color = "black")
        
result3 <- table(osi1.2_prepost_30$OSI_result)

addmargins(result3)
round(prop.table(result3)*100, 2) #to give percentage  

    plot30a <- ggplot(osi1.2_prepost_30, aes(x = premedian, y=OSI_diff, colour=OSI_result)) + 
            geom_point() +
             ggtitle("25-30 minutes post-physiotherapy") + # add a title
    ylab('Change in median OSI') + xlab('Median OSI 5 minutes pre-physiotherapy') +
    ylim(-7,10)+
 scale_x_continuous(expand = c(0, 0), limits = c(0,20)) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
                                geom_hline(yintercept = 0.3, color = "red") +
            geom_hline(yintercept = 0, color = "black")   

###get subset of those unstable

osi_prepost_30a <- select(osi1.2_prepost_30, project_id, OSI_diff, OSI_result)

names(osi_prepost_30a)[names(osi_prepost_30a) == 'OSI_diff'] <- 'OSI_diff30'
names(osi_prepost_30a)[names(osi_prepost_30a) == 'OSI_result'] <- 'OSI_result30'

str(osi_prepost_30a) 
#######################################################################################
##########################################
##analysis 4 5mins pre vs 60 mins
###########################################
#######################################################################################

str(preOSI_1.2_6)

#########################################
##subset post for 60 min post 
######################################

postOSI_1.2_60 <- subset(postOSI_1.2_1, label == "L")
str(postOSI_1.2_60)

###remove rows if by5 time not 00:60:00

postOSI_1.2_60a <- postOSI_1.2_60[postOSI_1.2_60$by5 == "1970-01-01 00:55:00",]

str(postOSI_1.2_60a)

################################
##join pre and post together
###################################

osi1.2_prepost_60 <- inner_join(postOSI_1.2_60a, preOSI_1.2_6, by="project_id")
str(osi1.2_prepost_60)    

unique(osi1.2_prepost_60$project_id)
sum(is.na(osi1.2_prepost_60))

##############################################
##calculate differences in 5 mins medians
###########################################
 
osi1.2_prepost_60$OSI_diff <- osi1.2_prepost_60$postmedian - osi1.2_prepost_60$premedian
str(osi1.2_prepost_60)

##plot with id
ggplot(osi1.2_prepost_60, aes(x = project_id, y=OSI_diff)) + 
            geom_point() +
             ggtitle("OSI difference post-pre physio (5 min epochs)") + # add a title
    xlab('Project id') + ylab('difference in OSI') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0.3, color = "red")
           

#### create new variable for above or below threshold

osi1.2_prepost_60$OSI_threshold <- ifelse(osi1.2_prepost_60$OSI_diff >= 0.3, "yes", "no")

str(osi1.2_prepost_60)

t.OSI <- table(osi1.2_prepost_60$OSI_threshold)

addmargins(t.OSI)
round(prop.table(t.OSI)*100, 2) #to give percentage

 ggplot(osi1.2_prepost_60, aes(x = premedian, y=OSI_diff)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle("55-60 minutes post physiotherapy") + # add a title
    xlab('Median OSI 5-minutes pre-physiotherapy')  + ylab(NULL)+ # add axis names
        ylim(-6,15) + theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
           geom_hline(yintercept = 0.3, color = "red") 

 ####create new variable above, isq, below

str(osi1.2_prepost_60)

osi1.2_prepost_60$OSI_result <- ifelse(osi1.2_prepost_60$OSI_diff < 0, 'Improved',
                         ifelse(osi1.2_prepost_60$OSI_diff == 0, 'ISQ',
                         ifelse(osi1.2_prepost_60$OSI_diff > 0 & osi1.2_prepost_60$OSI_diff < 0.3, 'Worse', 'AE')))
str(osi1.2_prepost_60)    

ggplot(osi1.2_prepost_60, aes(x = project_id, y=OSI_diff, colour=OSI_result)) + 
            geom_point(size= 0.5) +
             ggtitle("55-60 minutes post physio") + # add a title
    xlab('Individual patients') + ylab(NULL) + # add axis names
    ylim(-6,15)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
             scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3")) +
                 geom_hline(yintercept = 0.3, color = "red") + 
        geom_hline(yintercept = 0, color = "black") 
      
result4 <- table(osi1.2_prepost_60$OSI_result)

addmargins(result4)
round(prop.table(result4)*100, 2) #to give percentage

plot60a <- ggplot(osi1.2_prepost_60, aes(x = premedian, y=OSI_diff, colour=OSI_result)) + 
            geom_point() +
             ggtitle("55-60 minutes post-physiotherapy") + # add a title
    ylab(NULL) + xlab('Median OSI 5 minutes pre-physiotherapy') +
    ylim(-7,10)+
 scale_x_continuous(expand = c(0, 0), limits = c(0,20)) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
                                geom_hline(yintercept = 0.3, color = "red") +
            geom_hline(yintercept = 0, color = "black")

###get subset of those unstable

osi_prepost_60a <- select(osi1.2_prepost_60, project_id, OSI_diff, OSI_result)

names(osi_prepost_60a)[names(osi_prepost_60a) == 'OSI_diff'] <- 'OSI_diff60'
names(osi_prepost_60a)[names(osi_prepost_60a) == 'OSI_result'] <- 'OSI_result60'

str(osi_prepost_60a)
########################
##combine plots
############################

require(gridExtra)

grid.arrange(plot5a, plot15a, plot30a, plot60a, ncol=2, nrow=2)
grid.arrange(plota, plotb, plotc, plotd, ncol=2, nrow=2)

########################################
###join subsets to identify those with AE
#########################################

osi_AE_1.2a <- full_join(osi_prepost_5a, osi_prepost_15a, by="project_id")
str(osi_AE_1.2a)

osi_AE_1.2b <- full_join(osi_AE_1.2a, osi_prepost_30a, by="project_id")
str(osi_AE_1.2b)

osi_AE_1.2c <- full_join(osi_AE_1.2b, osi_prepost_60a, by="project_id")
str(osi_AE_1.2c)

###create AE variable

osi_AE_1.2c$osi_AE <- ifelse(osi_AE_1.2c$OSI_result5 == "AE" | osi_AE_1.2c$OSI_result15 == "AE" | osi_AE_1.2c$OSI_result30 == "AE" | osi_AE_1.2c$OSI_result60 == "AE", 'Yes', 'No')

str(osi_AE_1.2c)

table(osi_AE_1.2c$osi_AE)

is.na(osi_AE_1.2c)

osi_AE_1.2 <- select(osi_AE_1.2c, project_id, osi_AE)
str(osi_AE_1.2)

####change NA to no

osi_AE_1.2[is.na(osi_AE_1.2)] = 'No'

table(osi_AE_1.2$osi_AE)

###save as csv

write.csv(osi_AE_1.2, "~/files/datafiles/osi_AE_1.2.csv")
#####################################################################

##################################################
###repeated measure anova, quantify change
##################################################

#####get individual datasets
##5 min
str(osi1.2_prepost_5)  

osi1.2_5 <- select(osi1.2_prepost_5, project_id, postmedian, premedian)
str(osi1.2_5)

names(osi1.2_5)[names(osi1.2_5) == "postmedian"] <- "postmedian5"
str(osi1.2_5)

###15mins

str(osi1.2_prepost_15)

osi1.2_15 <- select(osi1.2_prepost_15, project_id, postmedian)
str(osi1.2_15)

names(osi1.2_15)[names(osi1.2_15) == "postmedian"] <- "postmedian15"
str(osi1.2_15)

##30mins

osi1.2_30 <- select(osi1.2_prepost_30, project_id, postmedian)
str(osi1.2_30)

names(osi1.2_30)[names(osi1.2_30) == "postmedian"] <- "postmedian30"
str(osi1.2_30)

##60mins
osi1.2_60 <- select(osi1.2_prepost_60, project_id, postmedian)
str(osi1.2_60)

names(osi1.2_60)[names(osi1.2_60) == "postmedian"] <- "postmedian60"
str(osi1.2_60)

####################join together

osi1.2_change <- inner_join(osi1.2_5, osi1.2_15, by="project_id")
str(osi1.2_change)

osi1.2_change1 <- inner_join(osi1.2_change, osi1.2_30, by="project_id")
str(osi1.2_change1)

osi1.2_change2 <- inner_join(osi1.2_change1, osi1.2_60, by="project_id")
str(osi1.2_change2)

###change order of columns
osi1.2_change3 <- osi1.2_change2[, c(1, 3, 2, 4, 5, 6)]
str(osi1.2_change3)

################change to long format

osi1.2_change4 <- tidyr::gather(osi1.2_change3, key=time, value=medianosi, premedian:postmedian60) %>% 
                    arrange(project_id)
                    
head(osi1.2_change4)
str(osi1.2_change4)

test <- osi1.2_change4 %>% friedman_test(medianosi ~ time |project_id)
test

test1 <- osi1.2_change4 %>% friedman_effsize(medianosi ~ time |project_id)
test1

test3 <- osi1.2_change4 %>% wilcox_test(medianosi ~ time, paired = TRUE, p.adjust.method = "bonferroni")
test3

###################################################################################################################
###session 1.3
####################################################################################################################

#############################################################
#####stage 1
###############################################################

#################################
##load in vent data for part 1
##############################

##load in physio times data and check

#physiotimes1_data <- xap.read_table("complete01_wp2_physio_times_check")
str(physiotimes1_data)
head(physiotimes1_data)
unique(physiotimes1_data$project_id)

##temp fix

###temp fix
physiotimes1_data <- xap.read_table("physiotimes1_data")
str(physiotimes1_data)

##create new day.session variable

physiotimes1_data$day_session = paste(physiotimes1_data$day, physiotimes1_data$session, sep=".")
str(physiotimes1_data)

table(physiotimes1_data$day_session)

##load in MAP raw data

MAP_part1_raw <- xap.read_table("complete01_mdc_pam")

names(MAP_part1_raw )[1] <- 'project_id'
MAP_part1_raw <- select(MAP_part1_raw , project_id, monitor, record_date_time, num_value )
str(MAP_part1_raw)
head(MAP_part1_raw)
tail(MAP_part1_raw)

unique(MAP_part1_raw$project_id)

## load in FiO2 raw data

fio2_part1_raw <- xap.read_table("complete01_mdc_cgois")

names(fio2_part1_raw )[1] <- 'project_id'
fio2_part1_raw <- select(fio2_part1_raw , project_id, monitor, record_date_time, num_value )
str(fio2_part1_raw)
head(fio2_part1_raw)
tail(fio2_part1_raw)

unique(fio2_part1_raw$project_id)

###############################################################################################
## manipulate physio times data frame to have session 1.3
###############################################################################################

## select first day and session only

firstsession_part1_1.3 <- subset(physiotimes1_data, day==1 & session==3)
str(firstsession_part1_1.3)

unique(firstsession_part1_1.3$project_id)

#generate pre physio time - subtract 60 mins

firstsession_part1_1.3<- firstsession_part1_1.3 %>% 
                mutate(pre_datetime =(datetime - (minutes=3600)))

# generate start time for physio each patient - subtracting 60 minutes

firstsession_part1_1.3a <- firstsession_part1_1.3 %>% 
                mutate(start_datetime =(datetime - (minutes=1800)))

# generate end times for 30 mins after physio each patient - adding 30 mins 

firstsession_part1_1.3b <- firstsession_part1_1.3a %>% 
                mutate(end_datetime =(datetime + (minutes=3600)))
str(firstsession_part1_1.3b)

firstsession_part1_1.3b <- select(firstsession_part1_1.3b, project_id, day, session, datetime, day_session, pre_datetime, start_datetime, end_datetime)

str(firstsession_part1_1.3b)
###############################################################
##join MAP and FiO2 data sets together
##############################################################
vent_part1 <- inner_join(MAP_part1_raw, fio2_part1_raw, by=c("project_id", "record_date_time")) 

str(vent_part1)
head(vent_part1)

vent_part1 <- select(vent_part1, project_id, record_date_time, num_value.x, num_value.y)
names(vent_part1)[3] <-'MAP'
names(vent_part1)[4] <- 'FiO2'
str(vent_part1)
dim(vent_part1)

unique(vent_part1$project_id)

is.na(vent_part1)

###write csv for other sessions 

write.csv(vent_part1, "~/files/datafiles/vent_part1_new.csv")

##################################################################
### join vent to physio times and filter only between date range
#################################################################

vent_part1_1.3 <- inner_join(firstsession_part1_1.3b, vent_part1, by="project_id") %>% 
filter(record_date_time > pre_datetime & record_date_time < end_datetime)
str(vent_part1_1.3)

#########no variables

######################################################
####part2
########################################################

##################################
##load in data part 2
#########################################

##load in physio times data and check

physiotimes2_data <- xap.read_table("complete02_wp2_physio_times_check")
str(physiotimes2_data)
head(physiotimes2_data)
unique(physiotimes2_data$project_id)


###temp fix
physiotimes2_data <- xap.read_table("physiotimes2_data")
str(physiotimes2_data)

##create new day.session variable

physiotimes2_data$day_session = paste(physiotimes2_data$day, physiotimes2_data$session, sep=".")
str(physiotimes2_data)

table(physiotimes2_data$day_session)

##load in MAP raw data

MAP_part2_raw <- xap.read_table("complete02_mdc_pam")

names(MAP_part2_raw )[1] <- 'project_id'
MAP_part2_raw <- select(MAP_part2_raw , project_id, monitor, record_date_time, num_value )
str(MAP_part2_raw)
head(MAP_part2_raw)
tail(MAP_part2_raw)

unique(MAP_part2_raw$project_id)

## load in FiO2 raw data

fio2_part2_raw <- xap.read_table("complete02_mdc_cgois")

names(fio2_part2_raw )[1] <- 'project_id'
fio2_part2_raw <- select(fio2_part2_raw , project_id, monitor, record_date_time, num_value )
str(fio2_part2_raw)
head(fio2_part2_raw)
tail(fio2_part2_raw)

unique(fio2_part2_raw$project_id)

#############
#############
##part 2
############
###########

###############################################################################################
## manipulate physio times data frame to have session 1.3
###############################################################################################

## select first day and session only

firstsession_part2_1.3 <- subset(physiotimes2_data, day==1 & session==3)
str(firstsession_part2_1.3)

#generate pre physio time - subtract 60 mins

firstsession_part2_1.3 <- firstsession_part2_1.3 %>% 
                mutate(pre_datetime =(datetime - (minutes=3600)))

# generate start time for physio each patient - subtracting 60 minutes

firstsession_part2_1.3a <- firstsession_part2_1.3 %>% 
                mutate(start_datetime =(datetime - (minutes=1800)))

# generate end times for 30 mins after physio each patient - adding 30 mins 

firstsession_part2_1.3b <- firstsession_part2_1.3a %>% 
                mutate(end_datetime =(datetime + (minutes=3600)))

str(firstsession_part2_1.3b)

firstsession_part2_1.3b <- select(firstsession_part2_1.3b, project_id, day, session, datetime, day_session, pre_datetime, start_datetime, end_datetime)

str(firstsession_part2_1.3b)

###############################################################
##join MAP and FiO2 data sets together
##############################################################
vent_part2 <- inner_join(MAP_part2_raw, fio2_part2_raw, by=c("project_id", "record_date_time")) 

str(vent_part2)
head(vent_part2)

vent_part2 <- select(vent_part2, project_id, record_date_time, num_value.x, num_value.y)
names(vent_part2)[3] <-'MAP'
names(vent_part2)[4] <- 'FiO2'
str(vent_part2)
dim(vent_part2)

unique(vent_part2$project_id)

##################################################################
### join vent to physio times and filter only between date range
#################################################################

vent_part2_1.3 <- inner_join(firstsession_part2_1.3b, vent_part2, by="project_id") %>% 
filter(record_date_time > pre_datetime & record_date_time < end_datetime)
str(vent_part2_1.3)


#######no values

################################################################################################################
###session 1.4
###################################################################################################################
###############################################################################################
## manipulate physio times data frame to have session 1.4
###############################################################################################

## select first day and session only

firstsession_part2_1.4 <- subset(physiotimes2_data, day==1 & session==4)
str(firstsession_part2_1.4)

#generate pre physio time - subtract 60 mins

firstsession_part2_1.4 <- firstsession_part2_1.4 %>% 
                mutate(pre_datetime =(datetime - (minutes=3600)))

# generate start time for physio each patient - subtracting 60 minutes

firstsession_part2_1.4a <- firstsession_part2_1.4 %>% 
                mutate(start_datetime =(datetime - (minutes=1800)))

# generate end times for 30 mins after physio each patient - adding 30 mins 

firstsession_part2_1.4b <- firstsession_part2_1.4a %>% 
                mutate(end_datetime =(datetime + (minutes=3600)))

str(firstsession_part2_1.4b)

firstsession_part2_1.4b <- select(firstsession_part2_1.4b, project_id, day, session, datetime, day_session, pre_datetime, start_datetime, end_datetime)

str(firstsession_part2_1.4b)

##################################################################
### join vent to physio times and filter only between date range
#################################################################

vent_part2_1.4 <- inner_join(firstsession_part2_1.4b, vent_part2, by="project_id") %>% 
filter(record_date_time > pre_datetime & record_date_time < end_datetime)
str(vent_part2_1.4)

###############no values






######################################################Script 11 – OSI day 2 exploration###############################################################


##########################
##load in osi files
###################################

##data set 1

osi1_2.1 <- xap.read_table("osi1_2_1")

str(osi1_2.1)

##data set 2

osi2_2.1 <-xap.read_table("osi2_2_1")
str(osi2_2.1)

###################################################
###################################################
# combine part 1 and part 2 osi files
####################################################
##################################################

#combine 1 & 2

OSI_2.1 <- rbind(osi1_2.1, osi2_2.1)

str(OSI_2.1)

unique(OSI_2.1$project_id)

summary(OSI_2.1)

#########################################################################
# to plot raw data on graph - calculate time difference from first recorded (baseline)
#########################################################################

 osi_2.1 <- OSI_2.1 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - pre_datetime_x,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(osi_2.1)

ggplot(osi_2.1, aes(x=diff_secs, y=osi, color = project_id)) + 
 geom_point(aes(color = project_id), size = 1) +
            ggtitle("OSI pre and post physio session 2.1") + # add a title
    xlab('Time') + ylab('OSI') + # add axis names
    xlim(0,7500) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position="none") +
             scale_color_viridis(discrete = TRUE, option = "D") +
                 geom_vline(xintercept = c(1800, 3600), color = "red")

##############################################################
###create pre and post data set
#############################################################
          
## pre physio
pre_osi_2.1 <- OSI_2.1 %>% group_by(project_id) %>%
filter(record_date_time_y > pre_datetime_x & record_date_time_y < start_datetime_x) %>% ungroup()
str(pre_osi_2.1)

summary(pre_osi_2.1)
           
## post physio            
             
post_osi_2.1 <-  OSI_2.1 %>% group_by(project_id) %>%
filter(record_date_time_y > datetime_x & record_date_time_y < end_datetime_x) %>% ungroup()
str(post_osi_2.1)

summary(post_osi_2.1)
#########################################################################
# to plot raw data on graph - calculate time difference from first recorded (baseline)
#########################################################################

###pre physio

pre_osi_2.1_2 <- pre_osi_2.1 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - pre_datetime_x,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(pre_osi_2.1_2)

ggplot(pre_osi_2.1_2, aes(x=diff_secs, y=osi, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            ggtitle("OSI pre physiotherapy session 2.1") + # add a title
    xlab('Time (secs)') + ylab('OSI') + # add axis names
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
             
###post physio

 post_osi_2.1_2 <- post_osi_2.1 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - datetime_x,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(post_osi_2.1_2)


ggplot(post_osi_2.1_2, aes(x=diff_secs, y=osi, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            ggtitle("OSI post physiotherapy session 2.1") + # add a title
    xlab('Time (secs)') + ylab('OSI') + # add axis names
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")             
            
########################################
# prepare data to calulate 5 min epochs
######################################

###pre physio, prepare consistant dates times

str(pre_osi_2.1)

pre_OSI_2.1_2 <- pre_osi_2.1 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - pre_datetime_x,
   diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(pre_OSI_2.1_2)

pre_OSI_2.1_test <- mutate(pre_OSI_2.1_2, osi_time = as.POSIXct(diff_secs, origin = "1970-01-01"))
str(pre_OSI_2.1_test)

####generate 5 min epochs and summaries

pre_OSI_2.1_5 <- pre_OSI_2.1_test %>% group_by(project_id, by5=cut(osi_time, "5 min")) %>%
  summarise(median=median(osi), across())
  
str(pre_OSI_2.1_5)
head(pre_OSI_2.1_5)

##remove repeated rows 'by 5'

pre_OSI_2.1_5a <- pre_OSI_2.1_5 %>% group_by(project_id, by5) %>% 
  filter(row_number()==1) %>%
  ungroup()

str(pre_OSI_2.1_5a)

###check how many values for each 

table(pre_OSI_2.1_5a$project_id)

##post physio prepare new times

post_OSI_2.1_2 <- post_osi_2.1 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - datetime_x,
   diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(post_OSI_2.1_2)

post_OSI_2.1_test <- mutate(post_OSI_2.1_2, osi_time = as.POSIXct(diff_secs, origin = "1970-01-01"))
str(post_OSI_2.1_test)

##create 5 min epochs

post_OSI_2.1_5 <- post_OSI_2.1_test %>% group_by(project_id, by5=cut(osi_time, "5 min")) %>%
  summarise(median=median(osi), across())
  
str(post_OSI_2.1_5)
head(post_OSI_2.1_5)

##remove repeated rows 'by 5'

post_OSI_2.1_5a <- post_OSI_2.1_5 %>% group_by(project_id, by5) %>% 
  filter(row_number()==1) %>%
  ungroup()

str(post_OSI_2.1_5a)

###check how many values for each 

table(post_OSI_2.1_5a$project_id)

#########################################################################
## draw graph of 5 min medians pre/post
#########################################################################

#need to change by into POSIXct from factor

pre_OSI_2.1_5a$by5 <- as.POSIXct(pre_OSI_2.1_5a$by5,format='%Y-%m-%d %H:%M:%S')

post_OSI_2.1_5a$by5 <- as.POSIXct(post_OSI_2.1_5a$by5,format='%Y-%m-%d %H:%M:%S')

### pre-physio

## plot median SpO2     
             
pre_plot <- ggplot(pre_OSI_2.1_5a, aes(x=diff_secs, y=median, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            geom_line() +
            ggtitle("OSI pre-physio (5 min epochs)") + # add a title
    xlab('Time (seconds)') + ylab('median OSI') + # add axis names
      xlim(0,1800) + ylim(0,20) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
          
## plot median SpO2     
             
post_plot <- ggplot(post_OSI_2.1_5a, aes(x=diff_secs, y=median, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            geom_line() +
            ggtitle("OSI post-physio (5 min epochs)") + # add a title
    xlab('Time (seconds)') + ylab('median OSI') + # add axis names
    xlim(0,3600) + ylim(0,20) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
          
require(gridExtra)

grid.arrange(pre_plot, post_plot, ncol=2)

#########################################
###5 mins  pre and post add extra column
#########################################

str(pre_OSI_2.1_5a)
str(post_OSI_2.1_5a)

##select columns want

preOSI_2.1 <- select(pre_OSI_2.1_5a, project_id, by5, median)
postOSI_2.1 <- select(post_OSI_2.1_5a, project_id, by5, median)

##rename medians for clarity

names(preOSI_2.1)[names(preOSI_2.1) == 'median'] <- 'premedian'
names(postOSI_2.1)[names(postOSI_2.1) == 'median'] <- 'postmedian'

str(preOSI_2.1)
str(postOSI_2.1)
##add extra column 

preOSI_2.1_1 <- preOSI_2.1 %>%
group_by(project_id) %>%
  mutate(label1 = LETTERS[row_number()]) %>%
  ungroup()

postOSI_2.1_1 <- postOSI_2.1 %>%
group_by(project_id) %>%
  mutate(label = LETTERS[row_number()]) %>%
  ungroup()

str(preOSI_2.1_1)
str(postOSI_2.1_1)

##try to reverse preOSI letters

preOSI_2.1_2 <- preOSI_2.1_1 %>%
group_by(project_id) %>%
mutate(label = rev(label1)) %>%
ungroup()

str(preOSI_2.1_2)

###################################################################################################################
########################################
###analysis 1 5 min pre vs 5 min post
########################################
#####################################################################################################################

###################################################
##subset pre for just 5min immediately pre "A"
#################################################

preOSI_2.1_3 <- select(preOSI_2.1_2, project_id, by5, premedian, label)

preOSI_2.1_4 <- subset(preOSI_2.1_3, label == "A")
str(preOSI_2.1_4)

preOSI_2.1_5 <- select(preOSI_2.1_4, project_id, by5, premedian)
str(preOSI_2.1_5)

###remove row if by5 time not 00:25:00

preOSI_2.1_6 <- preOSI_2.1_5[preOSI_2.1_5$by5 == "1970-01-01 00:25:00",]

str(preOSI_2.1_6)

#########################################
##subset post for 5 min imm post A
######################################

postOSI_2.1_2 <- subset(postOSI_2.1_1, label == "A")
str(postOSI_2.1_2)

###remove rows if by5 time not 00:00:00

postOSI_2.1_3 <- postOSI_2.1_2[postOSI_2.1_2$by5 == "1970-01-01 00:00:00",]

str(postOSI_2.1_3)

################################
##join pre and post together
###################################

osi2.1_prepost_5 <- inner_join(postOSI_2.1_3, preOSI_2.1_6, by="project_id")
str(osi2.1_prepost_5)    

unique(osi2.1_prepost_5$project_id)
sum(is.na(osi2.1_prepost_5))

##############################################
##calculate differences in 5 mins medians
###########################################
 
osi2.1_prepost_5$OSI_diff <- osi2.1_prepost_5$postmedian - osi2.1_prepost_5$premedian
str(osi2.1_prepost_5)

##plot with id
ggplot(osi2.1_prepost_5, aes(x = project_id, y=OSI_diff)) + 
            geom_point() +
             ggtitle("OSI difference post-pre physio (5 min epochs)") + # add a title
    xlab('Project id') + ylab('difference in OSI') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0.3, color = "red")
           
#### create new variable for above or below threshold

osi2.1_prepost_5$OSI_threshold <- ifelse(osi2.1_prepost_5$OSI_diff >= 0.3, "yes", "no")

str(osi2.1_prepost_5)

t.OSI <- table(osi2.1_prepost_5$OSI_threshold)

addmargins(t.OSI)
round(prop.table(t.OSI)*100, 2) #to give percentage

ggplot(osi2.1_prepost_5, aes(x = premedian, y=OSI_diff)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle(" 0-5 mins post physiotherapy") + # add a title
    ylab('Difference in 5 minute medians of OSI') + xlab(NULL) +
    ylim(-6,15)+ # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
           geom_hline(yintercept = 0.3, color = "red") 

####create new variable above, isq, below

str(osi2.1_prepost_5)

osi2.1_prepost_5$OSI_result <- ifelse(osi2.1_prepost_5$OSI_diff < 0, 'Improved',
                         ifelse(osi2.1_prepost_5$OSI_diff == 0, 'ISQ',
                         ifelse(osi2.1_prepost_5$OSI_diff > 0 & osi2.1_prepost_5$OSI_diff < 0.3, 'Worse', 'AE')))
str(osi2.1_prepost_5)    

ggplot(osi2.1_prepost_5, aes(x = project_id, y=OSI_diff, colour=OSI_result)) + 
            geom_point(size=0.5) +
             ggtitle("0-5 minutes post physio") + # add a title
    xlab(NULL) + ylab('Difference in OSI') + # add axis names
      ylim(-6,15)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
            scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
                 geom_hline(yintercept = 0.3, color = "red")+
        geom_hline(yintercept = 0, color = "black")
        
        
result1 <- table(osi2.1_prepost_5$OSI_result)

addmargins(result1)
round(prop.table(result1)*100, 2) #to give percentage

plot5a <- ggplot(osi2.1_prepost_5, aes(x = premedian, y=OSI_diff, colour=OSI_result)) + 
            geom_point() +
             ggtitle(" 0-5 minutes post-physiotherapy") + # add a title
    ylab('Change in median OSI') + xlab(NULL) +
    ylim(-7,10) + 
    scale_x_continuous(expand = c(0, 0), limits = c(0,20)) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
                                geom_hline(yintercept = 0.3, color = "red") +
            geom_hline(yintercept = 0, color = "black")
            
 ###get subset of those unstable

osi_prepost_5a <- select(osi2.1_prepost_5, project_id, OSI_diff, OSI_result)

names(osi_prepost_5a)[names(osi_prepost_5a) == 'OSI_diff'] <- 'OSI_diff5'
names(osi_prepost_5a)[names(osi_prepost_5a) == 'OSI_result'] <- 'OSI_result5'

str(osi_prepost_5a)           

########################################################################################
######################################
##analysis 2 5 mins pre vs 15 mins post
######################################
######################################################################################

str(preOSI_2.1_6)

#########################################
##subset post for 15 min imm post C
######################################

postOSI_2.1_15 <- subset(postOSI_2.1_1, label == "C")
str(postOSI_2.1_15)

###remove rows if by5 time not 00:10:00

postOSI_2.1_15a <- postOSI_2.1_15[postOSI_2.1_15$by5 == "1970-01-01 00:10:00",]

str(postOSI_2.1_15a)
################################
##join pre and post together
###################################

osi2.1_prepost_15 <- inner_join(postOSI_2.1_15a, preOSI_2.1_6, by="project_id")
str(osi2.1_prepost_15)    

unique(osi2.1_prepost_15$project_id)
sum(is.na(osi2.1_prepost_15))

##############################################
##calculate differences in 5 mins medians
###########################################
 
osi2.1_prepost_15$OSI_diff <- osi2.1_prepost_15$postmedian - osi2.1_prepost_15$premedian
str(osi2.1_prepost_15)

##plot with id
ggplot(osi2.1_prepost_15, aes(x = project_id, y=OSI_diff, colour = project_id)) + 
            geom_point() +
             ggtitle("OSI difference post-pre physio (5 min epochs)") + # add a title
    xlab('Project id') + ylab('difference in OSI') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0.3, color = "red")
           
#### create new variable for above or below threshold

osi2.1_prepost_15$OSI_threshold <- ifelse(osi2.1_prepost_15$OSI_diff >= 0.3, "yes", "no")

str(osi2.1_prepost_15)

t.OSI <- table(osi2.1_prepost_15$OSI_threshold)

addmargins(t.OSI)
round(prop.table(t.OSI)*100, 2) #to give percentage

 ggplot(osi2.1_prepost_15, aes(x = premedian, y=OSI_diff)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle("10-15 minutes post physiotherapy") + # add a title
    ylim(-6,15) + # add axis names
    ylab(NULL) + xlab(NULL) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
           geom_hline(yintercept = 0.3, color = "red") 
        
####create new variable above, isq, below

str(osi2.1_prepost_15)

osi2.1_prepost_15$OSI_result <- ifelse(osi2.1_prepost_15$OSI_diff < 0, 'Improved',
                         ifelse(osi2.1_prepost_15$OSI_diff == 0, 'ISQ',
                         ifelse(osi2.1_prepost_15$OSI_diff > 0 & osi2.1_prepost_15$OSI_diff < 0.3, 'Worse', 'AE')))
str(osi2.1_prepost_15)    

 ggplot(osi2.1_prepost_15, aes(x = project_id, y=OSI_diff, colour=OSI_result)) + 
            geom_point(size = 0.5) +
             ggtitle("10-15 minutes post physio") + # add a title
    xlab(NULL) + ylab(NULL) + # add axis names
      ylim(-6,15)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
            scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
                 geom_hline(yintercept = 0.3, color = "red")+
        geom_hline(yintercept = 0, color = "black")
        
result2 <- table(osi2.1_prepost_15$OSI_result)

addmargins(result2)
round(prop.table(result2)*100, 2) #to give percentage   

plot15a <- ggplot(osi2.1_prepost_15, aes(x = premedian, y=OSI_diff, colour=OSI_result)) + 
            geom_point() +
             ggtitle(" 10-15 minutes post-physiotherapy") + # add a title
    ylab(NULL) + xlab(NULL) +
    ylim(-7,10) + 
    scale_x_continuous(expand = c(0, 0), limits = c(0,20)) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
                                geom_hline(yintercept = 0.3, color = "red") +
            geom_hline(yintercept = 0, color = "black")
            
###get subset of those unstable

osi_prepost_15a <- select(osi2.1_prepost_15, project_id, OSI_diff, OSI_result)

names(osi_prepost_15a)[names(osi_prepost_15a) == 'OSI_diff'] <- 'OSI_diff15'
names(osi_prepost_15a)[names(osi_prepost_15a) == 'OSI_result'] <- 'OSI_result15'

str(osi_prepost_15a)            

####################################################################################
#############################################
### analysis 3 5 min pre vs 30 mins post
###########################################
######################################################################################

str(preOSI_2.1_6)
#########################################
##subset post for 30 min post F
######################################

postOSI_2.1_30 <- subset(postOSI_2.1_1, label == "F")
str(postOSI_2.1_30)

###remove rows if by5 time not 00:25:00

postOSI_2.1_30a <- postOSI_2.1_30[postOSI_2.1_30$by5 == "1970-01-01 00:25:00",]

str(postOSI_2.1_30a)

################################
##join pre and post together
###################################

osi2.1_prepost_30 <- inner_join(postOSI_2.1_30a, preOSI_2.1_6, by="project_id")
str(osi2.1_prepost_30)    

unique(osi2.1_prepost_30$project_id)
sum(is.na(osi2.1_prepost_30))

##############################################
##calculate differences in 5 mins medians
###########################################
 
osi2.1_prepost_30$OSI_diff <- osi2.1_prepost_30$postmedian - osi2.1_prepost_30$premedian
str(osi2.1_prepost_30)

##plot with id
ggplot(osi2.1_prepost_30, aes(x = project_id, y=OSI_diff, colour = project_id)) + 
            geom_point() +
             ggtitle("OSI difference post-pre physio (5 min epochs)") + # add a title
    xlab('Project id') + ylab('difference in OSI') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0.3, color = "red")
           
#### create new variable for above or below threshold

osi2.1_prepost_30$OSI_threshold <- ifelse(osi2.1_prepost_30$OSI_diff >= 0.3, "yes", "no")

str(osi2.1_prepost_30)

t.OSI <- table(osi2.1_prepost_30$OSI_threshold)

addmargins(t.OSI)
round(prop.table(t.OSI)*100, 2) #to give percentage

ggplot(osi2.1_prepost_30, aes(x = premedian, y=OSI_diff)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle("25-30 minutes post physiotherapy") + # add a title
    xlab('Median OSI 5-minutes pre-physiotherapy') + ylab('Difference in OSI') + # add axis names
         ylim(-6,15) +theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
           geom_hline(yintercept = 0.3, color = "red") 

 ####create new variable above, isq, below

str(osi2.1_prepost_30)

osi2.1_prepost_30$OSI_result <- ifelse(osi2.1_prepost_30$OSI_diff < 0, 'Improved',
                         ifelse(osi2.1_prepost_30$OSI_diff == 0, 'ISQ',
                         ifelse(osi2.1_prepost_30$OSI_diff > 0 & osi2.1_prepost_30$OSI_diff < 0.3, 'Worse', 'AE')))
str(osi2.1_prepost_30)    

 ggplot(osi2.1_prepost_30, aes(x = project_id, y=OSI_diff, colour=OSI_result)) + 
            geom_point(size=0.5) +
             ggtitle("25-30 minutes post physio") + # add a title
    xlab('Individual patients') + ylab('Difference in OSI') + # add axis names
      ylim(-6,15)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
              scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
                 geom_hline(yintercept = 0.3, color = "red")+
        geom_hline(yintercept = 0, color = "black")
        
result3 <- table(osi2.1_prepost_30$OSI_result)

addmargins(result3)
round(prop.table(result3)*100, 2) #to give percentage  

    plot30a <- ggplot(osi2.1_prepost_30, aes(x = premedian, y=OSI_diff, colour=OSI_result)) + 
            geom_point() +
             ggtitle("25-30 minutes post-physiotherapy") + # add a title
    ylab('Change in median OSI') + xlab('Median OSI 5 minutes pre-physiotherapy') +
    ylim(-7,10) + 
    scale_x_continuous(expand = c(0, 0), limits = c(0,20)) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
                                geom_hline(yintercept = 0.3, color = "red") +
            geom_hline(yintercept = 0, color = "black")   

###get subset of those unstable

osi_prepost_30a <- select(osi2.1_prepost_30, project_id, OSI_diff, OSI_result)

names(osi_prepost_30a)[names(osi_prepost_30a) == 'OSI_diff'] <- 'OSI_diff30'
names(osi_prepost_30a)[names(osi_prepost_30a) == 'OSI_result'] <- 'OSI_result30'

str(osi_prepost_30a)   

#######################################################################################
##########################################
##analysis 4 5mins pre vs 60 mins
###########################################
#######################################################################################

str(preOSI_2.1_6)

#########################################
##subset post for 60 min post 
######################################

postOSI_2.1_60 <- subset(postOSI_2.1_1, label == "L")
str(postOSI_2.1_60)

###remove rows if by5 time not 00:60:00

postOSI_2.1_60a <- postOSI_2.1_60[postOSI_2.1_60$by5 == "1970-01-01 00:55:00",]

str(postOSI_2.1_60a)

################################
##join pre and post together
###################################

osi2.1_prepost_60 <- inner_join(postOSI_2.1_60a, preOSI_2.1_6, by="project_id")
str(osi2.1_prepost_60)    

unique(osi2.1_prepost_60$project_id)
sum(is.na(osi2.1_prepost_60))

##############################################
##calculate differences in 5 mins medians
###########################################
 
osi2.1_prepost_60$OSI_diff <- osi2.1_prepost_60$postmedian - osi2.1_prepost_60$premedian
str(osi2.1_prepost_60)

##plot with id
ggplot(osi2.1_prepost_60, aes(x = project_id, y=OSI_diff)) + 
            geom_point() +
             ggtitle("OSI difference post-pre physio (5 min epochs)") + # add a title
    xlab('Project id') + ylab('difference in OSI') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0.3, color = "red")
           
#### create new variable for above or below threshold


osi2.1_prepost_60$OSI_threshold <- ifelse(osi2.1_prepost_60$OSI_diff >= 0.3, "yes", "no")

str(osi2.1_prepost_60)

t.OSI <- table(osi2.1_prepost_60$OSI_threshold)

addmargins(t.OSI)
round(prop.table(t.OSI)*100, 2) #to give percentage

 ggplot(osi2.1_prepost_60, aes(x = premedian, y=OSI_diff)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle("55-60 minutes post physiotherapy") + # add a title
    xlab('Median OSI 5-minutes pre-physiotherapy')  + ylab(NULL)+ # add axis names
        ylim(-6,15) + theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
           geom_hline(yintercept = 0.3, color = "red") 

 ####create new variable above, isq, below

str(osi2.1_prepost_60)

osi2.1_prepost_60$OSI_result <- ifelse(osi2.1_prepost_60$OSI_diff < 0, 'Improved',
                         ifelse(osi2.1_prepost_60$OSI_diff == 0, 'ISQ',
                         ifelse(osi2.1_prepost_60$OSI_diff > 0 & osi2.1_prepost_60$OSI_diff < 0.3, 'Worse', 'AE')))
str(osi2.1_prepost_60)    

ggplot(osi2.1_prepost_60, aes(x = project_id, y=OSI_diff, colour=OSI_result)) + 
            geom_point(size= 0.5) +
             ggtitle("55-60 minutes post physio") + # add a title
    xlab('Individual patients') + ylab(NULL) + # add axis names
    ylim(-6,15)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
             scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3")) +
                 geom_hline(yintercept = 0.3, color = "red") + 
        geom_hline(yintercept = 0, color = "black") 
      
result4 <- table(osi2.1_prepost_60$OSI_result)

addmargins(result4)
round(prop.table(result4)*100, 2) #to give percentage

plot60a <- ggplot(osi2.1_prepost_60, aes(x = premedian, y=OSI_diff, colour=OSI_result)) + 
            geom_point() +
             ggtitle("55-60 minutes post-physiotherapy") + # add a title
    ylab(NULL) + xlab('Median OSI 5 minutes pre-physiotherapy') +
    ylim(-7,10) + 
     scale_x_continuous(expand = c(0, 0), limits = c(0,20)) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
                                geom_hline(yintercept = 0.3, color = "red") +
            geom_hline(yintercept = 0, color = "black")

###get subset of those unstable

osi_prepost_60a <- select(osi2.1_prepost_60, project_id, OSI_diff, OSI_result)

names(osi_prepost_60a)[names(osi_prepost_60a) == 'OSI_diff'] <- 'OSI_diff60'
names(osi_prepost_60a)[names(osi_prepost_60a) == 'OSI_result'] <- 'OSI_result60'

str(osi_prepost_60a)
########################
##combine plots
############################

require(gridExtra)

grid.arrange(plot5a, plot15a, plot30a, plot60a, ncol=2, nrow=2)

grid.arrange(plota, plotb, plotc, plotd, ncol=2, nrow=2)

########################################
###join subsets to identify those with AE
#########################################

osi_AE_2.1a <- full_join(osi_prepost_5a, osi_prepost_15a, by="project_id")
str(osi_AE_2.1a)

osi_AE_2.1b <- full_join(osi_AE_2.1a, osi_prepost_30a, by="project_id")
str(osi_AE_2.1b)

osi_AE_2.1c <- full_join(osi_AE_2.1b, osi_prepost_60a, by="project_id")
str(osi_AE_2.1c)

###create AE variable

osi_AE_2.1c$osi_AE <- ifelse(osi_AE_2.1c$OSI_result5 == "AE" | osi_AE_2.1c$OSI_result15 == "AE" | osi_AE_2.1c$OSI_result30 == "AE" | osi_AE_2.1c$OSI_result60 == "AE", 'Yes', 'No')

str(osi_AE_2.1c)

table(osi_AE_2.1c$osi_AE)

is.na(osi_AE_2.1c)

osi_AE_2.1 <- select(osi_AE_2.1c, project_id, osi_AE)
str(osi_AE_2.1)

####change NA to no

osi_AE_2.1[is.na(osi_AE_2.1)] = 'No'

table(osi_AE_2.1$osi_AE)
###save as csv

write.csv(osi_AE_2.1, "~/files/datafiles/osi_AE_2.1.csv")

#####################################################################

##################################################
###repeated measure anova, quantify change
##################################################

#####get individual datasets
##5 min
str(osi2.1_prepost_5)  

osi2.1_5 <- select(osi2.1_prepost_5, project_id, postmedian, premedian)
str(osi2.1_5)

names(osi2.1_5)[names(osi2.1_5) == "postmedian"] <- "postmedian5"
str(osi2.1_5)

###15mins

str(osi2.1_prepost_15)

osi2.1_15 <- select(osi2.1_prepost_15, project_id, postmedian)
str(osi2.1_15)

names(osi2.1_15)[names(osi2.1_15) == "postmedian"] <- "postmedian15"
str(osi2.1_15)

##30mins

osi2.1_30 <- select(osi2.1_prepost_30, project_id, postmedian)
str(osi2.1_30)

names(osi2.1_30)[names(osi2.1_30) == "postmedian"] <- "postmedian30"
str(osi2.1_30)

##60mins
osi2.1_60 <- select(osi2.1_prepost_60, project_id, postmedian)
str(osi2.1_60)

names(osi2.1_60)[names(osi2.1_60) == "postmedian"] <- "postmedian60"
str(osi2.1_60)

####################join together

osi2.1_change <- inner_join(osi2.1_5, osi2.1_15, by="project_id")
str(osi2.1_change)

osi2.1_change1 <- inner_join(osi2.1_change, osi2.1_30, by="project_id")
str(osi2.1_change1)

osi2.1_change2 <- inner_join(osi2.1_change1, osi2.1_60, by="project_id")
str(osi2.1_change2)

###change order of columns
osi2.1_change3 <- osi2.1_change2[, c(1, 3, 2, 4, 5, 6)]
str(osi2.1_change3)

################change to long format

osi2.1_change4 <- tidyr::gather(osi2.1_change3, key=time, value=medianosi, premedian:postmedian60) %>% 
                    arrange(project_id)
                    
head(osi2.1_change4)
str(osi2.1_change4)

test <- osi2.1_change4 %>% friedman_test(medianosi ~ time |project_id)
test

test1 <- osi2.1_change4 %>% friedman_effsize(medianosi ~ time |project_id)
test1

test3 <- osi2.1_change4 %>% wilcox_test(medianosi ~ time, paired = TRUE, p.adjust.method = "bonferroni")
test3

############################################################################################################
####session 2.2
###############################################################################################################

##########################
##load in osi files
###################################

##data set 1

osi1_2.2 <- xap.read_table("osi1_2_2")

str(osi1_2.2)
unique(osi1_2.2$project_id)

##data set 2

osi2_2.2 <-xap.read_table("osi2_2_2")
str(osi2_2.2)

unique(osi2_2.2$project_id)

###################################################
###################################################
# combine part 1 and part 2 osi files
####################################################
##################################################

#combine 1 & 2
OSI_2.2 <- rbind(osi1_2.2, osi2_2.2)

str(OSI_2.2)

unique(OSI_2.2$project_id)

summary(OSI_2.2)

#########################################################################
# to plot raw data on graph - calculate time difference from first recorded (baseline)
#########################################################################

 osi_2.2 <- OSI_2.2 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - pre_datetime_x,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(osi_2.2)

ggplot(osi_2.2, aes(x=diff_secs, y=osi, color = project_id)) + 
 geom_point(aes(color = project_id), size = 1) +
            ggtitle("OSI pre and post physio session 2.2") + # add a title
    xlab('Time') + ylab('OSI') + # add axis names
    xlim(0,7500) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position="none") +
             scale_color_viridis(discrete = TRUE, option = "D") +
                 geom_vline(xintercept = c(1800, 3600), color = "red")

##############################################################
###create pre and post data set
#############################################################
          
## pre physio
pre_osi_2.2 <- OSI_2.2 %>% group_by(project_id) %>%
filter(record_date_time_y > pre_datetime_x & record_date_time_y < start_datetime_x) %>% ungroup()
str(pre_osi_2.2)

summary(pre_osi_2.2)
           
## post physio            
             
post_osi_2.2 <-  OSI_2.2 %>% group_by(project_id) %>%
filter(record_date_time_y > datetime_x & record_date_time_y < end_datetime_x) %>% ungroup()
str(post_osi_2.2)

summary(post_osi_2.2)
#########################################################################
# to plot raw data on graph - calculate time difference from first recorded (baseline)
#########################################################################

###pre physio
pre_osi_2.2_2 <- pre_osi_2.2 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - pre_datetime_x,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(pre_osi_2.2_2)

ggplot(pre_osi_2.2_2, aes(x=diff_secs, y=osi, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            ggtitle("OSI pre physiotherapy session 2.2") + # add a title
    xlab('Time (secs)') + ylab('OSI') + # add axis names
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
             
###post physio

 post_osi_2.2_2 <- post_osi_2.2 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - datetime_x,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(post_osi_2.2_2)

ggplot(post_osi_2.2_2, aes(x=diff_secs, y=osi, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            ggtitle("OSI post physiotherapy session 2.2") + # add a title
    xlab('Time (secs)') + ylab('OSI') + # add axis names
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")             
             
########################################
# prepare data to calulate 5 min epochs
######################################

###pre physio, prepare consistant dates times

str(pre_osi_2.2)

pre_OSI_2.2_2 <- pre_osi_2.2 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - pre_datetime_x,
   diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(pre_OSI_2.2_2)

pre_OSI_2.2_test <- mutate(pre_OSI_2.2_2, osi_time = as.POSIXct(diff_secs, origin = "1970-01-01"))
str(pre_OSI_2.2_test)

####generate 5 min epochs and summaries

pre_OSI_2.2_5 <- pre_OSI_2.2_test %>% group_by(project_id, by5=cut(osi_time, "5 min")) %>%
  summarise(median=median(osi), across())
  
str(pre_OSI_2.2_5)
head(pre_OSI_2.2_5)

##remove repeated rows 'by 5'

pre_OSI_2.2_5a <- pre_OSI_2.2_5 %>% group_by(project_id, by5) %>% 
  filter(row_number()==1) %>%
  ungroup()

str(pre_OSI_2.2_5a)

###check how many values for each 

table(pre_OSI_2.2_5a$project_id)

##post physio prepare new times

post_OSI_2.2_2 <- post_osi_2.2 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - datetime_x,
   diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(post_OSI_2.2_2)

post_OSI_2.2_test <- mutate(post_OSI_2.2_2, osi_time = as.POSIXct(diff_secs, origin = "1970-01-01"))
str(post_OSI_2.2_test)

##create 5 min epochs

post_OSI_2.2_5 <- post_OSI_2.2_test %>% group_by(project_id, by5=cut(osi_time, "5 min")) %>%
  summarise(median=median(osi), across())
  
str(post_OSI_2.2_5)
head(post_OSI_2.2_5)

##remove repeated rows 'by 5'

post_OSI_2.2_5a <- post_OSI_2.2_5 %>% group_by(project_id, by5) %>% 
  filter(row_number()==1) %>%
  ungroup()

str(post_OSI_2.2_5a)

###check how many values for each 

table(post_OSI_2.2_5a$project_id)

#########################################################################
## draw graph of 5 min medians pre/post
#########################################################################

#need to change by into POSIXct from factor

pre_OSI_2.2_5a$by5 <- as.POSIXct(pre_OSI_2.2_5a$by5,format='%Y-%m-%d %H:%M:%S')

post_OSI_2.2_5a$by5 <- as.POSIXct(post_OSI_2.2_5a$by5,format='%Y-%m-%d %H:%M:%S')

### pre-physio

## plot median SpO2     
             
pre_plot <- ggplot(pre_OSI_2.2_5a, aes(x=diff_secs, y=median, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            geom_line() +
            ggtitle("OSI pre-physio (5 min epochs)") + # add a title
    xlab('Time (seconds)') + ylab('median OSI') + # add axis names
      xlim(0,1800) + ylim(0,20) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
          
## plot median SpO2     
             
post_plot <- ggplot(post_OSI_2.2_5a, aes(x=diff_secs, y=median, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            geom_line() +
            ggtitle("OSI post-physio (5 min epochs)") + # add a title
    xlab('Time (seconds)') + ylab('median OSI') + # add axis names
    xlim(0,3600) + ylim(0,20) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
           
require(gridExtra)

grid.arrange(pre_plot, post_plot, ncol=2)

##########################################
###5 mins  pre and post add extra column
#########################################

str(pre_OSI_2.2_5a)
str(post_OSI_2.2_5a)

##select columns want

preOSI_2.2 <- select(pre_OSI_2.2_5a, project_id, by5, median)
postOSI_2.2 <- select(post_OSI_2.2_5a, project_id, by5, median)

##rename medians for clarity

names(preOSI_2.2)[names(preOSI_2.2) == 'median'] <- 'premedian'
names(postOSI_2.2)[names(postOSI_2.2) == 'median'] <- 'postmedian'

str(preOSI_2.2)
str(postOSI_2.2)

##add extra column 

preOSI_2.2_1 <- preOSI_2.2 %>%
group_by(project_id) %>%
  mutate(label1 = LETTERS[row_number()]) %>%
  ungroup()

postOSI_2.2_1 <- postOSI_2.2 %>%
group_by(project_id) %>%
  mutate(label = LETTERS[row_number()]) %>%
  ungroup()

str(preOSI_2.2_1)
str(postOSI_2.2_1)

##try to reverse preOSI letters

preOSI_2.2_2 <- preOSI_2.2_1 %>%
group_by(project_id) %>%
mutate(label = rev(label1)) %>%
ungroup()

str(preOSI_2.2_2)

###################################################################################################################
########################################
###analysis 1 5 min pre vs 5 min post
########################################
#####################################################################################################################

###################################################
##subset pre for just 5min immediately pre "A"
#################################################

preOSI_2.2_3 <- select(preOSI_2.2_2, project_id, by5, premedian, label)

preOSI_2.2_4 <- subset(preOSI_2.2_3, label == "A")
str(preOSI_2.2_4)

preOSI_2.2_5 <- select(preOSI_2.2_4, project_id, by5, premedian)
str(preOSI_2.2_5)

###remove row if by5 time not 00:25:00

preOSI_2.2_6 <- preOSI_2.2_5[preOSI_2.2_5$by5 == "1970-01-01 00:25:00",]

str(preOSI_2.2_6)

#########################################
##subset post for 5 min imm post A
######################################

postOSI_2.2_2 <- subset(postOSI_2.2_1, label == "A")
str(postOSI_2.2_2)

###remove rows if by5 time not 00:00:00

postOSI_2.2_3 <- postOSI_2.2_2[postOSI_2.2_2$by5 == "1970-01-01 00:00:00",]

str(postOSI_2.2_3)

################################
##join pre and post together
###################################

osi2.2_prepost_5 <- inner_join(postOSI_2.2_3, preOSI_2.2_6, by="project_id")
str(osi2.2_prepost_5)    

unique(osi2.2_prepost_5$project_id)
sum(is.na(osi2.2_prepost_5))

##############################################
##calculate differences in 5 mins medians
###########################################
 
osi2.2_prepost_5$OSI_diff <- osi2.2_prepost_5$postmedian - osi2.2_prepost_5$premedian
str(osi2.2_prepost_5)

##plot with id
ggplot(osi2.2_prepost_5, aes(x = project_id, y=OSI_diff)) + 
            geom_point() +
             ggtitle("OSI difference post-pre physio (5 min epochs)") + # add a title
    xlab('Project id') + ylab('difference in OSI') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0.3, color = "red")
           
#### create new variable for above or below threshold

osi2.2_prepost_5$OSI_threshold <- ifelse(osi2.2_prepost_5$OSI_diff >= 0.3, "yes", "no")

str(osi2.2_prepost_5)

t.OSI <- table(osi2.2_prepost_5$OSI_threshold)

addmargins(t.OSI)
round(prop.table(t.OSI)*100, 2) #to give percentage

ggplot(osi2.2_prepost_5, aes(x = premedian, y=OSI_diff)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle(" 0-5 mins post physiotherapy") + # add a title
    ylab('Difference in 5 minute medians of OSI') + xlab(NULL) +
    ylim(-6,15)+ # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
           geom_hline(yintercept = 0.3, color = "red") 

####create new variable above, isq, below

str(osi2.2_prepost_5)

osi2.2_prepost_5$OSI_result <- ifelse(osi2.2_prepost_5$OSI_diff < 0, 'Improved',
                         ifelse(osi2.2_prepost_5$OSI_diff == 0, 'ISQ',
                         ifelse(osi2.2_prepost_5$OSI_diff > 0 & osi2.2_prepost_5$OSI_diff < 0.3, 'Worse', 'AE')))
str(osi2.2_prepost_5)    

ggplot(osi2.2_prepost_5, aes(x = project_id, y=OSI_diff, colour=OSI_result)) + 
            geom_point(size=0.5) +
             ggtitle("0-5 minutes post physio") + # add a title
    xlab(NULL) + ylab('Difference in OSI') + # add axis names
      ylim(-6,15)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
            scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
                 geom_hline(yintercept = 0.3, color = "red")+
        geom_hline(yintercept = 0, color = "black")
        
result1 <- table(osi2.2_prepost_5$OSI_result)

addmargins(result1)
round(prop.table(result1)*100, 2) #to give percentage


plot5a <- ggplot(osi2.2_prepost_5, aes(x = premedian, y=OSI_diff, colour=OSI_result)) + 
            geom_point() +
             ggtitle("0-5 minutes post-physiotherapy") + # add a title
    ylab('Change in median OSI') + xlab(NULL) +
    ylim(-7,10)+
 scale_x_continuous(expand = c(0, 0), limits = c(0,20)) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
                                geom_hline(yintercept = 0.3, color = "red") +
            geom_hline(yintercept = 0, color = "black")
            
###get subset of those unstable

osi_prepost_5a <- select(osi2.2_prepost_5, project_id, OSI_diff, OSI_result)

names(osi_prepost_5a)[names(osi_prepost_5a) == 'OSI_diff'] <- 'OSI_diff5'
names(osi_prepost_5a)[names(osi_prepost_5a) == 'OSI_result'] <- 'OSI_result5'

str(osi_prepost_5a)               

########################################################################################
######################################
##analysis 2 5 mins pre vs 15 mins post
######################################
######################################################################################

str(preOSI_2.2_6)

#########################################
##subset post for 15 min imm post C
######################################

postOSI_2.2_15 <- subset(postOSI_2.2_1, label == "C")
str(postOSI_2.2_15)

###remove rows if by5 time not 00:10:00

postOSI_2.2_15a <- postOSI_2.2_15[postOSI_2.2_15$by5 == "1970-01-01 00:10:00",]

str(postOSI_2.2_15a)

################################
##join pre and post together
###################################

osi2.2_prepost_15 <- inner_join(postOSI_2.2_15a, preOSI_2.2_6, by="project_id")
str(osi2.2_prepost_15)    

unique(osi2.2_prepost_15$project_id)
sum(is.na(osi2.2_prepost_15))

##############################################
##calculate differences in 5 mins medians
###########################################
 
osi2.2_prepost_15$OSI_diff <- osi2.2_prepost_15$postmedian - osi2.2_prepost_15$premedian
str(osi2.2_prepost_15)

##plot with id
ggplot(osi2.2_prepost_15, aes(x = project_id, y=OSI_diff, colour = project_id)) + 
            geom_point() +
             ggtitle("OSI difference post-pre physio (5 min epochs)") + # add a title
    xlab('Project id') + ylab('difference in OSI') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0.3, color = "red")
           
#### create new variable for above or below threshold

osi2.2_prepost_15$OSI_threshold <- ifelse(osi2.2_prepost_15$OSI_diff >= 0.3, "yes", "no")

str(osi2.2_prepost_15)

t.OSI <- table(osi2.2_prepost_15$OSI_threshold)

addmargins(t.OSI)
round(prop.table(t.OSI)*100, 2) #to give percentage

 ggplot(osi2.2_prepost_15, aes(x = premedian, y=OSI_diff)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle("10-15 minutes post physiotherapy") + # add a title
    ylim(-6,15) + # add axis names
    ylab(NULL) + xlab(NULL) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
           geom_hline(yintercept = 0.3, color = "red") 
        
####create new variable above, isq, below

str(osi2.2_prepost_15)

osi2.2_prepost_15$OSI_result <- ifelse(osi2.2_prepost_15$OSI_diff < 0, 'Improved',
                         ifelse(osi2.2_prepost_15$OSI_diff == 0, 'ISQ',
                         ifelse(osi2.2_prepost_15$OSI_diff > 0 & osi2.2_prepost_15$OSI_diff < 0.3, 'Worse', 'AE')))
str(osi2.2_prepost_15)    


 ggplot(osi2.2_prepost_15, aes(x = project_id, y=OSI_diff, colour=OSI_result)) + 
            geom_point(size = 0.5) +
             ggtitle("10-15 minutes post physio") + # add a title
    xlab(NULL) + ylab(NULL) + # add axis names
      ylim(-6,15)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
            scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
                 geom_hline(yintercept = 0.3, color = "red")+
        geom_hline(yintercept = 0, color = "black")
        
result2 <- table(osi2.2_prepost_15$OSI_result)

addmargins(result2)
round(prop.table(result2)*100, 2) #to give percentage   

plot15a <- ggplot(osi2.2_prepost_15, aes(x = premedian, y=OSI_diff, colour=OSI_result)) + 
            geom_point() +
             ggtitle("10-15 minutes post-physiotherapy") + # add a title
    ylab(NULL) + xlab(NULL) +
     ylim(-7,10)+
 scale_x_continuous(expand = c(0, 0), limits = c(0,20)) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
                                geom_hline(yintercept = 0.3, color = "red") +
            geom_hline(yintercept = 0, color = "black")

###get subset of those unstable

osi_prepost_15a <- select(osi2.2_prepost_15, project_id, OSI_diff, OSI_result)

names(osi_prepost_15a)[names(osi_prepost_15a) == 'OSI_diff'] <- 'OSI_diff15'
names(osi_prepost_15a)[names(osi_prepost_15a) == 'OSI_result'] <- 'OSI_result15'

str(osi_prepost_15a) 

####################################################################################
#############################################
### analysis 3 5 min pre vs 30 mins post
###########################################
######################################################################################

str(preOSI_2.2_6)

#########################################
##subset post for 30 min post F
######################################

postOSI_2.2_30 <- subset(postOSI_2.2_1, label == "F")
str(postOSI_2.2_30)

###remove rows if by5 time not 00:25:00

postOSI_2.2_30a <- postOSI_2.2_30[postOSI_2.2_30$by5 == "1970-01-01 00:25:00",]

str(postOSI_2.2_30a)

################################
##join pre and post together
###################################

osi2.2_prepost_30 <- inner_join(postOSI_2.2_30a, preOSI_2.2_6, by="project_id")
str(osi2.2_prepost_30)    

unique(osi2.2_prepost_30$project_id)
sum(is.na(osi2.2_prepost_30))

##############################################
##calculate differences in 5 mins medians
###########################################
 
osi2.2_prepost_30$OSI_diff <- osi2.2_prepost_30$postmedian - osi2.2_prepost_30$premedian
str(osi2.2_prepost_30)

##plot with id
ggplot(osi2.2_prepost_30, aes(x = project_id, y=OSI_diff, colour = project_id)) + 
            geom_point() +
             ggtitle("OSI difference post-pre physio (5 min epochs)") + # add a title
    xlab('Project id') + ylab('difference in OSI') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0.3, color = "red")
           
#### create new variable for above or below threshold

osi2.2_prepost_30$OSI_threshold <- ifelse(osi2.2_prepost_30$OSI_diff >= 0.3, "yes", "no")

str(osi2.2_prepost_30)

t.OSI <- table(osi2.2_prepost_30$OSI_threshold)

addmargins(t.OSI)
round(prop.table(t.OSI)*100, 2) #to give percentage

ggplot(osi2.2_prepost_30, aes(x = premedian, y=OSI_diff)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle("25-30 minutes post physiotherapy") + # add a title
    xlab('Median OSI 5-minutes pre-physiotherapy') + ylab('Difference in OSI') + # add axis names
         ylim(-6,15) +theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
           geom_hline(yintercept = 0.3, color = "red") 

 ####create new variable above, isq, below

str(osi2.2_prepost_30)

osi2.2_prepost_30$OSI_result <- ifelse(osi2.2_prepost_30$OSI_diff < 0, 'Improved',
                         ifelse(osi2.2_prepost_30$OSI_diff == 0, 'ISQ',
                         ifelse(osi2.2_prepost_30$OSI_diff > 0 & osi2.2_prepost_30$OSI_diff < 0.3, 'Worse', 'AE')))
str(osi2.2_prepost_30)    

 ggplot(osi2.2_prepost_30, aes(x = project_id, y=OSI_diff, colour=OSI_result)) + 
            geom_point(size=0.5) +
             ggtitle("25-30 minutes post physio") + # add a title
    xlab('Individual patients') + ylab('Difference in OSI') + # add axis names
      ylim(-6,15)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
              scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
                 geom_hline(yintercept = 0.3, color = "red")+
        geom_hline(yintercept = 0, color = "black")
        
result3 <- table(osi2.2_prepost_30$OSI_result)

addmargins(result3)
round(prop.table(result3)*100, 2) #to give percentage  

    plot30a <- ggplot(osi2.2_prepost_30, aes(x = premedian, y=OSI_diff, colour=OSI_result)) + 
            geom_point() +
             ggtitle("25-30 minutes post-physiotherapy") + # add a title
    ylab('Change in median OSI') + xlab('Median OSI 5 minutes pre-physiotherapy') +
     ylim(-7,10)+
 scale_x_continuous(expand = c(0, 0), limits = c(0,20)) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
                                geom_hline(yintercept = 0.3, color = "red") +
            geom_hline(yintercept = 0, color = "black")   
            
 ###get subset of those unstable

osi_prepost_30a <- select(osi2.2_prepost_30, project_id, OSI_diff, OSI_result)

names(osi_prepost_30a)[names(osi_prepost_30a) == 'OSI_diff'] <- 'OSI_diff30'
names(osi_prepost_30a)[names(osi_prepost_30a) == 'OSI_result'] <- 'OSI_result30'

str(osi_prepost_30a)           

#######################################################################################
##########################################
##analysis 4 5mins pre vs 60 mins
###########################################
#######################################################################################

str(preOSI_2.2_6)

#########################################
##subset post for 60 min post 
######################################

postOSI_2.2_60 <- subset(postOSI_2.2_1, label == "L")
str(postOSI_2.2_60)

###remove rows if by5 time not 00:60:00

postOSI_2.2_60a <- postOSI_2.2_60[postOSI_2.2_60$by5 == "1970-01-01 00:55:00",]

str(postOSI_2.2_60a)

################################
##join pre and post together
###################################

osi2.2_prepost_60 <- inner_join(postOSI_2.2_60a, preOSI_2.2_6, by="project_id")
str(osi2.2_prepost_60)    

unique(osi2.2_prepost_60$project_id)
sum(is.na(osi2.2_prepost_60))

##############################################
##calculate differences in 5 mins medians
###########################################
 
osi2.2_prepost_60$OSI_diff <- osi2.2_prepost_60$postmedian - osi2.2_prepost_60$premedian
str(osi2.2_prepost_60)

##plot with id
ggplot(osi2.2_prepost_60, aes(x = project_id, y=OSI_diff)) + 
            geom_point() +
             ggtitle("OSI difference post-pre physio (5 min epochs)") + # add a title
    xlab('Project id') + ylab('difference in OSI') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0.3, color = "red")
           
#### create new variable for above or below threshold

osi2.2_prepost_60$OSI_threshold <- ifelse(osi2.2_prepost_60$OSI_diff >= 0.3, "yes", "no")

str(osi2.2_prepost_60)

t.OSI <- table(osi2.2_prepost_60$OSI_threshold)

addmargins(t.OSI)
round(prop.table(t.OSI)*100, 2) #to give percentage

 ggplot(osi2.2_prepost_60, aes(x = premedian, y=OSI_diff)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle("55-60 minutes post physiotherapy") + # add a title
    xlab('Median OSI 5-minutes pre-physiotherapy')  + ylab(NULL)+ # add axis names
        ylim(-6,15) + theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
           geom_hline(yintercept = 0.3, color = "red") 

 ####create new variable above, isq, below

str(osi2.2_prepost_60)

osi2.2_prepost_60$OSI_result <- ifelse(osi2.2_prepost_60$OSI_diff < 0, 'Improved',
                         ifelse(osi2.2_prepost_60$OSI_diff == 0, 'ISQ',
                         ifelse(osi2.2_prepost_60$OSI_diff > 0 & osi2.2_prepost_60$OSI_diff < 0.3, 'Worse', 'AE')))
str(osi2.2_prepost_60)    

ggplot(osi2.2_prepost_60, aes(x = project_id, y=OSI_diff, colour=OSI_result)) + 
            geom_point(size= 0.5) +
             ggtitle("55-60 minutes post physio") + # add a title
    xlab('Individual patients') + ylab(NULL) + # add axis names
    ylim(-6,15)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
             scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3")) +
                 geom_hline(yintercept = 0.3, color = "red") + 
        geom_hline(yintercept = 0, color = "black") 
      
result4 <- table(osi2.2_prepost_60$OSI_result)

addmargins(result4)
round(prop.table(result4)*100, 2) #to give percentage

plot60a <- ggplot(osi2.2_prepost_60, aes(x = premedian, y=OSI_diff, colour=OSI_result)) + 
            geom_point() +
             ggtitle("55-60 minutes postphysiotherapy") + # add a title
    ylab(NULL) + xlab('Median OSI 5 minutes pre-physiotherapy') +
     ylim(-7,10)+
 scale_x_continuous(expand = c(0, 0), limits = c(0,20)) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
                                geom_hline(yintercept = 0.3, color = "red") +
            geom_hline(yintercept = 0, color = "black")

###get subset of those unstable

osi_prepost_60a <- select(osi2.2_prepost_60, project_id, OSI_diff, OSI_result)

names(osi_prepost_60a)[names(osi_prepost_60a) == 'OSI_diff'] <- 'OSI_diff60'
names(osi_prepost_60a)[names(osi_prepost_60a) == 'OSI_result'] <- 'OSI_result60'

str(osi_prepost_60a)
########################
##combine plots
############################

require(gridExtra)

grid.arrange(plot5a, plot15a, plot30a, plot60a, ncol=2, nrow=2)

grid.arrange(plota, plotb, plotc, plotd, ncol=2, nrow=2)

########################################
###join subsets to identify those with AE
#########################################

osi_AE_2.2a <- full_join(osi_prepost_5a, osi_prepost_15a, by="project_id")
str(osi_AE_2.2a)

osi_AE_2.2b <- full_join(osi_AE_2.2a, osi_prepost_30a, by="project_id")
str(osi_AE_2.2b)

osi_AE_2.2c <- full_join(osi_AE_2.2b, osi_prepost_60a, by="project_id")
str(osi_AE_2.2c)

###create AE variable

osi_AE_2.2c$osi_AE <- ifelse(osi_AE_2.2c$OSI_result5 == "AE" | osi_AE_2.2c$OSI_result15 == "AE" | osi_AE_2.2c$OSI_result30 == "AE" | osi_AE_2.2c$OSI_result60 == "AE", 'Yes', 'No')

str(osi_AE_2.2c)

table(osi_AE_2.2c$osi_AE)

is.na(osi_AE_2.2c)

osi_AE_2.2 <- select(osi_AE_2.2c, project_id, osi_AE)
str(osi_AE_2.2)


###save as csv

write.csv(osi_AE_2.2, "~/files/datafiles/osi_AE_2.2.csv")

#####################################################################

############################################################################################################
####session 2.3
###############################################################################################################
##########################
##load in osi files
###################################

##data set 1

##no data

##data set 2

OSI2.3 <-xap.read_table("osi2_2_3")
str(OSI2.3)

unique(OSI2.3$project_id)

#########################################################################
# to plot raw data on graph - calculate time difference from first recorded (baseline)
#########################################################################


 osi_2.3 <- OSI2.3 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - pre_datetime_x,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(osi_2.3)

ggplot(osi_2.3, aes(x=diff_secs, y=osi, color = project_id)) + 
 geom_point(aes(color = project_id), size = 1) +
            ggtitle("OSI pre and post physio session 2.3") + # add a title
    xlab('Time') + ylab('OSI') + # add axis names
    xlim(0,7500) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position="none") +
             scale_color_viridis(discrete = TRUE, option = "D") +
                 geom_vline(xintercept = c(1800, 3600), color = "red")

##############################################################
###create pre and post data set
#############################################################
          
## pre physio
pre_osi_2.3 <- OSI2.3 %>% group_by(project_id) %>%
filter(record_date_time_y > pre_datetime_x & record_date_time_y < start_datetime_x) %>% ungroup()
str(pre_osi_2.3)

summary(pre_osi_2.3)
           
## post physio            
             
post_osi_2.3 <-  OSI2.3 %>% group_by(project_id) %>%
filter(record_date_time_y > datetime_x & record_date_time_y < end_datetime_x) %>% ungroup()
str(post_osi_2.3)

summary(post_osi_2.3)
#########################################################################
# to plot raw data on graph - calculate time difference from first recorded (baseline)
#########################################################################

###pre physio

pre_osi_2.3_2 <- pre_osi_2.3 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - pre_datetime_x,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(pre_osi_2.3_2)

ggplot(pre_osi_2.3_2, aes(x=diff_secs, y=osi, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            ggtitle("OSI pre physiotherapy session 2.2") + # add a title
    xlab('Time (secs)') + ylab('OSI') + # add axis names
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
             
###post physio

 post_osi_2.3_2 <- post_osi_2.3 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - datetime_x,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(post_osi_2.3_2)

ggplot(post_osi_2.3_2, aes(x=diff_secs, y=osi, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            ggtitle("OSI post physiotherapy session 2.2") + # add a title
    xlab('Time (secs)') + ylab('OSI') + # add axis names
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")             
             
########################################
# prepare data to calulate 5 min epochs
######################################

###pre physio, prepare consistant dates times

str(pre_osi_2.3)

pre_OSI_2.3_2 <- pre_osi_2.3 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - pre_datetime_x,
   diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(pre_OSI_2.3_2)

pre_OSI_2.3_test <- mutate(pre_OSI_2.3_2, osi_time = as.POSIXct(diff_secs, origin = "1970-01-01"))
str(pre_OSI_2.3_test)

####generate 5 min epochs and summaries

pre_OSI_2.3_5 <- pre_OSI_2.3_test %>% group_by(project_id, by5=cut(osi_time, "5 min")) %>%
  summarise(median=median(osi), across())
  
str(pre_OSI_2.3_5)
head(pre_OSI_2.3_5)

##remove repeated rows 'by 5'

pre_OSI_2.3_5a <- pre_OSI_2.3_5 %>% group_by(project_id, by5) %>% 
  filter(row_number()==1) %>%
  ungroup()

str(pre_OSI_2.3_5a)

###check how many values for each 

table(pre_OSI_2.3_5a$project_id)

##post physio prepare new times

post_OSI_2.3_2 <- post_osi_2.3 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - datetime_x,
   diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(post_OSI_2.3_2)

post_OSI_2.3_test <- mutate(post_OSI_2.3_2, osi_time = as.POSIXct(diff_secs, origin = "1970-01-01"))
str(post_OSI_2.3_test)

##create 5 min epochs

post_OSI_2.3_5 <- post_OSI_2.3_test %>% group_by(project_id, by5=cut(osi_time, "5 min")) %>%
  summarise(median=median(osi), across())
  
str(post_OSI_2.3_5)
head(post_OSI_2.3_5)

##remove repeated rows 'by 5'

post_OSI_2.3_5a <- post_OSI_2.3_5 %>% group_by(project_id, by5) %>% 
  filter(row_number()==1) %>%
  ungroup()

str(post_OSI_2.3_5a)

###check how many values for each 

table(post_OSI_2.3_5a$project_id)

#########################################################################
## draw graph of 5 min medians pre/post
#########################################################################

#need to change by into POSIXct from factor

pre_OSI_2.3_5a$by5 <- as.POSIXct(pre_OSI_2.3_5a$by5,format='%Y-%m-%d %H:%M:%S')

post_OSI_2.3_5a$by5 <- as.POSIXct(post_OSI_2.3_5a$by5,format='%Y-%m-%d %H:%M:%S')

### pre-physio

## plot median SpO2     
             
pre_plot <- ggplot(pre_OSI_2.3_5a, aes(x=diff_secs, y=median, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            geom_line() +
            ggtitle("Median OSI pre-physiotherapy") + # add a title
    xlab('Time (seconds)') + ylab('Median OSI') + # add axis names
      xlim(0,1800) + ylim(0,20) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none") +
    scale_color_manual(values='steelblue4')     
    
## plot median SpO2     
             
post_plot <- ggplot(post_OSI_2.3_5a, aes(x=diff_secs, y=median, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            geom_line() +
            ggtitle("Median OSI post-physiotherapy") + # add a title
    xlab('Time (seconds)') + ylab('Median OSI') + # add axis names
    xlim(0,3600) + ylim(0,20) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
               scale_color_manual(values='steelblue4')

require(gridExtra)

grid.arrange(pre_plot, post_plot, ncol=2)

##########################################
###5 mins  pre and post add extra column
#########################################

str(pre_OSI_2.3_5a)
str(post_OSI_2.3_5a)

##select columns want

preOSI_2.3 <- select(pre_OSI_2.3_5a, project_id, by5, median)
postOSI_2.3 <- select(post_OSI_2.3_5a, project_id, by5, median)

##rename medians for clarity

names(preOSI_2.3)[names(preOSI_2.3) == 'median'] <- 'premedian'
names(postOSI_2.3)[names(postOSI_2.3) == 'median'] <- 'postmedian'

str(preOSI_2.3)
str(postOSI_2.3)
##add extra column 

preOSI_2.3_1 <- preOSI_2.3 %>%
group_by(project_id) %>%
  mutate(label1 = LETTERS[row_number()]) %>%
  ungroup()

postOSI_2.3_1 <- postOSI_2.3 %>%
group_by(project_id) %>%
  mutate(label = LETTERS[row_number()]) %>%
  ungroup()

str(preOSI_2.3_1)
str(postOSI_2.3_1)

##try to reverse preOSI letters

preOSI_2.3_2 <- preOSI_2.3_1 %>%
group_by(project_id) %>%
mutate(label = rev(label1)) %>%
ungroup()

str(preOSI_2.3_2)

###################################################################################################################
########################################
###analysis 1 5 min pre vs 5 min post
########################################
#####################################################################################################################

###################################################
##subset pre for just 5min immediately pre "A"
#################################################

preOSI_2.3_3 <- select(preOSI_2.3_2, project_id, by5, premedian, label)

preOSI_2.3_4 <- subset(preOSI_2.3_3, label == "A")
str(preOSI_2.3_4)

preOSI_2.3_5 <- select(preOSI_2.3_4, project_id, by5, premedian)
str(preOSI_2.3_5)

###remove row if by5 time not 00:25:00

preOSI_2.3_6 <- preOSI_2.3_5[preOSI_2.3_5$by5 == "1970-01-01 00:25:00",]

str(preOSI_2.3_6)

#########################################
##subset post for 5 min imm post A
######################################

postOSI_2.3_2 <- subset(postOSI_2.3_1, label == "A")
str(postOSI_2.3_2)

###remove rows if by5 time not 00:00:00

postOSI_2.3_3 <- postOSI_2.3_2[postOSI_2.3_2$by5 == "1970-01-01 00:00:00",]

str(postOSI_2.3_3)

################################
##join pre and post together
###################################

osi2.3_prepost_5 <- inner_join(postOSI_2.3_3, preOSI_2.3_6, by="project_id")
str(osi2.3_prepost_5)    

unique(osi2.3_prepost_5$project_id)
sum(is.na(osi2.3_prepost_5))

##############################################
##calculate differences in 5 mins medians
###########################################
 
osi2.3_prepost_5$OSI_diff <- osi2.3_prepost_5$postmedian - osi2.3_prepost_5$premedian
str(osi2.3_prepost_5)

##plot with id
ggplot(osi2.3_prepost_5, aes(x = project_id, y=OSI_diff)) + 
            geom_point() +
             ggtitle("OSI difference post-pre physio (5 min epochs)") + # add a title
    xlab('Project id') + ylab('difference in OSI') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0.3, color = "red")
           
#### create new variable for above or below threshold

osi2.3_prepost_5$OSI_threshold <- ifelse(osi2.3_prepost_5$OSI_diff >= 0.3, "yes", "no")

str(osi2.3_prepost_5)

t.OSI <- table(osi2.3_prepost_5$OSI_threshold)

addmargins(t.OSI)
round(prop.table(t.OSI)*100, 2) #to give percentage

ggplot(osi2.3_prepost_5, aes(x = premedian, y=OSI_diff)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle(" 0-5 mins post physiotherapy") + # add a title
    ylab('Difference in 5 minute medians of OSI') + xlab(NULL) +
    ylim(-6,15)+ # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
           geom_hline(yintercept = 0.3, color = "red") 

####create new variable above, isq, below

str(osi2.3_prepost_5)

osi2.3_prepost_5$OSI_result <- ifelse(osi2.3_prepost_5$OSI_diff < 0, 'Improved',
                         ifelse(osi2.3_prepost_5$OSI_diff == 0, 'ISQ',
                         ifelse(osi2.3_prepost_5$OSI_diff > 0 & osi2.3_prepost_5$OSI_diff < 0.3, 'Worse', 'AE')))
str(osi2.3_prepost_5)    

ggplot(osi2.3_prepost_5, aes(x = project_id, y=OSI_diff, colour=OSI_result)) + 
            geom_point(size=0.5) +
             ggtitle("0-5 minutes post physio") + # add a title
    xlab(NULL) + ylab('Difference in OSI') + # add axis names
      ylim(-6,15)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
            scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
                 geom_hline(yintercept = 0.3, color = "red")+
        geom_hline(yintercept = 0, color = "black")       
       
result1 <- table(osi2.3_prepost_5$OSI_result)

addmargins(result1)
round(prop.table(result1)*100, 2) #to give percentage

plot5a <- ggplot(osi2.3_prepost_5, aes(x = premedian, y=OSI_diff, colour=OSI_result)) + 
            geom_point() +
             ggtitle(" 0-5 mins post physiotherapy") + # add a title
    ylab('OSI difference') + xlab(NULL) +
    ylim(-5,10) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
                                geom_hline(yintercept = 0.3, color = "red") +
            geom_hline(yintercept = 0, color = "black")

########################################################################################
######################################
##analysis 2 5 mins pre vs 15 mins post
######################################
######################################################################################

str(preOSI_2.3_6)

#########################################
##subset post for 15 min imm post C
######################################

postOSI_2.3_15 <- subset(postOSI_2.3_1, label == "C")
str(postOSI_2.3_15)

###remove rows if by5 time not 00:10:00

postOSI_2.3_15a <- postOSI_2.3_15[postOSI_2.3_15$by5 == "1970-01-01 00:10:00",]

str(postOSI_2.3_15a)

################################
##join pre and post together
###################################

osi2.3_prepost_15 <- inner_join(postOSI_2.3_15a, preOSI_2.3_6, by="project_id")
str(osi2.3_prepost_15)    

unique(osi2.3_prepost_15$project_id)
sum(is.na(osi2.3_prepost_15))

##############################################
##calculate differences in 5 mins medians
###########################################
 
osi2.3_prepost_15$OSI_diff <- osi2.3_prepost_15$postmedian - osi2.3_prepost_15$premedian
str(osi2.3_prepost_15)

##plot with id
ggplot(osi2.3_prepost_15, aes(x = project_id, y=OSI_diff, colour = project_id)) + 
            geom_point() +
             ggtitle("OSI difference post-pre physio (5 min epochs)") + # add a title
    xlab('Project id') + ylab('difference in OSI') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0.3, color = "red")
           
#### create new variable for above or below threshold

osi2.3_prepost_15$OSI_threshold <- ifelse(osi2.3_prepost_15$OSI_diff >= 0.3, "yes", "no")

str(osi2.3_prepost_15)

t.OSI <- table(osi2.3_prepost_15$OSI_threshold)

addmargins(t.OSI)
round(prop.table(t.OSI)*100, 2) #to give percentage

 ggplot(osi2.3_prepost_15, aes(x = premedian, y=OSI_diff)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle("10-15 minutes post physiotherapy") + # add a title
    ylim(-6,15) + # add axis names
    ylab(NULL) + xlab(NULL) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
           geom_hline(yintercept = 0.3, color = "red") 
        
####create new variable above, isq, below

str(osi2.3_prepost_15)

osi2.3_prepost_15$OSI_result <- ifelse(osi2.3_prepost_15$OSI_diff < 0, 'Improved',
                         ifelse(osi2.3_prepost_15$OSI_diff == 0, 'ISQ',
                         ifelse(osi2.3_prepost_15$OSI_diff > 0 & osi2.3_prepost_15$OSI_diff < 0.3, 'Worse', 'AE')))
str(osi2.3_prepost_15)    

 ggplot(osi2.3_prepost_15, aes(x = project_id, y=OSI_diff, colour=OSI_result)) + 
            geom_point(size = 0.5) +
             ggtitle("10-15 minutes post physio") + # add a title
    xlab(NULL) + ylab(NULL) + # add axis names
      ylim(-6,15)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
            scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
                 geom_hline(yintercept = 0.3, color = "red")+
        geom_hline(yintercept = 0, color = "black")
        
result2 <- table(osi2.3_prepost_15$OSI_result)

addmargins(result2)
round(prop.table(result2)*100, 2) #to give percentage   

plot15a <- ggplot(osi2.3_prepost_15, aes(x = premedian, y=OSI_diff, colour=OSI_result)) + 
            geom_point() +
             ggtitle(" 10-15 mins post physiotherapy") + # add a title
    ylab(NULL) + xlab(NULL) +
    ylim(-5,10) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
                                geom_hline(yintercept = 0.3, color = "red") +
            geom_hline(yintercept = 0, color = "black")

####################################################################################
#############################################
### analysis 3 5 min pre vs 30 mins post
###########################################
######################################################################################

str(preOSI_2.3_6)

#########################################
##subset post for 30 min post F
######################################

postOSI_2.3_30 <- subset(postOSI_2.3_1, label == "F")
str(postOSI_2.3_30)

###remove rows if by5 time not 00:25:00

postOSI_2.3_30a <- postOSI_2.3_30[postOSI_2.3_30$by5 == "1970-01-01 00:25:00",]

str(postOSI_2.3_30a)

################################
##join pre and post together
###################################

osi2.3_prepost_30 <- inner_join(postOSI_2.3_30a, preOSI_2.3_6, by="project_id")
str(osi2.3_prepost_30)    

unique(osi2.3_prepost_30$project_id)
sum(is.na(osi2.3_prepost_30))

##############################################
##calculate differences in 5 mins medians
###########################################
 
osi2.3_prepost_30$OSI_diff <- osi2.3_prepost_30$postmedian - osi2.3_prepost_30$premedian
str(osi2.3_prepost_30)

##plot with id
ggplot(osi2.3_prepost_30, aes(x = project_id, y=OSI_diff, colour = project_id)) + 
            geom_point() +
             ggtitle("OSI difference post-pre physio (5 min epochs)") + # add a title
    xlab('Project id') + ylab('difference in OSI') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0.3, color = "red")
           

#### create new variable for above or below threshold

osi2.3_prepost_30$OSI_threshold <- ifelse(osi2.3_prepost_30$OSI_diff >= 0.3, "yes", "no")

str(osi2.3_prepost_30)

t.OSI <- table(osi2.3_prepost_30$OSI_threshold)

addmargins(t.OSI)
round(prop.table(t.OSI)*100, 2) #to give percentage

ggplot(osi2.3_prepost_30, aes(x = premedian, y=OSI_diff)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle("25-30 minutes post physiotherapy") + # add a title
    xlab('Median OSI 5-minutes pre-physiotherapy') + ylab('Difference in OSI') + # add axis names
         ylim(-6,15) +theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
           geom_hline(yintercept = 0.3, color = "red") 

 ####create new variable above, isq, below

str(osi2.3_prepost_30)

osi2.3_prepost_30$OSI_result <- ifelse(osi2.3_prepost_30$OSI_diff < 0, 'Improved',
                         ifelse(osi2.3_prepost_30$OSI_diff == 0, 'ISQ',
                         ifelse(osi2.3_prepost_30$OSI_diff > 0 & osi2.3_prepost_30$OSI_diff < 0.3, 'Worse', 'AE')))
str(osi2.3_prepost_30)    

 ggplot(osi2.3_prepost_30, aes(x = project_id, y=OSI_diff, colour=OSI_result)) + 
            geom_point(size=0.5) +
             ggtitle("25-30 minutes post physio") + # add a title
    xlab('Individual patients') + ylab('Difference in OSI') + # add axis names
      ylim(-6,15)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
              scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
                 geom_hline(yintercept = 0.3, color = "red")+
        geom_hline(yintercept = 0, color = "black")
        
result3 <- table(osi2.3_prepost_30$OSI_result)

addmargins(result3)
round(prop.table(result3)*100, 2) #to give percentage  

    plot30a <- ggplot(osi2.3_prepost_30, aes(x = premedian, y=OSI_diff, colour=OSI_result)) + 
            geom_point() +
             ggtitle("25-30 mins post physiotherapy") + # add a title
    ylab('OSI difference') + xlab('Median OSI pre-physio') +
    ylim(-5,10) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
                                geom_hline(yintercept = 0.3, color = "red") +
            geom_hline(yintercept = 0, color = "black")   

#######################################################################################
##########################################
##analysis 4 5mins pre vs 60 mins
###########################################
#######################################################################################

str(preOSI_2.3_6)

######################################
##subset post for 60 min post 
######################################

postOSI_2.3_60 <- subset(postOSI_2.3_1, label == "L")
str(postOSI_2.3_60)

###remove rows if by5 time not 00:60:00

postOSI_2.3_60a <- postOSI_2.3_60[postOSI_2.3_60$by5 == "1970-01-01 00:55:00",]

str(postOSI_2.3_60a)

################################
##join pre and post together
###################################

osi2.3_prepost_60 <- inner_join(postOSI_2.3_60a, preOSI_2.3_6, by="project_id")
str(osi2.3_prepost_60)    

unique(osi2.3_prepost_60$project_id)
sum(is.na(osi2.3_prepost_60))

##############################################
##calculate differences in 5 mins medians
###########################################
 
osi2.3_prepost_60$OSI_diff <- osi2.3_prepost_60$postmedian - osi2.3_prepost_60$premedian
str(osi2.2_prepost_60)

##plot with id
ggplot(osi2.3_prepost_60, aes(x = project_id, y=OSI_diff)) + 
            geom_point() +
             ggtitle("OSI difference post-pre physio (5 min epochs)") + # add a title
    xlab('Project id') + ylab('difference in OSI') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0.3, color = "red")
           
#### create new variable for above or below threshold

osi2.3_prepost_60$OSI_threshold <- ifelse(osi2.3_prepost_60$OSI_diff >= 0.3, "yes", "no")

str(osi2.3_prepost_60)

t.OSI <- table(osi2.3_prepost_60$OSI_threshold)

addmargins(t.OSI)
round(prop.table(t.OSI)*100, 2) #to give percentage

 ggplot(osi2.3_prepost_60, aes(x = premedian, y=OSI_diff)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle("55-60 minutes post physiotherapy") + # add a title
    xlab('Median OSI 5-minutes pre-physiotherapy')  + ylab(NULL)+ # add axis names
        ylim(-6,15) + theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
           geom_hline(yintercept = 0.3, color = "red") 

 ####create new variable above, isq, below

str(osi2.3_prepost_60)

osi2.3_prepost_60$OSI_result <- ifelse(osi2.3_prepost_60$OSI_diff < 0, 'Improved',
                         ifelse(osi2.3_prepost_60$OSI_diff == 0, 'ISQ',
                         ifelse(osi2.3_prepost_60$OSI_diff > 0 & osi2.3_prepost_60$OSI_diff < 0.3, 'Worse', 'AE')))
str(osi2.3_prepost_60)    

ggplot(osi2.3_prepost_60, aes(x = project_id, y=OSI_diff, colour=OSI_result)) + 
            geom_point(size= 0.5) +
             ggtitle("55-60 minutes post physio") + # add a title
    xlab('Individual patients') + ylab(NULL) + # add axis names
    ylim(-6,15)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
             scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3")) +
                 geom_hline(yintercept = 0.3, color = "red") + 
        geom_hline(yintercept = 0, color = "black") 
      
result4 <- table(osi2.3_prepost_60$OSI_result)

addmargins(result4)
round(prop.table(result4)*100, 2) #to give percentage

plot60a <- ggplot(osi2.3_prepost_60, aes(x = premedian, y=OSI_diff, colour=OSI_result)) + 
            geom_point() +
             ggtitle("55-60 mins post physiotherapy") + # add a title
    ylab(NULL) + xlab('Median OSI pre-physio') +
    ylim(-5,10) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
                                geom_hline(yintercept = 0.3, color = "red") +
            geom_hline(yintercept = 0, color = "black")

########################
##combine plots
############################

require(gridExtra)

grid.arrange(plot5a, plot15a, plot30a, plot60a, ncol=2, nrow=2)

grid.arrange(plota, plotb, plotc, plotd, ncol=2, nrow=2)
#####################################################################






######################################################Script 12 – OSI day 3 exploration#################################################################


##########################
##load in osi files
###################################

##data set 1

osi1_3.1 <- xap.read_table("osi1_3_1")

str(osi1_3.1)

##data set 2

osi2_3.1 <-xap.read_table("osi2_3_1")
str(osi2_3.1)

###################################################
###################################################
# combine part 1 and part 2 osi files
####################################################
##################################################

#combine 1 & 2

OSI_3.1 <- rbind(osi1_3.1, osi2_3.1)

str(OSI_3.1)

unique(OSI_3.1$project_id)

summary(OSI_3.1)

###replace 99999 with inf

OSI_3.1$osi[OSI_3.1$osi == 99999] <- Inf 

#########################################################################
# to plot raw data on graph - calculate time difference from first recorded (baseline)
#########################################################################

 osi_3.1 <- OSI_3.1 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - pre_datetime_x,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(osi_3.1)

ggplot(osi_3.1, aes(x=diff_secs, y=osi, color = project_id)) + 
 geom_point(aes(color = project_id), size = 1) +
            ggtitle("OSI pre and post physio session 2.1") + # add a title
    xlab('Time') + ylab('OSI') + # add axis names
    xlim(0,7500) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position="none") +
             scale_color_viridis(discrete = TRUE, option = "D") +
                 geom_vline(xintercept = c(1800, 3600), color = "red")

##############################################################
###create pre and post data set
#############################################################
          
## pre physio
pre_osi_3.1 <- OSI_3.1 %>% group_by(project_id) %>%
filter(record_date_time_y > pre_datetime_x & record_date_time_y < start_datetime_x) %>% ungroup()
str(pre_osi_3.1)

summary(pre_osi_3.1)
           
## post physio            
             
post_osi_3.1 <-  OSI_3.1 %>% group_by(project_id) %>%
filter(record_date_time_y > datetime_x & record_date_time_y < end_datetime_x) %>% ungroup()
str(post_osi_3.1)

summary(post_osi_3.1)
#########################################################################
# to plot raw data on graph - calculate time difference from first recorded (baseline)
#########################################################################

###pre physio

pre_osi_3.1_2 <- pre_osi_3.1 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - pre_datetime_x,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(pre_osi_3.1_2)

ggplot(pre_osi_3.1_2, aes(x=diff_secs, y=osi, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            ggtitle("OSI pre physiotherapy session 2.1") + # add a title
    xlab('Time (secs)') + ylab('OSI') + # add axis names
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
             
###post physio

 post_osi_3.1_2 <- post_osi_3.1 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - datetime_x,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
str(post_osi_3.1_2)

ggplot(post_osi_3.1_2, aes(x=diff_secs, y=osi, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            ggtitle("OSI post physiotherapy session 2.1") + # add a title
    xlab('Time (secs)') + ylab('OSI') + # add axis names
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")             
             
########################################
# prepare data to calulate 5 min epochs
######################################

###pre physio, prepare consistant dates times

str(pre_osi_3.1)

pre_OSI_3.1_2 <- pre_osi_3.1 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - pre_datetime_x,
   diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(pre_OSI_3.1_2)

pre_OSI_3.1_test <- mutate(pre_OSI_3.1_2, osi_time = as.POSIXct(diff_secs, origin = "1970-01-01"))
str(pre_OSI_3.1_test)

####generate 5 min epochs and summaries

pre_OSI_3.1_5 <- pre_OSI_3.1_test %>% group_by(project_id, by5=cut(osi_time, "5 min")) %>%
  summarise(median=median(osi), across())
  
str(pre_OSI_3.1_5)
head(pre_OSI_3.1_5)

##remove repeated rows 'by 5'

pre_OSI_3.1_5a <- pre_OSI_3.1_5 %>% group_by(project_id, by5) %>% 
  filter(row_number()==1) %>%
  ungroup()

str(pre_OSI_3.1_5a)

###check how many values for each 

table(pre_OSI_3.1_5a$project_id)

##post physio prepare new times


post_OSI_3.1_2 <- post_osi_3.1 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - datetime_x,
   diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(post_OSI_3.1_2)

post_OSI_3.1_test <- mutate(post_OSI_3.1_2, osi_time = as.POSIXct(diff_secs, origin = "1970-01-01"))
str(post_OSI_3.1_test)

##create 5 min epochs

post_OSI_3.1_5 <- post_OSI_3.1_test %>% group_by(project_id, by5=cut(osi_time, "5 min")) %>%
  summarise(median=median(osi), across())
  
str(post_OSI_3.1_5)
head(post_OSI_3.1_5)

##remove repeated rows 'by 5'

post_OSI_3.1_5a <- post_OSI_3.1_5 %>% group_by(project_id, by5) %>% 
  filter(row_number()==1) %>%
  ungroup()

str(post_OSI_3.1_5a)

###check how many values for each 

table(post_OSI_3.1_5a$project_id)

#########################################################################
## draw graph of 5 min medians pre/post
#########################################################################

#need to change by into POSIXct from factor

pre_OSI_3.1_5a$by5 <- as.POSIXct(pre_OSI_3.1_5a$by5,format='%Y-%m-%d %H:%M:%S')

post_OSI_3.1_5a$by5 <- as.POSIXct(post_OSI_3.1_5a$by5,format='%Y-%m-%d %H:%M:%S')

### pre-physio

## plot median SpO2     
             
pre_plot <- ggplot(pre_OSI_3.1_5a, aes(x=diff_secs, y=median, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            geom_line() +
            ggtitle("OSI pre-physio (5 min epochs)") + # add a title
    xlab('Time (seconds)') + ylab('median OSI') + # add axis names
      xlim(0,1800) + ylim(0,20) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
          
## plot median SpO2     
             
post_plot <- ggplot(post_OSI_3.1_5a, aes(x=diff_secs, y=median, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            geom_line() +
            ggtitle("OSI post-physio (5 min epochs)") + # add a title
    xlab('Time (seconds)') + ylab('median OSI') + # add axis names
    xlim(0,3600) + ylim(0,20) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")     
                                  
require(gridExtra)

grid.arrange(pre_plot, post_plot, ncol=2)

##########################################
###5 mins  pre and post add extra column
#########################################

str(pre_OSI_3.1_5a)
str(post_OSI_3.1_5a)

##select columns want

preOSI_3.1 <- select(pre_OSI_3.1_5a, project_id, by5, median)
postOSI_3.1 <- select(post_OSI_3.1_5a, project_id, by5, median)

##rename medians for clarity

names(preOSI_3.1)[names(preOSI_3.1) == 'median'] <- 'premedian'
names(postOSI_3.1)[names(postOSI_3.1) == 'median'] <- 'postmedian'

str(preOSI_3.1)
str(postOSI_3.1)

##add extra column 

preOSI_3.1_1 <- preOSI_3.1 %>%
group_by(project_id) %>%
  mutate(label1 = LETTERS[row_number()]) %>%
  ungroup()

postOSI_3.1_1 <- postOSI_3.1 %>%
group_by(project_id) %>%
  mutate(label = LETTERS[row_number()]) %>%
  ungroup()

str(preOSI_3.1_1)
str(postOSI_3.1_1)
##try to reverse preOSI letters

preOSI_3.1_2 <- preOSI_3.1_1 %>%
group_by(project_id) %>%
mutate(label = rev(label1)) %>%
ungroup()

str(preOSI_3.1_2)

###################################################################################################################
########################################
###analysis 1 5 min pre vs 5 min post
########################################
#####################################################################################################################

###################################################
##subset pre for just 5min immediately pre "A"
#################################################

preOSI_3.1_3 <- select(preOSI_3.1_2, project_id, by5, premedian, label)

preOSI_3.1_4 <- subset(preOSI_3.1_3, label == "A")
str(preOSI_3.1_4)

preOSI_3.1_5 <- select(preOSI_3.1_4, project_id, by5, premedian)
str(preOSI_3.1_5)

###remove row if by5 time not 00:25:00

preOSI_3.1_6 <- preOSI_3.1_5[preOSI_3.1_5$by5 == "1970-01-01 00:25:00",]

str(preOSI_3.1_6)

#########################################
##subset post for 5 min imm post A
######################################

postOSI_3.1_2 <- subset(postOSI_3.1_1, label == "A")
str(postOSI_3.1_2)

###remove rows if by5 time not 00:00:00

postOSI_3.1_3 <- postOSI_3.1_2[postOSI_3.1_2$by5 == "1970-01-01 00:00:00",]

str(postOSI_3.1_3)

################################
##join pre and post together
###################################

osi3.1_prepost_5 <- inner_join(postOSI_3.1_3, preOSI_3.1_6, by="project_id")
str(osi3.1_prepost_5)    

unique(osi3.1_prepost_5$project_id)
sum(is.na(osi3.1_prepost_5))

##############################################
##calculate differences in 5 mins medians
###########################################
 
osi3.1_prepost_5$OSI_diff <- osi3.1_prepost_5$postmedian - osi3.1_prepost_5$premedian
str(osi3.1_prepost_5)

##plot with id
ggplot(osi3.1_prepost_5, aes(x = project_id, y=OSI_diff)) + 
            geom_point() +
             ggtitle("OSI difference post-pre physio (5 min epochs)") + # add a title
    xlab('Project id') + ylab('difference in OSI') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0.3, color = "red")
           
#### create new variable for above or below threshold

osi3.1_prepost_5$OSI_threshold <- ifelse(osi3.1_prepost_5$OSI_diff >= 0.3, "yes", "no")

str(osi3.1_prepost_5)

t.OSI <- table(osi3.1_prepost_5$OSI_threshold)

addmargins(t.OSI)
round(prop.table(t.OSI)*100, 2) #to give percentage

ggplot(osi3.1_prepost_5, aes(x = premedian, y=OSI_diff)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle(" 0-5 mins post physiotherapy") + # add a title
    ylab('Difference in 5 minute medians of OSI') + xlab(NULL) +
    ylim(-6,15)+ # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
           geom_hline(yintercept = 0.3, color = "red") 

####create new variable above, isq, below

str(osi3.1_prepost_5)

osi3.1_prepost_5$OSI_result <- ifelse(osi3.1_prepost_5$OSI_diff < 0, 'Improved',
                         ifelse(osi3.1_prepost_5$OSI_diff == 0, 'ISQ',
                         ifelse(osi3.1_prepost_5$OSI_diff > 0 & osi3.1_prepost_5$OSI_diff < 0.3, 'Worse', 'AE')))
str(osi3.1_prepost_5)    

ggplot(osi3.1_prepost_5, aes(x = project_id, y=OSI_diff, colour=OSI_result)) + 
            geom_point(size=0.5) +
             ggtitle("0-5 minutes post physio") + # add a title
    xlab(NULL) + ylab('Difference in OSI') + # add axis names
      ylim(-6,15)+
        theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
            scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
                 geom_hline(yintercept = 0.3, color = "red")+
        geom_hline(yintercept = 0, color = "black")
               
result1 <- table(osi3.1_prepost_5$OSI_result)

addmargins(result1)
round(prop.table(result1)*100, 2) #to give percentage


plot5a <- ggplot(osi3.1_prepost_5, aes(x = premedian, y=OSI_diff, colour=OSI_result)) + 
            geom_point() +
             ggtitle(" 0-5 mins post physiotherapy") + # add a title
    ylab('OSI difference') + xlab(NULL) +
    ylim(-7,10) + xlim(0,20) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
                                geom_hline(yintercept = 0.3, color = "red") +
            geom_hline(yintercept = 0, color = "black")
            
###get subset of those unstable

osi_prepost_5a <- select(osi3.1_prepost_5, project_id, OSI_diff, OSI_result)

names(osi_prepost_5a)[names(osi_prepost_5a) == 'OSI_diff'] <- 'OSI_diff5'
names(osi_prepost_5a)[names(osi_prepost_5a) == 'OSI_result'] <- 'OSI_result5'

str(osi_prepost_5a)              

########################################################################################
######################################
##analysis 2 5 mins pre vs 15 mins post
######################################
######################################################################################

str(preOSI_3.1_6)

#########################################
##subset post for 15 min imm post C
######################################

postOSI_3.1_15 <- subset(postOSI_3.1_1, label == "C")
str(postOSI_3.1_15)

###remove rows if by5 time not 00:10:00


postOSI_3.1_15a <- postOSI_3.1_15[postOSI_3.1_15$by5 == "1970-01-01 00:10:00",]

str(postOSI_3.1_15a)

################################
##join pre and post together
###################################

osi3.1_prepost_15 <- inner_join(postOSI_3.1_15a, preOSI_3.1_6, by="project_id")
str(osi3.1_prepost_15)    

unique(osi3.1_prepost_15$project_id)
sum(is.na(osi3.1_prepost_15))

##############################################
##calculate differences in 5 mins medians
###########################################
 
osi3.1_prepost_15$OSI_diff <- osi3.1_prepost_15$postmedian - osi3.1_prepost_15$premedian
str(osi3.1_prepost_15)

##plot with id
ggplot(osi3.1_prepost_15, aes(x = project_id, y=OSI_diff, colour = project_id)) + 
            geom_point() +
             ggtitle("OSI difference post-pre physio (5 min epochs)") + # add a title
    xlab('Project id') + ylab('difference in OSI') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0.3, color = "red")
           
#### create new variable for above or below threshold

osi3.1_prepost_15$OSI_threshold <- ifelse(osi3.1_prepost_15$OSI_diff >= 0.3, "yes", "no")

str(osi3.1_prepost_15)

t.OSI <- table(osi3.1_prepost_15$OSI_threshold)

addmargins(t.OSI)
round(prop.table(t.OSI)*100, 2) #to give percentage

 ggplot(osi3.1_prepost_15, aes(x = premedian, y=OSI_diff)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle("10-15 minutes post physiotherapy") + # add a title
    ylim(-6,15) + # add axis names
    ylab(NULL) + xlab(NULL) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
           geom_hline(yintercept = 0.3, color = "red") 
        
####create new variable above, isq, below

str(osi3.1_prepost_15)

osi3.1_prepost_15$OSI_result <- ifelse(osi3.1_prepost_15$OSI_diff < 0, 'Improved',
                         ifelse(osi3.1_prepost_15$OSI_diff == 0, 'ISQ',
                         ifelse(osi3.1_prepost_15$OSI_diff > 0 & osi3.1_prepost_15$OSI_diff < 0.3, 'Worse', 'AE')))
str(osi3.1_prepost_15)    

 ggplot(osi3.1_prepost_15, aes(x = project_id, y=OSI_diff, colour=OSI_result)) + 
            geom_point(size = 0.5) +
             ggtitle("10-15 minutes post physio") + # add a title
    xlab(NULL) + ylab(NULL) + # add axis names
      ylim(-6,15)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
            scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
                 geom_hline(yintercept = 0.3, color = "red")+
        geom_hline(yintercept = 0, color = "black")
        
result2 <- table(osi3.1_prepost_15$OSI_result)

addmargins(result2)
round(prop.table(result2)*100, 2) #to give percentage   

plot15a <- ggplot(osi3.1_prepost_15, aes(x = premedian, y=OSI_diff, colour=OSI_result)) + 
            geom_point() +
             ggtitle(" 10-15 mins post physiotherapy") + # add a title
    ylab(NULL) + xlab(NULL) +
    ylim(-7,10) + xlim(0,20) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
                                geom_hline(yintercept = 0.3, color = "red") +
            geom_hline(yintercept = 0, color = "black")
            
 ###get subset of those unstable

osi_prepost_15a <- select(osi3.1_prepost_15, project_id, OSI_diff, OSI_result)

names(osi_prepost_15a)[names(osi_prepost_15a) == 'OSI_diff'] <- 'OSI_diff15'
names(osi_prepost_15a)[names(osi_prepost_15a) == 'OSI_result'] <- 'OSI_result15'

str(osi_prepost_15a)              

####################################################################################
#############################################
### analysis 3 5 min pre vs 30 mins post
###########################################
######################################################################################

str(preOSI_3.1_6)
#########################################
##subset post for 30 min post F
######################################

postOSI_3.1_30 <- subset(postOSI_3.1_1, label == "F")
str(postOSI_3.1_30)

###remove rows if by5 time not 00:25:00

postOSI_3.1_30a <- postOSI_3.1_30[postOSI_3.1_30$by5 == "1970-01-01 00:25:00",]

str(postOSI_3.1_30a)

################################
##join pre and post together
###################################

osi3.1_prepost_30 <- inner_join(postOSI_3.1_30a, preOSI_3.1_6, by="project_id")
str(osi3.1_prepost_30)    

unique(osi3.1_prepost_30$project_id)
sum(is.na(osi3.1_prepost_30))

##############################################
##calculate differences in 5 mins medians
###########################################
 
osi3.1_prepost_30$OSI_diff <- osi3.1_prepost_30$postmedian - osi3.1_prepost_30$premedian
str(osi3.1_prepost_30)

##plot with id
ggplot(osi3.1_prepost_30, aes(x = project_id, y=OSI_diff, colour = project_id)) + 
            geom_point() +
             ggtitle("OSI difference post-pre physio (5 min epochs)") + # add a title
    xlab('Project id') + ylab('difference in OSI') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0.3, color = "red")
           
#### create new variable for above or below threshold

osi3.1_prepost_30$OSI_threshold <- ifelse(osi3.1_prepost_30$OSI_diff >= 0.3, "yes", "no")

str(osi3.1_prepost_30)

t.OSI <- table(osi3.1_prepost_30$OSI_threshold)

addmargins(t.OSI)
round(prop.table(t.OSI)*100, 2) #to give percentage

ggplot(osi3.1_prepost_30, aes(x = premedian, y=OSI_diff)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle("25-30 minutes post physiotherapy") + # add a title
    xlab('Median OSI 5-minutes pre-physiotherapy') + ylab('Difference in OSI') + # add axis names
         ylim(-6,15) +theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
           geom_hline(yintercept = 0.3, color = "red") 

 ####create new variable above, isq, below

str(osi3.1_prepost_30)

osi3.1_prepost_30$OSI_result <- ifelse(osi3.1_prepost_30$OSI_diff < 0, 'Improved',
                         ifelse(osi3.1_prepost_30$OSI_diff == 0, 'ISQ',
                         ifelse(osi3.1_prepost_30$OSI_diff > 0 & osi3.1_prepost_30$OSI_diff < 0.3, 'Worse', 'AE')))
str(osi3.1_prepost_30)    

 ggplot(osi3.1_prepost_30, aes(x = project_id, y=OSI_diff, colour=OSI_result)) + 
            geom_point(size=0.5) +
             ggtitle("25-30 minutes post physio") + # add a title
    xlab('Individual patients') + ylab('Difference in OSI') + # add axis names
      ylim(-6,15)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
              scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
                 geom_hline(yintercept = 0.3, color = "red")+
        geom_hline(yintercept = 0, color = "black")
        
result3 <- table(osi3.1_prepost_30$OSI_result)

addmargins(result3)
round(prop.table(result3)*100, 2) #to give percentage  

    plot30a <- ggplot(osi3.1_prepost_30, aes(x = premedian, y=OSI_diff, colour=OSI_result)) + 
            geom_point() +
             ggtitle("25-30 mins post physiotherapy") + # add a title
    ylab('OSI difference') + xlab('Median OSI 5 mins pre-physio') +
    ylim(-7,10) + xlim(0,20) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
                                geom_hline(yintercept = 0.3, color = "red") +
            geom_hline(yintercept = 0, color = "black")   
            
###get subset of those unstable

osi_prepost_30a <- select(osi3.1_prepost_30, project_id, OSI_diff, OSI_result)

names(osi_prepost_30a)[names(osi_prepost_30a) == 'OSI_diff'] <- 'OSI_diff30'
names(osi_prepost_30a)[names(osi_prepost_30a) == 'OSI_result'] <- 'OSI_result30'

str(osi_prepost_30a)               
#######################################################################################
##########################################
##analysis 4 5mins pre vs 60 mins
###########################################
#######################################################################################

str(preOSI_3.1_6)

#########################################
##subset post for 60 min post 
######################################

postOSI_3.1_60 <- subset(postOSI_3.1_1, label == "L")
str(postOSI_3.1_60)

###remove rows if by5 time not 00:60:00

postOSI_3.1_60a <- postOSI_3.1_60[postOSI_3.1_60$by5 == "1970-01-01 00:55:00",]

str(postOSI_3.1_60a)

################################
##join pre and post together
###################################

osi3.1_prepost_60 <- inner_join(postOSI_3.1_60a, preOSI_3.1_6, by="project_id")
str(osi3.1_prepost_60)    

unique(osi3.1_prepost_60$project_id)
sum(is.na(osi3.1_prepost_60))

##############################################
##calculate differences in 5 mins medians
###########################################
 
osi3.1_prepost_60$OSI_diff <- osi3.1_prepost_60$postmedian - osi3.1_prepost_60$premedian
str(osi3.1_prepost_60)

##plot with id
ggplot(osi3.1_prepost_60, aes(x = project_id, y=OSI_diff)) + 
            geom_point() +
             ggtitle("OSI difference post-pre physio (5 min epochs)") + # add a title
    xlab('Project id') + ylab('difference in OSI') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0.3, color = "red")
           
#### create new variable for above or below threshold

osi3.1_prepost_60$OSI_threshold <- ifelse(osi3.1_prepost_60$OSI_diff >= 0.3, "yes", "no")

str(osi3.1_prepost_60)

t.OSI <- table(osi3.1_prepost_60$OSI_threshold)

addmargins(t.OSI)
round(prop.table(t.OSI)*100, 2) #to give percentage

 ggplot(osi3.1_prepost_60, aes(x = premedian, y=OSI_diff)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle("55-60 minutes post physiotherapy") + # add a title
    xlab('Median OSI 5-minutes pre-physiotherapy')  + ylab(NULL)+ # add axis names
        ylim(-6,15) + theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
           geom_hline(yintercept = 0.3, color = "red") 

 ####create new variable above, isq, below

str(osi3.1_prepost_60)

osi3.1_prepost_60$OSI_result <- ifelse(osi3.1_prepost_60$OSI_diff < 0, 'Improved',
                         ifelse(osi3.1_prepost_60$OSI_diff == 0, 'ISQ',
                         ifelse(osi3.1_prepost_60$OSI_diff > 0 & osi3.1_prepost_60$OSI_diff < 0.3, 'Worse', 'AE')))
str(osi3.1_prepost_60)    

ggplot(osi3.1_prepost_60, aes(x = project_id, y=OSI_diff, colour=OSI_result)) + 
            geom_point(size= 0.5) +
             ggtitle("55-60 minutes post physio") + # add a title
    xlab('Individual patients') + ylab(NULL) + # add axis names
    ylim(-6,15)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
             scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3")) +
                 geom_hline(yintercept = 0.3, color = "red") + 
        geom_hline(yintercept = 0, color = "black") 
      
result4 <- table(osi3.1_prepost_60$OSI_result)

addmargins(result4)
round(prop.table(result4)*100, 2) #to give percentage

plot60a <- ggplot(osi3.1_prepost_60, aes(x = premedian, y=OSI_diff, colour=OSI_result)) + 
            geom_point() +
             ggtitle("55-60 mins post physiotherapy") + # add a title
    ylab(NULL) + xlab('Median OSI 5 mins pre-physio') +
    ylim(-7,10) + xlim(0,20) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
                                geom_hline(yintercept = 0.3, color = "red") +
            geom_hline(yintercept = 0, color = "black")

###get subset of those unstable

osi_prepost_60a <- select(osi3.1_prepost_60, project_id, OSI_diff, OSI_result)

names(osi_prepost_60a)[names(osi_prepost_60a) == 'OSI_diff'] <- 'OSI_diff60'
names(osi_prepost_60a)[names(osi_prepost_60a) == 'OSI_result'] <- 'OSI_result60'

str(osi_prepost_60a)
########################
##combine plots
############################

require(gridExtra)

grid.arrange(plot5a, plot15a, plot30a, plot60a, ncol=2, nrow=2)

#grid.arrange(plota, plotb, plotc, plotd, ncol=2, nrow=2)

########################################
###join subsets to identify those with AE
#########################################

osi_AE_3.1a <- full_join(osi_prepost_5a, osi_prepost_15a, by="project_id")
str(osi_AE_3.1a)

osi_AE_3.1b <- full_join(osi_AE_3.1a, osi_prepost_30a, by="project_id")
str(osi_AE_3.1b)

osi_AE_3.1c <- full_join(osi_AE_3.1b, osi_prepost_60a, by="project_id")
str(osi_AE_3.1c)

###create AE variable

osi_AE_3.1c$osi_AE <- ifelse(osi_AE_3.1c$OSI_result5 == "AE" | osi_AE_3.1c$OSI_result15 == "AE" | osi_AE_3.1c$OSI_result30 == "AE" | osi_AE_3.1c$OSI_result60 == "AE", 'Yes', 'No')

str(osi_AE_3.1c)

table(osi_AE_3.1c$osi_AE)

is.na(osi_AE_3.1c)

osi_AE_3.1 <- select(osi_AE_3.1c, project_id, osi_AE)
str(osi_AE_3.1)

####change NA to no

osi_AE_3.1[is.na(osi_AE_3.1)] = 'No'

table(osi_AE_3.1$osi_AE)

###save as csv

write.csv(osi_AE_3.1, "~/files/datafiles/osi_AE_3.1.csv")
#####################################################################

##################################################
###repeated measure anova, quantify change
##################################################

#####get individual datasets
##5 min
str(osi3.1_prepost_5)  

osi3.1_5 <- select(osi3.1_prepost_5, project_id, postmedian, premedian)
str(osi3.1_5)

names(osi3.1_5)[names(osi3.1_5) == "postmedian"] <- "postmedian5"
str(osi3.1_5)

###15mins

str(osi3.1_prepost_15)

osi3.1_15 <- select(osi3.1_prepost_15, project_id, postmedian)
str(osi3.1_15)

names(osi3.1_15)[names(osi3.1_15) == "postmedian"] <- "postmedian15"
str(osi3.1_15)

##30mins

osi3.1_30 <- select(osi3.1_prepost_30, project_id, postmedian)
str(osi3.1_30)

names(osi3.1_30)[names(osi3.1_30) == "postmedian"] <- "postmedian30"
str(osi3.1_30)

##60mins
osi3.1_60 <- select(osi3.1_prepost_60, project_id, postmedian)
str(osi3.1_60)

names(osi3.1_60)[names(osi3.1_60) == "postmedian"] <- "postmedian60"
str(osi3.1_60)

####################join together

osi3.1_change <- inner_join(osi3.1_5, osi3.1_15, by="project_id")
str(osi3.1_change)

osi3.1_change1 <- inner_join(osi3.1_change, osi3.1_30, by="project_id")
str(osi3.1_change1)

osi3.1_change2 <- inner_join(osi3.1_change1, osi3.1_60, by="project_id")
str(osi3.1_change2)

###change order of columns
osi3.1_change3 <- osi3.1_change2[, c(1, 3, 2, 4, 5, 6)]
str(osi3.1_change3)

################change to long format

osi3.1_change4 <- tidyr::gather(osi3.1_change3, key=time, value=medianosi, premedian:postmedian60) %>% 
                    arrange(project_id)
                    
head(osi3.1_change4)
str(osi3.1_change4)

test <- osi3.1_change4 %>% friedman_test(medianosi ~ time |project_id)
test

test1 <- osi3.1_change4 %>% friedman_effsize(medianosi ~ time |project_id)
test1

test3 <- osi3.1_change4 %>% wilcox_test(medianosi ~ time, paired = TRUE, p.adjust.method = "bonferroni")
test3

############################################################################################################
####session 3.2
###############################################################################################################

##########################
##load in osi files
###################################

##data set 1

osi1_3.2 <- xap.read_table("osi1_3_2")

str(osi1_3.2)
unique(osi1_3.2$project_id)

##data set 2

osi2_3.2 <-xap.read_table("osi2_3_2")
str(osi2_3.2)

unique(osi2_3.2$project_id)

###################################################
###################################################
# combine part 1 and part 2 osi files
####################################################
##################################################

#combine 1 & 2

OSI_3.2 <- rbind(osi1_3.2, osi2_3.2)

str(OSI_3.2)

unique(OSI_3.2$project_id)
summary(OSI_3.2)

#########################################################################
# to plot raw data on graph - calculate time difference from first recorded (baseline)
#########################################################################

 osi_3.2 <- OSI_3.2 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - pre_datetime_x,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(osi_3.2)

ggplot(osi_3.2, aes(x=diff_secs, y=osi, color = project_id)) + 
 geom_point(aes(color = project_id), size = 1) +
            ggtitle("OSI pre and post physio session 2.2") + # add a title
    xlab('Time') + ylab('OSI') + # add axis names
    xlim(0,7500) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position="none") +
             scale_color_viridis(discrete = TRUE, option = "D") +
                 geom_vline(xintercept = c(1800, 3600), color = "red")

##############################################################
###create pre and post data set
#############################################################
          
## pre physio
pre_osi_3.2 <- OSI_3.2 %>% group_by(project_id) %>%
filter(record_date_time_y > pre_datetime_x & record_date_time_y < start_datetime_x) %>% ungroup()
str(pre_osi_3.2)

summary(pre_osi_3.2)
           
## post physio            
             
post_osi_3.2 <-  OSI_3.2 %>% group_by(project_id) %>%
filter(record_date_time_y > datetime_x & record_date_time_y < end_datetime_x) %>% ungroup()
str(post_osi_3.2)

summary(post_osi_3.2)
#########################################################################
# to plot raw data on graph - calculate time difference from first recorded (baseline)
#########################################################################

###pre physio

pre_osi_3.2_2 <- pre_osi_3.2 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - pre_datetime_x,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(pre_osi_3.2_2)

ggplot(pre_osi_3.2_2, aes(x=diff_secs, y=osi, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            ggtitle("OSI pre physiotherapy session 2.2") + # add a title
    xlab('Time (secs)') + ylab('OSI') + # add axis names
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
             
###post physio

 post_osi_3.2_2 <- post_osi_3.2 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - datetime_x,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(post_osi_3.2_2)

ggplot(post_osi_3.2_2, aes(x=diff_secs, y=osi, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            ggtitle("OSI post physiotherapy session 2.2") + # add a title
    xlab('Time (secs)') + ylab('OSI') + # add axis names
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")             
             
#######################################
# prepare data to calulate 5 min epochs
######################################

###pre physio, prepare consistant dates times

str(pre_osi_3.2)

pre_OSI_3.2_2 <- pre_osi_3.2 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - pre_datetime_x,
   diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(pre_OSI_3.2_2)

pre_OSI_3.2_test <- mutate(pre_OSI_3.2_2, osi_time = as.POSIXct(diff_secs, origin = "1970-01-01"))
str(pre_OSI_3.2_test)

####generate 5 min epochs and summaries
pre_OSI_3.2_5 <- pre_OSI_3.2_test %>% group_by(project_id, by5=cut(osi_time, "5 min")) %>%
  summarise(median=median(osi), across())
  
str(pre_OSI_3.2_5)
head(pre_OSI_3.2_5)

##remove repeated rows 'by 5'

pre_OSI_3.2_5a <- pre_OSI_3.2_5 %>% group_by(project_id, by5) %>% 
  filter(row_number()==1) %>%
  ungroup()

str(pre_OSI_3.2_5a)

###check how many values for each 

table(pre_OSI_3.2_5a$project_id)

##post physio prepare new times

post_OSI_3.2_2 <- post_osi_3.2 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - datetime_x,
   diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(post_OSI_3.2_2)

post_OSI_3.2_test <- mutate(post_OSI_3.2_2, osi_time = as.POSIXct(diff_secs, origin = "1970-01-01"))
str(post_OSI_3.2_test)

##create 5 min epochs

post_OSI_3.2_5 <- post_OSI_3.2_test %>% group_by(project_id, by5=cut(osi_time, "5 min")) %>%
  summarise(median=median(osi), across())
  
str(post_OSI_3.2_5)
head(post_OSI_3.2_5)

##remove repeated rows 'by 5'

post_OSI_3.2_5a <- post_OSI_3.2_5 %>% group_by(project_id, by5) %>% 
  filter(row_number()==1) %>%
  ungroup()

str(post_OSI_3.2_5a)

###check how many values for each 

table(post_OSI_3.2_5a$project_id)

#########################################################################
## draw graph of 5 min medians pre/post
#########################################################################

#need to change by into POSIXct from factor

pre_OSI_3.2_5a$by5 <- as.POSIXct(pre_OSI_3.2_5a$by5,format='%Y-%m-%d %H:%M:%S')

post_OSI_3.2_5a$by5 <- as.POSIXct(post_OSI_3.2_5a$by5,format='%Y-%m-%d %H:%M:%S')

### pre-physio

## plot median SpO2     
             
pre_plot <- ggplot(pre_OSI_3.2_5a, aes(x=diff_secs, y=median, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            geom_line() +
            ggtitle("OSI pre-physio (5 min epochs)") + # add a title
    xlab('Time (seconds)') + ylab('median OSI') + # add axis names
      xlim(0,1800) + ylim(0,20) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
          
## plot median SpO2     
             
post_plot <- ggplot(post_OSI_3.2_5a, aes(x=diff_secs, y=median, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            geom_line() +
            ggtitle("OSI post-physio (5 min epochs)") + # add a title
    xlab('Time (seconds)') + ylab('median OSI') + # add axis names
    xlim(0,3600) + ylim(0,20) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
           
require(gridExtra)

grid.arrange(pre_plot, post_plot, ncol=2)

##########################################
###5 mins  pre and post add extra column
#########################################

str(pre_OSI_3.2_5a)
str(post_OSI_3.2_5a)

##select columns want

preOSI_3.2 <- select(pre_OSI_3.2_5a, project_id, by5, median)
postOSI_3.2 <- select(post_OSI_3.2_5a, project_id, by5, median)

##rename medians for clarity
names(preOSI_3.2)[names(preOSI_3.2) == 'median'] <- 'premedian'
names(postOSI_3.2)[names(postOSI_3.2) == 'median'] <- 'postmedian'

str(preOSI_3.2)
str(postOSI_3.2)

##add extra column 

preOSI_3.2_1 <- preOSI_3.2 %>%
group_by(project_id) %>%
  mutate(label1 = LETTERS[row_number()]) %>%
  ungroup()

postOSI_3.2_1 <- postOSI_3.2 %>%
group_by(project_id) %>%
  mutate(label = LETTERS[row_number()]) %>%
  ungroup()

str(preOSI_3.2_1)
str(postOSI_3.2_1)

##try to reverse preOSI letters

preOSI_3.2_2 <- preOSI_3.2_1 %>%
group_by(project_id) %>%
mutate(label = rev(label1)) %>%
ungroup()

str(preOSI_3.2_2)

###################################################################################################################
########################################
###analysis 1 5 min pre vs 5 min post
########################################
#####################################################################################################################

###################################################
##subset pre for just 5min immediately pre "A"
#################################################

preOSI_3.2_3 <- select(preOSI_3.2_2, project_id, by5, premedian, label)

preOSI_3.2_4 <- subset(preOSI_3.2_3, label == "A")
str(preOSI_3.2_4)

preOSI_3.2_5 <- select(preOSI_3.2_4, project_id, by5, premedian)
str(preOSI_3.2_5)

###remove row if by5 time not 00:25:00

preOSI_3.2_6 <- preOSI_3.2_5[preOSI_3.2_5$by5 == "1970-01-01 00:25:00",]

str(preOSI_3.2_6)
#########################################
##subset post for 5 min imm post A
######################################

postOSI_3.2_2 <- subset(postOSI_3.2_1, label == "A")
str(postOSI_3.2_2)

###remove rows if by5 time not 00:00:00

postOSI_3.2_3 <- postOSI_3.2_2[postOSI_3.2_2$by5 == "1970-01-01 00:00:00",]

str(postOSI_3.2_3)

################################
##join pre and post together
###################################

osi3.2_prepost_5 <- inner_join(postOSI_3.2_3, preOSI_3.2_6, by="project_id")
str(osi3.2_prepost_5)    

unique(osi3.2_prepost_5$project_id)
sum(is.na(osi3.2_prepost_5))

##############################################
##calculate differences in 5 mins medians
###########################################
 
osi3.2_prepost_5$OSI_diff <- osi3.2_prepost_5$postmedian - osi3.2_prepost_5$premedian
str(osi3.2_prepost_5)

##plot with id
ggplot(osi3.2_prepost_5, aes(x = project_id, y=OSI_diff)) + 
            geom_point() +
             ggtitle("OSI difference post-pre physio (5 min epochs)") + # add a title
    xlab('Project id') + ylab('difference in OSI') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0.3, color = "red")
           
#### create new variable for above or below threshold

osi3.2_prepost_5$OSI_threshold <- ifelse(osi3.2_prepost_5$OSI_diff >= 0.3, "yes", "no")

str(osi3.2_prepost_5)

t.OSI <- table(osi3.2_prepost_5$OSI_threshold)

addmargins(t.OSI)
round(prop.table(t.OSI)*100, 2) #to give percentage

ggplot(osi3.2_prepost_5, aes(x = premedian, y=OSI_diff)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle(" 0-5 mins post physiotherapy") + # add a title
    ylab('Difference in 5 minute medians of OSI') + xlab(NULL) +
    ylim(-6,15)+ # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
           geom_hline(yintercept = 0.3, color = "red") 

####create new variable above, isq, below

str(osi3.2_prepost_5)

osi3.2_prepost_5$OSI_result <- ifelse(osi3.2_prepost_5$OSI_diff < 0, 'Improved',
                         ifelse(osi3.2_prepost_5$OSI_diff == 0, 'ISQ',
                         ifelse(osi3.2_prepost_5$OSI_diff > 0 & osi3.2_prepost_5$OSI_diff < 0.3, 'Worse', 'AE')))
str(osi3.2_prepost_5)    

ggplot(osi3.2_prepost_5, aes(x = project_id, y=OSI_diff, colour=OSI_result)) + 
            geom_point(size=0.5) +
             ggtitle("0-5 minutes post physio") + # add a title
    xlab(NULL) + ylab('Difference in OSI') + # add axis names
      ylim(-6,15)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
            scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
                 geom_hline(yintercept = 0.3, color = "red")+
        geom_hline(yintercept = 0, color = "black")
            
result1 <- table(osi3.2_prepost_5$OSI_result)

addmargins(result1)
round(prop.table(result1)*100, 2) #to give percentage


plot5a <- ggplot(osi3.2_prepost_5, aes(x = premedian, y=OSI_diff, colour=OSI_result)) + 
            geom_point() +
             ggtitle("0-5 minutes post-physiotherapy") + # add a title
    ylab('Change in median OSI') + xlab(NULL) +
    ylim(-10,10)+
 scale_x_continuous(expand = c(0, 0), limits = c(0,20)) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
                                geom_hline(yintercept = 0.3, color = "red") +
            geom_hline(yintercept = 0, color = "black")

########################################################################################
######################################
##analysis 2 5 mins pre vs 15 mins post
######################################
######################################################################################

str(preOSI_3.2_6)

#########################################
##subset post for 15 min imm post C
######################################

postOSI_3.2_15 <- subset(postOSI_3.2_1, label == "C")
str(postOSI_3.2_15)

###remove rows if by5 time not 00:10:00

postOSI_3.2_15a <- postOSI_3.2_15[postOSI_3.2_15$by5 == "1970-01-01 00:10:00",]

str(postOSI_3.2_15a)

################################
##join pre and post together
###################################

osi3.2_prepost_15 <- inner_join(postOSI_3.2_15a, preOSI_3.2_6, by="project_id")
str(osi3.2_prepost_15)    

unique(osi3.2_prepost_15$project_id)
sum(is.na(osi3.2_prepost_15))

##############################################
##calculate differences in 5 mins medians
###########################################
 
osi3.2_prepost_15$OSI_diff <- osi3.2_prepost_15$postmedian - osi3.2_prepost_15$premedian
str(osi3.2_prepost_15)

##plot with id
ggplot(osi3.2_prepost_15, aes(x = project_id, y=OSI_diff, colour = project_id)) + 
            geom_point() +
             ggtitle("OSI difference post-pre physio (5 min epochs)") + # add a title
    xlab('Project id') + ylab('difference in OSI') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0.3, color = "red")
           
#### create new variable for above or below threshold

osi3.2_prepost_15$OSI_threshold <- ifelse(osi3.2_prepost_15$OSI_diff >= 0.3, "yes", "no")

str(osi3.2_prepost_15)

t.OSI <- table(osi3.2_prepost_15$OSI_threshold)

addmargins(t.OSI)
round(prop.table(t.OSI)*100, 2) #to give percentage

 ggplot(osi3.2_prepost_15, aes(x = premedian, y=OSI_diff)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle("10-15 minutes post physiotherapy") + # add a title
    ylim(-6,15) + # add axis names
    ylab(NULL) + xlab(NULL) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
           geom_hline(yintercept = 0.3, color = "red") 
        
####create new variable above, isq, below

str(osi3.2_prepost_15)

osi3.2_prepost_15$OSI_result <- ifelse(osi3.2_prepost_15$OSI_diff < 0, 'Improved',
                         ifelse(osi3.2_prepost_15$OSI_diff == 0, 'ISQ',
                         ifelse(osi3.2_prepost_15$OSI_diff > 0 & osi3.2_prepost_15$OSI_diff < 0.3, 'Worse', 'AE')))
str(osi3.2_prepost_15)    

 ggplot(osi3.2_prepost_15, aes(x = project_id, y=OSI_diff, colour=OSI_result)) + 
            geom_point(size = 0.5) +
             ggtitle("10-15 minutes post physio") + # add a title
    xlab(NULL) + ylab(NULL) + # add axis names
      ylim(-6,15)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
            scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
                 geom_hline(yintercept = 0.3, color = "red")+
        geom_hline(yintercept = 0, color = "black")
        
result2 <- table(osi3.2_prepost_15$OSI_result)

addmargins(result2)
round(prop.table(result2)*100, 2) #to give percentage   

plot15a <- ggplot(osi3.2_prepost_15, aes(x = premedian, y=OSI_diff, colour=OSI_result)) + 
            geom_point() +
             ggtitle("10-15 minutes post-physiotherapy") + # add a title
    ylab(NULL) + xlab(NULL) +
    ylim(-10,10)+
 scale_x_continuous(expand = c(0, 0), limits = c(0,20)) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
                                geom_hline(yintercept = 0.3, color = "red") +
            geom_hline(yintercept = 0, color = "black")

 ###get subset of those unstable

osi_prepost_15a <- select(osi3.2_prepost_15, project_id, OSI_diff, OSI_result)

names(osi_prepost_15a)[names(osi_prepost_15a) == 'OSI_diff'] <- 'OSI_diff15'
names(osi_prepost_15a)[names(osi_prepost_15a) == 'OSI_result'] <- 'OSI_result15'
str(osi_prepost_15a)    
####################################################################################
#############################################
### analysis 3 5 min pre vs 30 mins post
###########################################
######################################################################################

str(preOSI_3.2_6)

#########################################
##subset post for 30 min post F
######################################

postOSI_3.2_30 <- subset(postOSI_3.2_1, label == "F")
str(postOSI_3.2_30)

###remove rows if by5 time not 00:25:00

postOSI_3.2_30a <- postOSI_3.2_30[postOSI_3.2_30$by5 == "1970-01-01 00:25:00",]

str(postOSI_3.2_30a)

################################
##join pre and post together
###################################

osi3.2_prepost_30 <- inner_join(postOSI_3.2_30a, preOSI_3.2_6, by="project_id")
str(osi3.2_prepost_30)    

unique(osi3.2_prepost_30$project_id)
sum(is.na(osi3.2_prepost_30))

##############################################
##calculate differences in 5 mins medians
###########################################
 
osi3.2_prepost_30$OSI_diff <- osi3.2_prepost_30$postmedian - osi3.2_prepost_30$premedian
str(osi3.2_prepost_30)

##plot with id
ggplot(osi3.2_prepost_30, aes(x = project_id, y=OSI_diff, colour = project_id)) + 
            geom_point() +
             ggtitle("OSI difference post-pre physio (5 min epochs)") + # add a title
    xlab('Project id') + ylab('difference in OSI') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0.3, color = "red")
           

#### create new variable for above or below threshold

osi3.2_prepost_30$OSI_threshold <- ifelse(osi3.2_prepost_30$OSI_diff >= 0.3, "yes", "no")

str(osi3.2_prepost_30)

t.OSI <- table(osi3.2_prepost_30$OSI_threshold)

addmargins(t.OSI)
round(prop.table(t.OSI)*100, 2) #to give percentage

ggplot(osi3.2_prepost_30, aes(x = premedian, y=OSI_diff)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle("25-30 minutes post physiotherapy") + # add a title
    xlab('Median OSI 5-minutes pre-physiotherapy') + ylab('Difference in OSI') + # add axis names
         ylim(-6,15) +theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
           geom_hline(yintercept = 0.3, color = "red") 

 ####create new variable above, isq, below

str(osi3.2_prepost_30)

osi3.2_prepost_30$OSI_result <- ifelse(osi3.2_prepost_30$OSI_diff < 0, 'Improved',
                         ifelse(osi3.2_prepost_30$OSI_diff == 0, 'ISQ',
                         ifelse(osi3.2_prepost_30$OSI_diff > 0 & osi3.2_prepost_30$OSI_diff < 0.3, 'Worse', 'AE')))
str(osi3.2_prepost_30)    

 ggplot(osi3.2_prepost_30, aes(x = project_id, y=OSI_diff, colour=OSI_result)) + 
            geom_point(size=0.5) +
             ggtitle("25-30 minutes post physio") + # add a title
    xlab('Individual patients') + ylab('Difference in OSI') + # add axis names
      ylim(-6,15)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
              scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
                 geom_hline(yintercept = 0.3, color = "red")+
        geom_hline(yintercept = 0, color = "black")
        
result3 <- table(osi3.2_prepost_30$OSI_result)

addmargins(result3)
round(prop.table(result3)*100, 2) #to give percentage  

    plot30a <- ggplot(osi3.2_prepost_30, aes(x = premedian, y=OSI_diff, colour=OSI_result)) + 
            geom_point() +
             ggtitle("25-30 minutes post-physiotherapy") + # add a title
    ylab('Change in median OSI ') + xlab('Median OSI 5 minutes pre-physiotherapy') +
    ylim(-10,10)+
 scale_x_continuous(expand = c(0, 0), limits = c(0,20)) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
                                geom_hline(yintercept = 0.3, color = "red") +
            geom_hline(yintercept = 0, color = "black")   

#######################################################################################
##########################################
##analysis 4 5mins pre vs 60 mins
###########################################
#######################################################################################

str(preOSI_3.2_6)

#########################################
##subset post for 60 min post 
######################################

postOSI_3.2_60 <- subset(postOSI_3.2_1, label == "L")
str(postOSI_3.2_60)

###remove rows if by5 time not 00:60:00

postOSI_3.2_60a <- postOSI_3.2_60[postOSI_3.2_60$by5 == "1970-01-01 00:55:00",]

str(postOSI_3.2_60a)

################################
##join pre and post together
###################################

osi3.2_prepost_60 <- inner_join(postOSI_3.2_60a, preOSI_3.2_6, by="project_id")
str(osi3.2_prepost_60)    

unique(osi3.2_prepost_60$project_id)
sum(is.na(osi3.2_prepost_60))

##############################################
##calculate differences in 5 mins medians
###########################################
 
osi3.2_prepost_60$OSI_diff <- osi3.2_prepost_60$postmedian - osi3.2_prepost_60$premedian
str(osi3.2_prepost_60)

##plot with id
ggplot(osi3.2_prepost_60, aes(x = project_id, y=OSI_diff)) + 
            geom_point() +
             ggtitle("OSI difference post-pre physio (5 min epochs)") + # add a title
    xlab('Project id') + ylab('difference in OSI') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0.3, color = "red")         
#### create new variable for above or below threshold

osi3.2_prepost_60$OSI_threshold <- ifelse(osi3.2_prepost_60$OSI_diff >= 0.3, "yes", "no")

str(osi3.2_prepost_60)

t.OSI <- table(osi3.2_prepost_60$OSI_threshold)

addmargins(t.OSI)
round(prop.table(t.OSI)*100, 2) #to give percentage

 ggplot(osi3.2_prepost_60, aes(x = premedian, y=OSI_diff)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle("55-60 minutes post physiotherapy") + # add a title
    xlab('Median OSI 5-minutes pre-physiotherapy')  + ylab(NULL)+ # add axis names
        ylim(-6,15) + theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
           geom_hline(yintercept = 0.3, color = "red") 

 ####create new variable above, isq, below

str(osi3.2_prepost_60)

osi3.2_prepost_60$OSI_result <- ifelse(osi3.2_prepost_60$OSI_diff < 0, 'Improved',
                         ifelse(osi3.2_prepost_60$OSI_diff == 0, 'ISQ',
                         ifelse(osi3.2_prepost_60$OSI_diff > 0 & osi3.2_prepost_60$OSI_diff < 0.3, 'Worse', 'AE')))
str(osi3.2_prepost_60)    

ggplot(osi3.2_prepost_60, aes(x = project_id, y=OSI_diff, colour=OSI_result)) + 
            geom_point(size= 0.5) +
             ggtitle("55-60 minutes post physio") + # add a title
    xlab('Individual patients') + ylab(NULL) + # add axis names
    ylim(-6,15)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
             scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3")) +
                 geom_hline(yintercept = 0.3, color = "red") + 
        geom_hline(yintercept = 0, color = "black") 
      
result4 <- table(osi3.2_prepost_60$OSI_result)

addmargins(result4)
round(prop.table(result4)*100, 2) #to give percentage

plot60a <- ggplot(osi3.2_prepost_60, aes(x = premedian, y=OSI_diff, colour=OSI_result)) + 
            geom_point() +
             ggtitle("55-60 minutes post-physiotherapy") + # add a title
    ylab(NULL) + xlab('Median OSI 5 minutes pre-physiotherapy') +
   ylim(-10,10)+
 scale_x_continuous(expand = c(0, 0), limits = c(0,20)) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
                                geom_hline(yintercept = 0.3, color = "red") +
            geom_hline(yintercept = 0, color = "black")

###get subset of those unstable

osi_prepost_60a <- select(osi3.2_prepost_60, project_id, OSI_diff, OSI_result)

names(osi_prepost_60a)[names(osi_prepost_60a) == 'OSI_diff'] <- 'OSI_diff60'
names(osi_prepost_60a)[names(osi_prepost_60a) == 'OSI_result'] <- 'OSI_result60'

str(osi_prepost_60a)
########################
##combine plots
############################

require(gridExtra)

grid.arrange(plot5a, plot15a, plot30a, plot60a, ncol=2, nrow=2)

#grid.arrange(plota, plotb, plotc, plotd, ncol=2, nrow=2)

#####################################################################

osi_AE_3.2a <- full_join(osi_prepost_15a, osi_prepost_60a, by="project_id")
str(osi_AE_3.2a)

###create AE variable

osi_AE_3.2a$osi_AE <- ifelse(osi_AE_3.2a$OSI_result15 == "AE" | osi_AE_3.2a$OSI_result60 == "AE", 'Yes', 'No')

str(osi_AE_3.2a)

table(osi_AE_3.2a$osi_AE)

is.na(osi_AE_3.2a)

osi_AE_3.2 <- select(osi_AE_3.2a, project_id, osi_AE)
str(osi_AE_3.2)

###save as csv

write.csv(osi_AE_3.2, "~/files/datafiles/osi_AE_3.2.csv")

############################################################################################################
####session 3.3
###############################################################################################################

##########################
##load in osi files
###################################
##data set 1
OSI1_3.3 <- xap.read_table("osi1_3_3")
str(OSI1_3.3)

##data set 2

OSI2_3.3 <-xap.read_table("osi2_3_3")
str(OSI2_3.3)

###################################################
###################################################
# combine part 1 and part 2 osi files
####################################################
##################################################

#combine 1 & 2

OSI_3.3 <- rbind(OSI1_3.3, OSI2_3.3)

str(OSI_3.3)

unique(OSI_3.3$project_id)

summary(OSI_3.3)

#########################################################################
# to plot raw data on graph - calculate time difference from first recorded (baseline)
#########################################################################

 osi_3.3 <- OSI_3.3 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - pre_datetime_x,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(osi_3.3)

ggplot(osi_3.3, aes(x=diff_secs, y=osi, color = project_id)) + 
 geom_point(aes(color = project_id), size = 1) +
            ggtitle("OSI pre and post physio session 2.3") + # add a title
    xlab('Time') + ylab('OSI') + # add axis names
    xlim(0,7500) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position="none") +
             scale_color_viridis(discrete = TRUE, option = "D") +
                 geom_vline(xintercept = c(1800, 3600), color = "red")

##############################################################
###create pre and post data set
#############################################################
          
## pre physio
pre_osi_3.3 <- OSI_3.3 %>% group_by(project_id) %>%
filter(record_date_time_y > pre_datetime_x & record_date_time_y < start_datetime_x) %>% ungroup()
str(pre_osi_3.3)

summary(pre_osi_3.3)
           
## post physio            
             
post_osi_3.3 <-  OSI_3.3 %>% group_by(project_id) %>%
filter(record_date_time_y > datetime_x & record_date_time_y < end_datetime_x) %>% ungroup()
str(post_osi_3.3)

summary(post_osi_3.3)

#########################################################################
# to plot raw data on graph - calculate time difference from first recorded (baseline)
#########################################################################

###pre physio

pre_osi_3.3_2 <- pre_osi_3.3 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - pre_datetime_x,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(pre_osi_3.3_2)

ggplot(pre_osi_3.3_2, aes(x=diff_secs, y=osi, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            ggtitle("OSI pre physiotherapy session 2.2") + # add a title
    xlab('Time (secs)') + ylab('OSI') + # add axis names
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
             
###post physio

 post_osi_3.3_2 <- post_osi_3.3 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - datetime_x,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(post_osi_3.3_2)

ggplot(post_osi_3.3_2, aes(x=diff_secs, y=osi, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            ggtitle("OSI post physiotherapy session 2.2") + # add a title
    xlab('Time (secs)') + ylab('OSI') + # add axis names
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")             
             
########################################
# prepare data to calulate 5 min epochs
######################################

###pre physio, prepare consistant dates times

str(pre_osi_3.3)

pre_OSI_3.3_2 <- pre_osi_3.3 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - pre_datetime_x,
   diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(pre_OSI_3.3_2)

pre_OSI_3.3_test <- mutate(pre_OSI_3.3_2, osi_time = as.POSIXct(diff_secs, origin = "1970-01-01"))
str(pre_OSI_3.3_test)

####generate 5 min epochs and summaries

pre_OSI_3.3_5 <- pre_OSI_3.3_test %>% group_by(project_id, by5=cut(osi_time, "5 min")) %>%
  summarise(median=median(osi), across())
  
str(pre_OSI_3.3_5)
head(pre_OSI_3.3_5)

##remove repeated rows 'by 5'

pre_OSI_3.3_5a <- pre_OSI_3.3_5 %>% group_by(project_id, by5) %>% 
  filter(row_number()==1) %>%
  ungroup()

str(pre_OSI_3.3_5a)

###check how many values for each 

table(pre_OSI_3.3_5a$project_id)

##post physio prepare new times

post_OSI_3.3_2 <- post_osi_3.3 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - datetime_x,
   diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(post_OSI_3.3_2)

post_OSI_3.3_test <- mutate(post_OSI_3.3_2, osi_time = as.POSIXct(diff_secs, origin = "1970-01-01"))
str(post_OSI_3.3_test)

##create 5 min epochs

post_OSI_3.3_5 <- post_OSI_3.3_test %>% group_by(project_id, by5=cut(osi_time, "5 min")) %>%
  summarise(median=median(osi), across())
  
str(post_OSI_3.3_5)
head(post_OSI_3.3_5)

##remove repeated rows 'by 5'

post_OSI_3.3_5a <- post_OSI_3.3_5 %>% group_by(project_id, by5) %>% 
  filter(row_number()==1) %>%
  ungroup()

str(post_OSI_3.3_5a)

###check how many values for each 

table(post_OSI_3.3_5a$project_id)

#########################################################################
## draw graph of 5 min medians pre/post
#########################################################################

#need to change by into POSIXct from factor

pre_OSI_3.3_5a$by5 <- as.POSIXct(pre_OSI_3.3_5a$by5,format='%Y-%m-%d %H:%M:%S')

post_OSI_3.3_5a$by5 <- as.POSIXct(post_OSI_3.3_5a$by5,format='%Y-%m-%d %H:%M:%S')

### pre-physio

## plot median SpO2     
             
pre_plot <- ggplot(pre_OSI_3.3_5a, aes(x=diff_secs, y=median, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            geom_line() +
            ggtitle("Median OSI pre-physiotherapy") + # add a title
    xlab('Time (seconds)') + ylab('Median OSI') + # add axis names
      xlim(0,1800) + ylim(0,20) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
               scale_color_manual(values = c('steelblue1', 'steelblue4')) 
          
## plot median SpO2     
             
post_plot <- ggplot(post_OSI_3.3_5a, aes(x=diff_secs, y=median, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            geom_line() +
            ggtitle("Median OSI post-physiotherapy") + # add a title
    xlab('Time (seconds)') + ylab('Median OSI') + # add axis names
    xlim(0,3600) + ylim(0,20) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_manual(values = c('steelblue1', 'steelblue4'))          
                 
require(gridExtra)

grid.arrange(pre_plot, post_plot, ncol=2)

##########################################
###5 mins  pre and post add extra column
#########################################

str(pre_OSI_3.3_5a)
str(post_OSI_3.3_5a)

##select columns want

preOSI_3.3 <- select(pre_OSI_3.3_5a, project_id, by5, median)
postOSI_3.3 <- select(post_OSI_3.3_5a, project_id, by5, median)

##rename medians for clarity

names(preOSI_3.3)[names(preOSI_3.3) == 'median'] <- 'premedian'
names(postOSI_3.3)[names(postOSI_3.3) == 'median'] <- 'postmedian'

str(preOSI_3.3)
str(postOSI_3.3)

##add extra column 

preOSI_3.3_1 <- preOSI_3.3 %>%
group_by(project_id) %>%
  mutate(label1 = LETTERS[row_number()]) %>%
  ungroup()

postOSI_3.3_1 <- postOSI_3.3 %>%
group_by(project_id) %>%
  mutate(label = LETTERS[row_number()]) %>%
  ungroup()

str(preOSI_3.3_1)
str(postOSI_3.3_1)

##try to reverse preOSI letters

preOSI_3.3_2 <- preOSI_3.3_1 %>%
group_by(project_id) %>%
mutate(label = rev(label1)) %>%
ungroup()

str(preOSI_3.3_2)

###################################################################################################################
########################################
###analysis 1 5 min pre vs 5 min post
########################################
#####################################################################################################################

###################################################
##subset pre for just 5min immediately pre "A"
#################################################

preOSI_3.3_3 <- select(preOSI_3.3_2, project_id, by5, premedian, label)

preOSI_3.3_4 <- subset(preOSI_3.3_3, label == "A")
str(preOSI_3.3_4)

preOSI_3.3_5 <- select(preOSI_3.3_4, project_id, by5, premedian)
str(preOSI_3.3_5)

###remove row if by5 time not 00:25:00

preOSI_3.3_6 <- preOSI_3.3_5[preOSI_3.3_5$by5 == "1970-01-01 00:25:00",]

str(preOSI_3.3_6)

#########################################
##subset post for 5 min imm post A
######################################

postOSI_3.3_2 <- subset(postOSI_3.3_1, label == "A")
str(postOSI_3.3_2)

###remove rows if by5 time not 00:00:00

postOSI_3.3_3 <- postOSI_3.3_2[postOSI_3.3_2$by5 == "1970-01-01 00:00:00",]

str(postOSI_3.3_3)

################################
##join pre and post together
###################################

osi3.3_prepost_5 <- inner_join(postOSI_3.3_3, preOSI_3.3_6, by="project_id")
str(osi3.3_prepost_5)    

unique(osi3.3_prepost_5$project_id)
sum(is.na(osi3.3_prepost_5))

##############################################
##calculate differences in 5 mins medians
###########################################
 
osi3.3_prepost_5$OSI_diff <- osi3.3_prepost_5$postmedian - osi3.3_prepost_5$premedian
str(osi3.3_prepost_5)
##plot with id
ggplot(osi3.3_prepost_5, aes(x = project_id, y=OSI_diff)) + 
            geom_point() +
             ggtitle("OSI difference post-pre physio (5 min epochs)") + # add a title
    xlab('Project id') + ylab('difference in OSI') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0.3, color = "red")
           
#### create new variable for above or below threshold

osi3.3_prepost_5$OSI_threshold <- ifelse(osi3.3_prepost_5$OSI_diff >= 0.3, "yes", "no")

str(osi3.3_prepost_5)

t.OSI <- table(osi3.3_prepost_5$OSI_threshold)

addmargins(t.OSI)
round(prop.table(t.OSI)*100, 2) #to give percentage

ggplot(osi3.3_prepost_5, aes(x = premedian, y=OSI_diff)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle(" 0-5 mins post physiotherapy") + # add a title
    ylab('Difference in 5 minute medians of OSI') + xlab(NULL) +
    ylim(-6,15)+ # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
           geom_hline(yintercept = 0.3, color = "red") 

####create new variable above, isq, below

str(osi3.3_prepost_5)

osi3.3_prepost_5$OSI_result <- ifelse(osi3.3_prepost_5$OSI_diff < 0, 'Improved',
                         ifelse(osi3.3_prepost_5$OSI_diff == 0, 'ISQ',
                         ifelse(osi3.3_prepost_5$OSI_diff > 0 & osi3.3_prepost_5$OSI_diff < 0.3, 'Worse', 'AE')))
str(osi3.3_prepost_5)    

ggplot(osi3.3_prepost_5, aes(x = project_id, y=OSI_diff, colour=OSI_result)) + 
            geom_point(size=0.5) +
             ggtitle("0-5 minutes post physio") + # add a title
    xlab(NULL) + ylab('Difference in OSI') + # add axis names
      ylim(-6,15)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
            scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
                 geom_hline(yintercept = 0.3, color = "red")+
        geom_hline(yintercept = 0, color = "black")
              
result1 <- table(osi3.3_prepost_5$OSI_result)

addmargins(result1)
round(prop.table(result1)*100, 2) #to give percentage

plot5a <- ggplot(osi3.3_prepost_5, aes(x = premedian, y=OSI_diff, colour=OSI_result)) + 
            geom_point() +
             ggtitle(" 0-5 mins post physiotherapy") + # add a title
    ylab('OSI difference') + xlab(NULL) +
    ylim(-5,10) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
                                geom_hline(yintercept = 0.3, color = "red") +
            geom_hline(yintercept = 0, color = "black")

########################################################################################
######################################
##analysis 2 5 mins pre vs 15 mins post
######################################
######################################################################################

str(preOSI_3.3_6)

#########################################
##subset post for 15 min imm post C
######################################

postOSI_3.3_15 <- subset(postOSI_3.3_1, label == "C")
str(postOSI_3.3_15)

###remove rows if by5 time not 00:10:00

postOSI_3.3_15a <- postOSI_3.3_15[postOSI_3.3_15$by5 == "1970-01-01 00:10:00",]

str(postOSI_3.3_15a)

################################
##join pre and post together
###################################

osi3.3_prepost_15 <- inner_join(postOSI_3.3_15a, preOSI_3.3_6, by="project_id")
str(osi3.3_prepost_15)    

unique(osi3.3_prepost_15$project_id)
sum(is.na(osi3.3_prepost_15))

##############################################
##calculate differences in 5 mins medians
###########################################
 
osi3.3_prepost_15$OSI_diff <- osi3.3_prepost_15$postmedian - osi3.3_prepost_15$premedian
str(osi3.3_prepost_15)
##plot with id
ggplot(osi3.3_prepost_15, aes(x = project_id, y=OSI_diff, colour = project_id)) + 
            geom_point() +
             ggtitle("OSI difference post-pre physio (5 min epochs)") + # add a title
    xlab('Project id') + ylab('difference in OSI') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0.3, color = "red")
           
#### create new variable for above or below threshold

osi3.3_prepost_15$OSI_threshold <- ifelse(osi3.3_prepost_15$OSI_diff >= 0.3, "yes", "no")

str(osi3.3_prepost_15)

t.OSI <- table(osi3.3_prepost_15$OSI_threshold)

addmargins(t.OSI)
round(prop.table(t.OSI)*100, 2) #to give percentage

 ggplot(osi3.3_prepost_15, aes(x = premedian, y=OSI_diff)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle("10-15 minutes post physiotherapy") + # add a title
    ylim(-6,15) + # add axis names
    ylab(NULL) + xlab(NULL) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
           geom_hline(yintercept = 0.3, color = "red") 
        
####create new variable above, isq, below

str(osi3.3_prepost_15)

osi3.3_prepost_15$OSI_result <- ifelse(osi3.3_prepost_15$OSI_diff < 0, 'Improved',
                         ifelse(osi3.3_prepost_15$OSI_diff == 0, 'ISQ',
                         ifelse(osi3.3_prepost_15$OSI_diff > 0 & osi3.3_prepost_15$OSI_diff < 0.3, 'Worse', 'AE')))
str(osi3.3_prepost_15)    


 ggplot(osi3.3_prepost_15, aes(x = project_id, y=OSI_diff, colour=OSI_result)) + 
            geom_point(size = 0.5) +
             ggtitle("10-15 minutes post physio") + # add a title
    xlab(NULL) + ylab(NULL) + # add axis names
      ylim(-6,15)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
            scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
                 geom_hline(yintercept = 0.3, color = "red")+
        geom_hline(yintercept = 0, color = "black")
        
result2 <- table(osi3.3_prepost_15$OSI_result)
addmargins(result2)
round(prop.table(result2)*100, 2) #to give percentage   

plot15a <- ggplot(osi3.3_prepost_15, aes(x = premedian, y=OSI_diff, colour=OSI_result)) + 
            geom_point() +
             ggtitle(" 10-15 mins post physiotherapy") + # add a title
    ylab(NULL) + xlab(NULL) +
    ylim(-5,10) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
                                geom_hline(yintercept = 0.3, color = "red") +
            geom_hline(yintercept = 0, color = "black")

####################################################################################
#############################################
### analysis 3 5 min pre vs 30 mins post
###########################################
######################################################################################

str(preOSI_3.3_6)

#########################################
##subset post for 30 min post F
######################################

postOSI_3.3_30 <- subset(postOSI_3.3_1, label == "F")
str(postOSI_3.3_30)

###remove rows if by5 time not 00:25:00

postOSI_3.3_30a <- postOSI_3.3_30[postOSI_3.3_30$by5 == "1970-01-01 00:25:00",]

str(postOSI_3.3_30a)

################################
##join pre and post together
###################################

osi3.3_prepost_30 <- inner_join(postOSI_3.3_30a, preOSI_3.3_6, by="project_id")
str(osi3.3_prepost_30)    

unique(osi3.3_prepost_30$project_id)
sum(is.na(osi3.3_prepost_30))

##############################################
##calculate differences in 5 mins medians
###########################################
 
osi3.3_prepost_30$OSI_diff <- osi3.3_prepost_30$postmedian - osi3.3_prepost_30$premedian
str(osi3.3_prepost_30)
##plot with id
ggplot(osi3.3_prepost_30, aes(x = project_id, y=OSI_diff, colour = project_id)) + 
            geom_point() +
             ggtitle("OSI difference post-pre physio (5 min epochs)") + # add a title
    xlab('Project id') + ylab('difference in OSI') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0.3, color = "red")
           
#### create new variable for above or below threshold

osi3.3_prepost_30$OSI_threshold <- ifelse(osi3.3_prepost_30$OSI_diff >= 0.3, "yes", "no")

str(osi3.3_prepost_30)

t.OSI <- table(osi3.3_prepost_30$OSI_threshold)

addmargins(t.OSI)
round(prop.table(t.OSI)*100, 2) #to give percentage

ggplot(osi3.3_prepost_30, aes(x = premedian, y=OSI_diff)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle("25-30 minutes post physiotherapy") + # add a title
    xlab('Median OSI 5-minutes pre-physiotherapy') + ylab('Difference in OSI') + # add axis names
         ylim(-6,15) +theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
           geom_hline(yintercept = 0.3, color = "red") 

 ####create new variable above, isq, below

str(osi3.3_prepost_30)

osi3.3_prepost_30$OSI_result <- ifelse(osi3.3_prepost_30$OSI_diff < 0, 'Improved',
                         ifelse(osi3.3_prepost_30$OSI_diff == 0, 'ISQ',
                         ifelse(osi3.3_prepost_30$OSI_diff > 0 & osi3.3_prepost_30$OSI_diff < 0.3, 'Worse', 'AE')))
str(osi3.3_prepost_30)    

 ggplot(osi3.3_prepost_30, aes(x = project_id, y=OSI_diff, colour=OSI_result)) + 
            geom_point(size=0.5) +
             ggtitle("25-30 minutes post physio") + # add a title
    xlab('Individual patients') + ylab('Difference in OSI') + # add axis names
      ylim(-6,15)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
              scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
                 geom_hline(yintercept = 0.3, color = "red")+
        geom_hline(yintercept = 0, color = "black")
        
result3 <- table(osi3.3_prepost_30$OSI_result)

addmargins(result3)
round(prop.table(result3)*100, 2) #to give percentage  

    plot30a <- ggplot(osi3.3_prepost_30, aes(x = premedian, y=OSI_diff, colour=OSI_result)) + 
            geom_point() +
             ggtitle("25-30 mins post physiotherapy") + # add a title
    ylab('OSI difference') + xlab('Median OSI pre-physio') +
    ylim(-5,10) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
                                geom_hline(yintercept = 0.3, color = "red") +
            geom_hline(yintercept = 0, color = "black")   

#######################################################################################
##########################################
##analysis 4 5mins pre vs 60 mins
###########################################
#######################################################################################

str(preOSI_3.3_6)

#########################################
##subset post for 60 min post 
######################################

postOSI_3.3_60 <- subset(postOSI_3.3_1, label == "L")
str(postOSI_3.3_60)

###remove rows if by5 time not 00:60:00

postOSI_3.3_60a <- postOSI_3.3_60[postOSI_3.3_60$by5 == "1970-01-01 00:55:00",]

str(postOSI_3.3_60a)

################################
##join pre and post together
###################################

osi3.3_prepost_60 <- inner_join(postOSI_3.3_60a, preOSI_3.3_6, by="project_id")
str(osi3.3_prepost_60)    

unique(osi3.3_prepost_60$project_id)
sum(is.na(osi3.3_prepost_60))

##############################################
##calculate differences in 5 mins medians
###########################################
 
osi3.3_prepost_60$OSI_diff <- osi3.3_prepost_60$postmedian - osi3.3_prepost_60$premedian
str(osi3.3_prepost_60)

##plot with id
ggplot(osi3.3_prepost_60, aes(x = project_id, y=OSI_diff)) + 
            geom_point() +
             ggtitle("OSI difference post-pre physio (5 min epochs)") + # add a title
    xlab('Project id') + ylab('difference in OSI') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0.3, color = "red")
           
#### create new variable for above or below threshold

osi3.3_prepost_60$OSI_threshold <- ifelse(osi3.3_prepost_60$OSI_diff >= 0.3, "yes", "no")

str(osi3.3_prepost_60)

t.OSI <- table(osi3.3_prepost_60$OSI_threshold)

addmargins(t.OSI)
round(prop.table(t.OSI)*100, 2) #to give percentage

 ggplot(osi3.3_prepost_60, aes(x = premedian, y=OSI_diff)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle("55-60 minutes post physiotherapy") + # add a title
    xlab('Median OSI 5-minutes pre-physiotherapy')  + ylab(NULL)+ # add axis names
        ylim(-6,15) + theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
           geom_hline(yintercept = 0.3, color = "red") 

 ####create new variable above, isq, below

str(osi3.3_prepost_60)

osi3.3_prepost_60$OSI_result <- ifelse(osi3.3_prepost_60$OSI_diff < 0, 'Improved',
                         ifelse(osi3.3_prepost_60$OSI_diff == 0, 'ISQ',
                         ifelse(osi3.3_prepost_60$OSI_diff > 0 & osi3.3_prepost_60$OSI_diff < 0.3, 'Worse', 'AE')))
str(osi3.3_prepost_60)    

ggplot(osi3.3_prepost_60, aes(x = project_id, y=OSI_diff, colour=OSI_result)) + 
            geom_point(size= 0.5) +
             ggtitle("55-60 minutes post physio") + # add a title
    xlab('Individual patients') + ylab(NULL) + # add axis names
    ylim(-6,15)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
             scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3")) +
                 geom_hline(yintercept = 0.3, color = "red") + 
        geom_hline(yintercept = 0, color = "black") 
      
result4 <- table(osi3.3_prepost_60$OSI_result)
addmargins(result4)
round(prop.table(result4)*100, 2) #to give percentage

plot60a <- ggplot(osi3.3_prepost_60, aes(x = premedian, y=OSI_diff, colour=OSI_result)) + 
            geom_point() +
             ggtitle("55-60 mins post physiotherapy") + # add a title
    ylab(NULL) + xlab('Median OSI pre-physio') +
    ylim(-5,10) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
                                geom_hline(yintercept = 0.3, color = "red") +
            geom_hline(yintercept = 0, color = "black")

########################
##combine plots
############################

require(gridExtra)

grid.arrange(plot5a, plot15a, plot30a, plot60a, ncol=2, nrow=2)














#################################################Script 13 – OSI day 4 exploration###################################################################


##########################
##load in osi files
###################################

##data set 1

osi1_4.1 <- xap.read_table("osi1_4_1")

str(osi1_4.1)

##data set 2

osi2_4.1 <-xap.read_table("osi2_4_1")
str(osi2_4.1)

###################################################
###################################################
# combine part 1 and part 2 osi files
####################################################
##################################################

#combine 1 & 2

OSI_4.1 <- rbind(osi1_4.1, osi2_4.1)

str(OSI_4.1)

unique(OSI_4.1$project_id)

summary(OSI_4.1)

######################################################################################
# to plot raw data on grpah - calculate time difference from first recorded (baseline)
#######################################################################################

 osi_4.1 <- OSI_4.1 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - pre_datetime_x,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(osi_4.1)

ggplot(osi_4.1, aes(x=diff_secs, y=osi, color = project_id)) + 
 geom_point(aes(color = project_id), size = 1) +
            ggtitle("OSI pre and post physio session 4.1") + # add a title
    xlab('Time') + ylab('OSI') + # add axis names
    xlim(0,7500) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position="none") +
             scale_color_viridis(discrete = TRUE, option = "D") +
                geom_vline(xintercept = c(1800, 3600), color = "red")

##############################################################
###create pre and post data set
#############################################################
          
## pre physio
pre_osi_4.1 <- OSI_4.1 %>% group_by(project_id) %>%
filter(record_date_time_y > pre_datetime_x & record_date_time_y < start_datetime_x) %>% ungroup()
str(pre_osi_4.1)

summary(pre_osi_4.1)
           
## post physio            
             
post_osi_4.1 <-  OSI_4.1 %>% group_by(project_id) %>%
filter(record_date_time_y > datetime_x & record_date_time_y < end_datetime_x) %>% ungroup()
str(post_osi_4.1)

summary(post_osi_4.1)
#############################################################################
# to plot raw data on grpah - calculate time difference from first recorded (baseline)
#############################################################################

###pre physio

pre_osi_4.1_2 <- pre_osi_4.1 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - pre_datetime_x,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(pre_osi_4.1_2)

ggplot(pre_osi_4.1_2, aes(x=diff_secs, y=osi, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            ggtitle("OSI pre physiotherapy session 2.1") + # add a title
    xlab('Time (secs)') + ylab('OSI') + # add axis names
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
             
###post physio

 post_osi_4.1_2 <- post_osi_4.1 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - datetime_x,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(post_osi_4.1_2)

ggplot(post_osi_4.1_2, aes(x=diff_secs, y=osi, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            ggtitle("OSI post physiotherapy session 2.1") + # add a title
    xlab('Time (secs)') + ylab('OSI') + # add axis names
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")             
             
########################################
# prepare data to calulate 5 min epochs
######################################

###pre physio, prepare consistant dates times

str(pre_osi_4.1)

pre_OSI_4.1_2 <- pre_osi_4.1 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - pre_datetime_x,
   diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(pre_OSI_4.1_2)

pre_OSI_4.1_test <- mutate(pre_OSI_4.1_2, osi_time = as.POSIXct(diff_secs, origin = "1970-01-01"))
str(pre_OSI_4.1_test)

####generate 5 min epochs and summaries

pre_OSI_4.1_5 <- pre_OSI_4.1_test %>% group_by(project_id, by5=cut(osi_time, "5 min")) %>%
  summarise(median=median(osi), across())
  
str(pre_OSI_4.1_5)
head(pre_OSI_4.1_5)

##remove repeated rows 'by 5'

pre_OSI_4.1_5a <- pre_OSI_4.1_5 %>% group_by(project_id, by5) %>% 
  filter(row_number()==1) %>%
  ungroup()

str(pre_OSI_4.1_5a)

###check how many values for each 

table(pre_OSI_4.1_5a$project_id)

##post physio prepare new times

post_OSI_4.1_2 <- post_osi_4.1 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - datetime_x,
   diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(post_OSI_4.1_2)

post_OSI_4.1_test <- mutate(post_OSI_4.1_2, osi_time = as.POSIXct(diff_secs, origin = "1970-01-01"))
str(post_OSI_4.1_test)

##create 5 min epochs

post_OSI_4.1_5 <- post_OSI_4.1_test %>% group_by(project_id, by5=cut(osi_time, "5 min")) %>%
  summarise(median=median(osi), across())
  
str(post_OSI_4.1_5)
head(post_OSI_4.1_5)

##remove repeated rows 'by 5'

post_OSI_4.1_5a <- post_OSI_4.1_5 %>% group_by(project_id, by5) %>% 
  filter(row_number()==1) %>%
  ungroup()

str(post_OSI_4.1_5a)

###check how many values for each 

table(post_OSI_4.1_5a$project_id)

#########################################################################
## draw graph of 5 min medians pre/post
#########################################################################

#need to change by into POSIXct from factor

pre_OSI_4.1_5a$by5 <- as.POSIXct(pre_OSI_4.1_5a$by5,format='%Y-%m-%d %H:%M:%S')

post_OSI_4.1_5a$by5 <- as.POSIXct(post_OSI_4.1_5a$by5,format='%Y-%m-%d %H:%M:%S')

### pre-physio

## plot median SpO2     
             
pre_plot <- ggplot(pre_OSI_4.1_5a, aes(x=diff_secs, y=median, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            geom_line() +
            ggtitle("OSI pre-physio (5 min epochs)") + # add a title
    xlab('Time (seconds)') + ylab('median OSI') + # add axis names
      xlim(0,1800) + ylim(0,20) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
          
## plot median SpO2     
             
post_plot <- ggplot(post_OSI_4.1_5a, aes(x=diff_secs, y=median, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            geom_line() +
            ggtitle("OSI post-physio (5 min epochs)") + # add a title
    xlab('Time (seconds)') + ylab('median OSI') + # add axis names
    xlim(0,3600) + ylim(0,20) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
          
require(gridExtra)

grid.arrange(pre_plot, post_plot, ncol=2)

##########################################
###5 mins  pre and post add extra column
#########################################

str(pre_OSI_4.1_5a)
str(post_OSI_4.1_5a)

##select columns want

preOSI_4.1 <- select(pre_OSI_4.1_5a, project_id, by5, median)
postOSI_4.1 <- select(post_OSI_4.1_5a, project_id, by5, median)

##rename medians for clarity

names(preOSI_4.1)[names(preOSI_4.1) == 'median'] <- 'premedian'
names(postOSI_4.1)[names(postOSI_4.1) == 'median'] <- 'postmedian'

str(preOSI_4.1)
str(postOSI_4.1)

##add extra column 

preOSI_4.1_1 <- preOSI_4.1 %>%
group_by(project_id) %>%
  mutate(label1 = LETTERS[row_number()]) %>%
  ungroup()

postOSI_4.1_1 <- postOSI_4.1 %>%
group_by(project_id) %>%
  mutate(label = LETTERS[row_number()]) %>%
  ungroup()

str(preOSI_4.1_1)
str(postOSI_4.1_1)
##try to reverse preOSI letters

preOSI_4.1_2 <- preOSI_4.1_1 %>%
group_by(project_id) %>%
mutate(label = rev(label1)) %>%
ungroup()

str(preOSI_4.1_2)

###################################################################################################################
########################################
###analysis 1 5 min pre vs 5 min post
########################################
#####################################################################################################################

###################################################
##subset pre for just 5min immediately pre "A"
#################################################

preOSI_4.1_3 <- select(preOSI_4.1_2, project_id, by5, premedian, label)

preOSI_4.1_4 <- subset(preOSI_4.1_3, label == "A")
str(preOSI_4.1_4)

preOSI_4.1_5 <- select(preOSI_4.1_4, project_id, by5, premedian)
str(preOSI_4.1_5)

###remove row if by5 time not 00:25:00

preOSI_4.1_6 <- preOSI_4.1_5[preOSI_4.1_5$by5 == "1970-01-01 00:25:00",]

str(preOSI_4.1_6)

#########################################
##subset post for 5 min imm post A
######################################

postOSI_4.1_2 <- subset(postOSI_4.1_1, label == "A")
str(postOSI_4.1_2)

###remove rows if by5 time not 00:00:00

postOSI_4.1_3 <- postOSI_4.1_2[postOSI_4.1_2$by5 == "1970-01-01 00:00:00",]

str(postOSI_4.1_3)

################################
##join pre and post together
###################################

osi4.1_prepost_5 <- inner_join(postOSI_4.1_3, preOSI_4.1_6, by="project_id")
str(osi4.1_prepost_5)    

unique(osi4.1_prepost_5$project_id)
sum(is.na(osi4.1_prepost_5))

##############################################
##calculate differences in 5 mins medians
###########################################
 
osi4.1_prepost_5$OSI_diff <- osi4.1_prepost_5$postmedian - osi4.1_prepost_5$premedian
str(osi4.1_prepost_5)

##plot with id
ggplot(osi4.1_prepost_5, aes(x = project_id, y=OSI_diff)) + 
            geom_point() +
             ggtitle("OSI difference post-pre physio (5 min epochs)") + # add a title
    xlab('Project id') + ylab('difference in OSI') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0.3, color = "red")
           
#### create new variable for above or below threshold

osi4.1_prepost_5$OSI_threshold <- ifelse(osi4.1_prepost_5$OSI_diff >= 0.3, "yes", "no")

str(osi4.1_prepost_5)

t.OSI <- table(osi4.1_prepost_5$OSI_threshold)

addmargins(t.OSI)
round(prop.table(t.OSI)*100, 2) #to give percentage

ggplot(osi4.1_prepost_5, aes(x = premedian, y=OSI_diff)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle(" 0-5 mins post physiotherapy") + # add a title
    ylab('Difference in 5 minute medians of OSI') + xlab(NULL) +
    ylim(-6,15)+ # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
           geom_hline(yintercept = 0.3, color = "red") 

####create new variable above, isq, below

str(osi4.1_prepost_5)

osi4.1_prepost_5$OSI_result <- ifelse(osi4.1_prepost_5$OSI_diff < 0, 'Improved',
                         ifelse(osi4.1_prepost_5$OSI_diff == 0, 'ISQ',
                         ifelse(osi4.1_prepost_5$OSI_diff > 0 & osi4.1_prepost_5$OSI_diff < 0.3, 'Worse', 'AE')))
str(osi4.1_prepost_5)    

ggplot(osi4.1_prepost_5, aes(x = project_id, y=OSI_diff, colour=OSI_result)) + 
            geom_point(size=0.5) +
             ggtitle("0-5 minutes post physio") + # add a title
    xlab(NULL) + ylab('Difference in OSI') + # add axis names
      ylim(-6,15)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
            scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
                 geom_hline(yintercept = 0.3, color = "red")+
        geom_hline(yintercept = 0, color = "black")
          
result1 <- table(osi4.1_prepost_5$OSI_result)

addmargins(result1)
round(prop.table(result1)*100, 2) #to give percentage

plot5a <- ggplot(osi4.1_prepost_5, aes(x = premedian, y=OSI_diff, colour=OSI_result)) + 
            geom_point() +
             ggtitle("0-5 minutes post-physiotherapy") + # add a title
    ylab('Change in median OSI') + xlab(NULL) +
    ylim(-7,10) +
    scale_x_continuous(expand = c(0, 0), limits = c(0,20)) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
                                geom_hline(yintercept = 0.3, color = "red") +
            geom_hline(yintercept = 0, color = "black")

###get subset of those unstable

osi_prepost_5a <- select(osi4.1_prepost_5, project_id, OSI_diff, OSI_result)

names(osi_prepost_5a)[names(osi_prepost_5a) == 'OSI_diff'] <- 'OSI_diff5'
names(osi_prepost_5a)[names(osi_prepost_5a) == 'OSI_result'] <- 'OSI_result5'

str(osi_prepost_5a)       
########################################################################################
######################################
##analysis 2 5 mins pre vs 15 mins post
######################################
######################################################################################

str(preOSI_4.1_6)

#########################################
##subset post for 15 min imm post C
######################################

postOSI_4.1_15 <- subset(postOSI_4.1_1, label == "C")
str(postOSI_4.1_15)

###remove rows if by5 time not 00:10:00

postOSI_4.1_15a <- postOSI_4.1_15[postOSI_4.1_15$by5 == "1970-01-01 00:10:00",]

str(postOSI_4.1_15a)

################################
##join pre and post together
###################################

osi4.1_prepost_15 <- inner_join(postOSI_4.1_15a, preOSI_4.1_6, by="project_id")
str(osi4.1_prepost_15)    

unique(osi4.1_prepost_15$project_id)
sum(is.na(osi4.1_prepost_15))

##############################################
##calculate differences in 5 mins medians
###########################################
 
osi4.1_prepost_15$OSI_diff <- osi4.1_prepost_15$postmedian - osi4.1_prepost_15$premedian
str(osi4.1_prepost_15)

##plot with id
ggplot(osi4.1_prepost_15, aes(x = project_id, y=OSI_diff, colour = project_id)) + 
            geom_point() +
             ggtitle("OSI difference post-pre physio (5 min epochs)") + # add a title
    xlab('Project id') + ylab('difference in OSI') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0.3, color = "red")
           
#### create new variable for above or below threshold

osi4.1_prepost_15$OSI_threshold <- ifelse(osi4.1_prepost_15$OSI_diff >= 0.3, "yes", "no")

str(osi4.1_prepost_15)

t.OSI <- table(osi4.1_prepost_15$OSI_threshold)

addmargins(t.OSI)
round(prop.table(t.OSI)*100, 2) #to give percentage

 ggplot(osi4.1_prepost_15, aes(x = premedian, y=OSI_diff)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle("10-15 minutes post physiotherapy") + # add a title
    ylim(-6,15) + # add axis names
    ylab(NULL) + xlab(NULL) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
           geom_hline(yintercept = 0.3, color = "red") 
        
####create new variable above, isq, below

str(osi4.1_prepost_15)

osi4.1_prepost_15$OSI_result <- ifelse(osi4.1_prepost_15$OSI_diff < 0, 'Improved',
                         ifelse(osi4.1_prepost_15$OSI_diff == 0, 'ISQ',
                         ifelse(osi4.1_prepost_15$OSI_diff > 0 & osi4.1_prepost_15$OSI_diff < 0.3, 'Worse', 'AE')))
str(osi4.1_prepost_15)    

 ggplot(osi4.1_prepost_15, aes(x = project_id, y=OSI_diff, colour=OSI_result)) + 
            geom_point(size = 0.5) +
             ggtitle("10-15 minutes post physio") + # add a title
    xlab(NULL) + ylab(NULL) + # add axis names
      ylim(-6,15)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
            scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
                 geom_hline(yintercept = 0.3, color = "red")+
        geom_hline(yintercept = 0, color = "black")
        
result2 <- table(osi4.1_prepost_15$OSI_result)

addmargins(result2)
round(prop.table(result2)*100, 2) #to give percentage   

plot15a <- ggplot(osi4.1_prepost_15, aes(x = premedian, y=OSI_diff, colour=OSI_result)) + 
            geom_point() +
             ggtitle("10-15 minutes post-physiotherapy") + # add a title
    ylab(NULL) + xlab(NULL) +
    ylim(-7,10) +
    scale_x_continuous(expand = c(0, 0), limits = c(0,20)) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
                                geom_hline(yintercept = 0.3, color = "red") +
            geom_hline(yintercept = 0, color = "black")

 ###get subset of those unstable

osi_prepost_15a <- select(osi4.1_prepost_15, project_id, OSI_diff, OSI_result)

names(osi_prepost_15a)[names(osi_prepost_15a) == 'OSI_diff'] <- 'OSI_diff15'
names(osi_prepost_15a)[names(osi_prepost_15a) == 'OSI_result'] <- 'OSI_result15'

str(osi_prepost_15a)    
####################################################################################
#############################################
### analysis 3 5 min pre vs 30 mins post
###########################################
######################################################################################

str(preOSI_4.1_6)

#########################################
##subset post for 30 min post F
######################################

postOSI_4.1_30 <- subset(postOSI_4.1_1, label == "F")
str(postOSI_4.1_30)

###remove rows if by5 time not 00:25:00

postOSI_4.1_30a <- postOSI_4.1_30[postOSI_4.1_30$by5 == "1970-01-01 00:25:00",]

str(postOSI_4.1_30a)

################################
##join pre and post together
###################################

osi4.1_prepost_30 <- inner_join(postOSI_4.1_30a, preOSI_4.1_6, by="project_id")
str(osi4.1_prepost_30)    

unique(osi4.1_prepost_30$project_id)
sum(is.na(osi4.1_prepost_30))

##############################################
##calculate differences in 5 mins medians
###########################################
 
osi4.1_prepost_30$OSI_diff <- osi4.1_prepost_30$postmedian - osi4.1_prepost_30$premedian
str(osi4.1_prepost_30)

##plot with id
ggplot(osi4.1_prepost_30, aes(x = project_id, y=OSI_diff, colour = project_id)) + 
            geom_point() +
             ggtitle("OSI difference post-pre physio (5 min epochs)") + # add a title
    xlab('Project id') + ylab('difference in OSI') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0.3, color = "red")
           
#### create new variable for above or below threshold

osi4.1_prepost_30$OSI_threshold <- ifelse(osi4.1_prepost_30$OSI_diff >= 0.3, "yes", "no")

str(osi4.1_prepost_30)

t.OSI <- table(osi4.1_prepost_30$OSI_threshold)

addmargins(t.OSI)
round(prop.table(t.OSI)*100, 2) #to give percentage

ggplot(osi4.1_prepost_30, aes(x = premedian, y=OSI_diff)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle("25-30 minutes post physiotherapy") + # add a title
    xlab('Median OSI 5-minutes pre-physiotherapy') + ylab('Difference in OSI') + # add axis names
         ylim(-6,15) +theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
           geom_hline(yintercept = 0.3, color = "red") 

 ####create new variable above, isq, below

str(osi4.1_prepost_30)

osi4.1_prepost_30$OSI_result <- ifelse(osi4.1_prepost_30$OSI_diff < 0, 'Improved',
                         ifelse(osi4.1_prepost_30$OSI_diff == 0, 'ISQ',
                         ifelse(osi4.1_prepost_30$OSI_diff > 0 & osi4.1_prepost_30$OSI_diff < 0.3, 'Worse', 'AE')))
str(osi4.1_prepost_30)    

 ggplot(osi4.1_prepost_30, aes(x = project_id, y=OSI_diff, colour=OSI_result)) + 
            geom_point(size=0.5) +
             ggtitle("25-30 minutes post physio") + # add a title
    xlab('Individual patients') + ylab('Difference in OSI') + # add axis names
      ylim(-6,15)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
              scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
                 geom_hline(yintercept = 0.3, color = "red")+
        geom_hline(yintercept = 0, color = "black")
        
result3 <- table(osi4.1_prepost_30$OSI_result)

addmargins(result3)
round(prop.table(result3)*100, 2) #to give percentage  

    plot30a <- ggplot(osi4.1_prepost_30, aes(x = premedian, y=OSI_diff, colour=OSI_result)) + 
            geom_point() +
             ggtitle("25-30 minutes post-physiotherapy") + # add a title
    ylab('Change in median OSI') + xlab('Median OSI 5 minutes pre-physiotherapy') +
    ylim(-7,10) +
    scale_x_continuous(expand = c(0, 0), limits = c(0,20)) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
                                geom_hline(yintercept = 0.3, color = "red") +
            geom_hline(yintercept = 0, color = "black")   

###get subset of those unstable

osi_prepost_30a <- select(osi4.1_prepost_30, project_id, OSI_diff, OSI_result)

names(osi_prepost_30a)[names(osi_prepost_30a) == 'OSI_diff'] <- 'OSI_diff30'
names(osi_prepost_30a)[names(osi_prepost_30a) == 'OSI_result'] <- 'OSI_result30'

str(osi_prepost_30a)               

#######################################################################################
##########################################
##analysis 4 5mins pre vs 60 mins
###########################################
#######################################################################################

str(preOSI_4.1_6)

#########################################
##subset post for 60 min post 
######################################

postOSI_4.1_60 <- subset(postOSI_4.1_1, label == "L")
str(postOSI_4.1_60)

###remove rows if by5 time not 00:60:00

postOSI_4.1_60a <- postOSI_4.1_60[postOSI_4.1_60$by5 == "1970-01-01 00:55:00",]

str(postOSI_4.1_60a)

################################
##join pre and post together
###################################

osi4.1_prepost_60 <- inner_join(postOSI_4.1_60a, preOSI_4.1_6, by="project_id")
str(osi4.1_prepost_60)    

unique(osi4.1_prepost_60$project_id)
sum(is.na(osi4.1_prepost_60))

##############################################
##calculate differences in 5 mins medians
###########################################
 
osi4.1_prepost_60$OSI_diff <- osi4.1_prepost_60$postmedian - osi4.1_prepost_60$premedian
str(osi4.1_prepost_60)

##plot with id
ggplot(osi4.1_prepost_60, aes(x = project_id, y=OSI_diff)) + 
            geom_point() +
             ggtitle("OSI difference post-pre physio (5 min epochs)") + # add a title
    xlab('Project id') + ylab('difference in OSI') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0.3, color = "red")
           
#### create new variable for above or below threshold

osi4.1_prepost_60$OSI_threshold <- ifelse(osi4.1_prepost_60$OSI_diff >= 0.3, "yes", "no")

str(osi4.1_prepost_60)

t.OSI <- table(osi4.1_prepost_60$OSI_threshold)

addmargins(t.OSI)
round(prop.table(t.OSI)*100, 2) #to give percentage

 ggplot(osi4.1_prepost_60, aes(x = premedian, y=OSI_diff)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle("55-60 minutes post physiotherapy") + # add a title
    xlab('Median OSI 5-minutes pre-physiotherapy')  + ylab(NULL)+ # add axis names
        ylim(-6,15) + theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
           geom_hline(yintercept = 0.3, color = "red") 

 ####create new variable above, isq, below

str(osi4.1_prepost_60)

osi4.1_prepost_60$OSI_result <- ifelse(osi4.1_prepost_60$OSI_diff < 0, 'Improved',
                         ifelse(osi4.1_prepost_60$OSI_diff == 0, 'ISQ',
                         ifelse(osi4.1_prepost_60$OSI_diff > 0 & osi4.1_prepost_60$OSI_diff < 0.3, 'Worse', 'AE')))
str(osi4.1_prepost_60)    

ggplot(osi4.1_prepost_60, aes(x = project_id, y=OSI_diff, colour=OSI_result)) + 
            geom_point(size= 0.5) +
             ggtitle("55-60 minutes post physio") + # add a title
    xlab('Individual patients') + ylab(NULL) + # add axis names
    ylim(-6,15)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
             scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3")) +
                 geom_hline(yintercept = 0.3, color = "red") + 
        geom_hline(yintercept = 0, color = "black") 
      
result4 <- table(osi4.1_prepost_60$OSI_result)

addmargins(result4)
round(prop.table(result4)*100, 2) #to give percentage

plot60a <- ggplot(osi4.1_prepost_60, aes(x = premedian, y=OSI_diff, colour=OSI_result)) + 
            geom_point() +
             ggtitle("55-60 minutes post-physiotherapy") + # add a title
    ylab(NULL) + xlab('Median OSI 5 minutes pre-physiotherapy') +
    ylim(-7,10) +
    scale_x_continuous(expand = c(0, 0), limits = c(0,20)) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
                                geom_hline(yintercept = 0.3, color = "red") +
            geom_hline(yintercept = 0, color = "black")

###get subset of those unstable

osi_prepost_60a <- select(osi4.1_prepost_60, project_id, OSI_diff, OSI_result)

names(osi_prepost_60a)[names(osi_prepost_60a) == 'OSI_diff'] <- 'OSI_diff60'
names(osi_prepost_60a)[names(osi_prepost_60a) == 'OSI_result'] <- 'OSI_result60'

str(osi_prepost_60a)
########################
##combine plots
############################

require(gridExtra)

grid.arrange(plot5a, plot15a, plot30a, plot60a, ncol=2, nrow=2)

#grid.arrange(plota, plotb, plotc, plotd, ncol=2, nrow=2)

########################################
###join subsets to identify those with AE
#########################################

osi_AE_4.1a <- full_join(osi_prepost_5a, osi_prepost_15a, by="project_id")
str(osi_AE_4.1a)

osi_AE_4.1b <- full_join(osi_AE_4.1a, osi_prepost_30a, by="project_id")
str(osi_AE_4.1b)

osi_AE_4.1c <- full_join(osi_AE_4.1b, osi_prepost_60a, by="project_id")
str(osi_AE_4.1c)

###create AE variable

osi_AE_4.1c$osi_AE <- ifelse(osi_AE_4.1c$OSI_result5 == "AE" | osi_AE_4.1c$OSI_result15 == "AE" | osi_AE_4.1c$OSI_result30 == "AE" | osi_AE_4.1c$OSI_result60 == "AE", 'Yes', 'No')

str(osi_AE_4.1c)

table(osi_AE_4.1c$osi_AE)

is.na(osi_AE_4.1c)

osi_AE_4.1 <- select(osi_AE_4.1c, project_id, osi_AE)
str(osi_AE_4.1)

####change NA to no

osi_AE_4.1[is.na(osi_AE_4.1)] = 'No'

table(osi_AE_4.1$osi_AE)

###save as csv

write.csv(osi_AE_4.1, "~/files/datafiles/osi_AE_4.1.csv")

#####################################################################

##################################################
###repeated measure anova, quantify change
##################################################

#####get individual datasets
##5 min
str(osi4.1_prepost_5)  

osi4.1_5 <- select(osi4.1_prepost_5, project_id, postmedian, premedian)
str(osi4.1_5)

names(osi4.1_5)[names(osi4.1_5) == "postmedian"] <- "postmedian5"
str(osi4.1_5)

###15mins

str(osi4.1_prepost_15)

osi4.1_15 <- select(osi4.1_prepost_15, project_id, postmedian)
str(osi4.1_15)

names(osi4.1_15)[names(osi4.1_15) == "postmedian"] <- "postmedian15"
str(osi4.1_15)

##30mins

osi4.1_30 <- select(osi4.1_prepost_30, project_id, postmedian)
str(osi4.1_30)

names(osi4.1_30)[names(osi4.1_30) == "postmedian"] <- "postmedian30"
str(osi4.1_30)

##60mins
osi4.1_60 <- select(osi4.1_prepost_60, project_id, postmedian)
str(osi4.1_60)

names(osi4.1_60)[names(osi4.1_60) == "postmedian"] <- "postmedian60"
str(osi4.1_60)

####################join together

osi4.1_change <- inner_join(osi4.1_5, osi4.1_15, by="project_id")
str(osi4.1_change)

osi4.1_change1 <- inner_join(osi4.1_change, osi4.1_30, by="project_id")
str(osi4.1_change1)

osi4.1_change2 <- inner_join(osi4.1_change1, osi4.1_60, by="project_id")
str(osi4.1_change2)
###change order of columns
osi4.1_change3 <- osi4.1_change2[, c(1, 3, 2, 4, 5, 6)]
str(osi4.1_change3)

################change to long format

osi4.1_change4 <- tidyr::gather(osi4.1_change3, key=time, value=medianosi, premedian:postmedian60) %>% 
                    arrange(project_id)
                    
head(osi4.1_change4)
str(osi4.1_change4)

test <- osi4.1_change4 %>% friedman_test(medianosi ~ time |project_id)
test

test1 <- osi4.1_change4 %>% friedman_effsize(medianosi ~ time |project_id)
test1

test3 <- osi4.1_change4 %>% wilcox_test(medianosi ~ time, paired = TRUE, p.adjust.method = "bonferroni")
test3

############################################################################################################
####session 4.2
###############################################################################################################

##########################
##load in osi files
###################################

##data set 1

osi1_4.2 <- xap.read_table("osi1_4_2")

str(osi1_4.2)
unique(osi1_4.2$project_id)

##data set 2

osi2_4.2 <-xap.read_table("osi2_4_2")
str(osi2_4.2)

unique(osi2_4.2$project_id)

###################################################
###################################################
# combine part 1 and part 2 osi files
####################################################
##################################################

#combine 1 & 2

OSI_4.2 <- rbind(osi1_4.2, osi2_4.2)

str(OSI_4.2)

unique(OSI_4.2$project_id)

summary(OSI_4.2)

#########################################################################
# to plot raw data on graph - calculate time difference from first recorded (baseline)
#########################################################################

 osi_4.2 <- OSI_4.2 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - pre_datetime_x,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(osi_4.2)

ggplot(osi_4.2, aes(x=diff_secs, y=osi, color = project_id)) + 
 geom_point(aes(color = project_id), size = 1) +
            ggtitle("OSI pre and post physio session 4.2") + # add a title
    xlab('Time') + ylab('OSI') + # add axis names
    xlim(0,7500) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position="none") +
             scale_color_viridis(discrete = TRUE, option = "D") +
                 geom_vline(xintercept = c(1800, 3600), color = "red")

##############################################################
###create pre and post data set
#############################################################
          
## pre physio
pre_osi_4.2 <- OSI_4.2 %>% group_by(project_id) %>%
filter(record_date_time_y > pre_datetime_x & record_date_time_y < start_datetime_x) %>% ungroup()
str(pre_osi_4.2)

summary(pre_osi_4.2)
           
## post physio            
             
post_osi_4.2 <-  OSI_4.2 %>% group_by(project_id) %>%
filter(record_date_time_y > datetime_x & record_date_time_y < end_datetime_x) %>% ungroup()
str(post_osi_4.2)

summary(post_osi_4.2)
#########################################################################
# to plot raw data on graph - calculate time difference from first recorded (baseline)
#########################################################################

###pre physio
pre_osi_4.2_2 <- pre_osi_4.2 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - pre_datetime_x,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(pre_osi_4.2_2)

ggplot(pre_osi_4.2_2, aes(x=diff_secs, y=osi, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            ggtitle("OSI pre physiotherapy session 2.2") + # add a title
    xlab('Time (secs)') + ylab('OSI') + # add axis names
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
             
###post physio

 post_osi_4.2_2 <- post_osi_4.2 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - datetime_x,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(post_osi_4.2_2)

ggplot(post_osi_4.2_2, aes(x=diff_secs, y=osi, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            ggtitle("OSI post physiotherapy session 2.2") + # add a title
    xlab('Time (secs)') + ylab('OSI') + # add axis names
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")             
             
########################################
# prepare data to calulate 5 min epochs
######################################

###pre physio, prepare consistant dates times

str(pre_osi_4.2)

pre_OSI_4.2_2 <- pre_osi_4.2 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - pre_datetime_x,
   diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(pre_OSI_4.2_2)

pre_OSI_4.2_test <- mutate(pre_OSI_4.2_2, osi_time = as.POSIXct(diff_secs, origin = "1970-01-01"))
str(pre_OSI_4.2_test)

####generate 5 min epochs and summaries

pre_OSI_4.2_5 <- pre_OSI_4.2_test %>% group_by(project_id, by5=cut(osi_time, "5 min")) %>%
  summarise(median=median(osi), across())
  
str(pre_OSI_4.2_5)
head(pre_OSI_4.2_5)

##remove repeated rows 'by 5'

pre_OSI_4.2_5a <- pre_OSI_4.2_5 %>% group_by(project_id, by5) %>% 
  filter(row_number()==1) %>%
  ungroup()

str(pre_OSI_4.2_5a)

###check how many values for each 

table(pre_OSI_4.2_5a$project_id)

##post physio prepare new times

post_OSI_4.2_2 <- post_osi_4.2 %>%
  arrange(project_id, record_date_time_y) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time_y - datetime_x,
   diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(post_OSI_4.2_2)

post_OSI_4.2_test <- mutate(post_OSI_4.2_2, osi_time = as.POSIXct(diff_secs, origin = "1970-01-01"))
str(post_OSI_4.2_test)

##create 5 min epochs

post_OSI_4.2_5 <- post_OSI_4.2_test %>% group_by(project_id, by5=cut(osi_time, "5 min")) %>%
  summarise(median=median(osi), across())
  
str(post_OSI_4.2_5)
head(post_OSI_4.2_5)

##remove repeated rows 'by 5'

post_OSI_4.2_5a <- post_OSI_4.2_5 %>% group_by(project_id, by5) %>% 
  filter(row_number()==1) %>%
  ungroup()

str(post_OSI_4.2_5a)

###check how many values for each 

table(post_OSI_4.2_5a$project_id)

#########################################################################
## draw graph of 5 min medians pre/post
#########################################################################

#need to change by into POSIXct from factor

pre_OSI_4.2_5a$by5 <- as.POSIXct(pre_OSI_4.2_5a$by5,format='%Y-%m-%d %H:%M:%S')

post_OSI_4.2_5a$by5 <- as.POSIXct(post_OSI_4.2_5a$by5,format='%Y-%m-%d %H:%M:%S')

### pre-physio

## plot median SpO2     
             
pre_plot <- ggplot(pre_OSI_4.2_5a, aes(x=diff_secs, y=median, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            geom_line() +
            ggtitle("OSI pre-physio (5 min epochs)") + # add a title
    xlab('Time (seconds)') + ylab('median OSI') + # add axis names
      xlim(0,1800) + ylim(0,20) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
          
## plot median SpO2     
             
post_plot <- ggplot(post_OSI_4.2_5a, aes(x=diff_secs, y=median, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            geom_line() +
            ggtitle("OSI post-physio (5 min epochs)") + # add a title
    xlab('Time (seconds)') + ylab('median OSI') + # add axis names
    xlim(0,3600) + ylim(0,20) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")                                            
            
require(gridExtra)

grid.arrange(pre_plot, post_plot, ncol=2)

##########################################
###5 mins  pre and post add extra column
#########################################

str(pre_OSI_4.2_5a)
str(post_OSI_4.2_5a)

##select columns want

preOSI_4.2 <- select(pre_OSI_4.2_5a, project_id, by5, median)
postOSI_4.2 <- select(post_OSI_4.2_5a, project_id, by5, median)

##rename medians for clarity

names(preOSI_4.2)[names(preOSI_4.2) == 'median'] <- 'premedian'
names(postOSI_4.2)[names(postOSI_4.2) == 'median'] <- 'postmedian'

str(preOSI_4.2)
str(postOSI_4.2)

##add extra column 

preOSI_4.2_1 <- preOSI_4.2 %>%
group_by(project_id) %>%
  mutate(label1 = LETTERS[row_number()]) %>%
  ungroup()

postOSI_4.2_1 <- postOSI_4.2 %>%
group_by(project_id) %>%
  mutate(label = LETTERS[row_number()]) %>%
  ungroup()

str(preOSI_4.2_1)
str(postOSI_4.2_1)

##try to reverse preOSI letters

preOSI_4.2_2 <- preOSI_4.2_1 %>%
group_by(project_id) %>%
mutate(label = rev(label1)) %>%
ungroup()

str(preOSI_4.2_2)

###################################################################################################################
########################################
###analysis 1 5 min pre vs 5 min post
########################################
#####################################################################################################################

###################################################
##subset pre for just 5min immediately pre "A"
#################################################

preOSI_4.2_3 <- select(preOSI_4.2_2, project_id, by5, premedian, label)

preOSI_4.2_4 <- subset(preOSI_4.2_3, label == "A")
str(preOSI_4.2_4)

preOSI_4.2_5 <- select(preOSI_4.2_4, project_id, by5, premedian)
str(preOSI_4.2_5)

###remove row if by5 time not 00:25:00

preOSI_4.2_6 <- preOSI_4.2_5[preOSI_4.2_5$by5 == "1970-01-01 00:25:00",]

str(preOSI_4.2_6)

#########################################
##subset post for 5 min imm post A
######################################

postOSI_4.2_2 <- subset(postOSI_4.2_1, label == "A")
str(postOSI_4.2_2)

###remove rows if by5 time not 00:00:00

postOSI_4.2_3 <- postOSI_4.2_2[postOSI_4.2_2$by5 == "1970-01-01 00:00:00",]

str(postOSI_4.2_3)

################################
##join pre and post together
###################################

osi4.2_prepost_5 <- inner_join(postOSI_4.2_3, preOSI_4.2_6, by="project_id")
str(osi4.2_prepost_5)    

unique(osi4.2_prepost_5$project_id)
sum(is.na(osi4.2_prepost_5))

##############################################
##calculate differences in 5 mins medians
###########################################
 
osi4.2_prepost_5$OSI_diff <- osi4.2_prepost_5$postmedian - osi4.2_prepost_5$premedian
str(osi4.2_prepost_5)

##plot with id
ggplot(osi4.2_prepost_5, aes(x = project_id, y=OSI_diff)) + 
            geom_point() +
             ggtitle("OSI difference post-pre physio (5 min epochs)") + # add a title
    xlab('Project id') + ylab('difference in OSI') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0.3, color = "red")
           
#### create new variable for above or below threshold

osi4.2_prepost_5$OSI_threshold <- ifelse(osi4.2_prepost_5$OSI_diff >= 0.3, "yes", "no")

str(osi4.2_prepost_5)

t.OSI <- table(osi4.2_prepost_5$OSI_threshold)

addmargins(t.OSI)
round(prop.table(t.OSI)*100, 2) #to give percentage

ggplot(osi4.2_prepost_5, aes(x = premedian, y=OSI_diff)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle(" 0-5 mins post physiotherapy") + # add a title
    ylab('Difference in 5 minute medians of OSI') + xlab(NULL) +
    ylim(-6,15)+ # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
           geom_hline(yintercept = 0.3, color = "red") 

####create new variable above, isq, below

str(osi4.2_prepost_5)

osi4.2_prepost_5$OSI_result <- ifelse(osi4.2_prepost_5$OSI_diff < 0, 'Improved',
                         ifelse(osi4.2_prepost_5$OSI_diff == 0, 'ISQ',
                         ifelse(osi4.2_prepost_5$OSI_diff > 0 & osi4.2_prepost_5$OSI_diff < 0.3, 'Worse', 'AE')))
str(osi4.2_prepost_5)    

ggplot(osi4.2_prepost_5, aes(x = project_id, y=OSI_diff, colour=OSI_result)) + 
            geom_point(size=0.5) +
             ggtitle("0-5 minutes post physio") + # add a title
    xlab(NULL) + ylab('Difference in OSI') + # add axis names
      ylim(-6,15)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
            scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
                 geom_hline(yintercept = 0.3, color = "red")+
        geom_hline(yintercept = 0, color = "black")
             
result1 <- table(osi4.2_prepost_5$OSI_result)

addmargins(result1)
round(prop.table(result1)*100, 2) #to give percentage

plot5a <- ggplot(osi4.2_prepost_5, aes(x = premedian, y=OSI_diff, colour=OSI_result)) + 
            geom_point() +
             ggtitle("0-5 minutes post-physiotherapy") + # add a title
    ylab('Change in median OSI') + xlab(NULL) +
    ylim(-10,10)+
 scale_x_continuous(expand = c(0, 0), limits = c(0,20)) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
                                geom_hline(yintercept = 0.3, color = "red") +
            geom_hline(yintercept = 0, color = "black")

###get subset of those unstable

osi_prepost_5a <- select(osi4.2_prepost_5, project_id, OSI_diff, OSI_result)
names(osi_prepost_5a)[names(osi_prepost_5a) == 'OSI_diff'] <- 'OSI_diff5'
names(osi_prepost_5a)[names(osi_prepost_5a) == 'OSI_result'] <- 'OSI_result5'

str(osi_prepost_5a)     
########################################################################################
######################################
##analysis 2 5 mins pre vs 15 mins post
######################################
######################################################################################

str(preOSI_4.2_6)

#########################################
##subset post for 15 min imm post C
######################################

postOSI_4.2_15 <- subset(postOSI_4.2_1, label == "C")
str(postOSI_4.2_15)

###remove rows if by5 time not 00:10:00

postOSI_4.2_15a <- postOSI_4.2_15[postOSI_4.2_15$by5 == "1970-01-01 00:10:00",]

str(postOSI_4.2_15a)

################################
##join pre and post together
###################################

osi4.2_prepost_15 <- inner_join(postOSI_4.2_15a, preOSI_4.2_6, by="project_id")
str(osi4.2_prepost_15)    

unique(osi4.2_prepost_15$project_id)
sum(is.na(osi4.2_prepost_15))

##############################################
##calculate differences in 5 mins medians
###########################################
 
osi4.2_prepost_15$OSI_diff <- osi4.2_prepost_15$postmedian - osi4.2_prepost_15$premedian
str(osi4.2_prepost_15)

##plot with id
ggplot(osi4.2_prepost_15, aes(x = project_id, y=OSI_diff, colour = project_id)) + 
            geom_point() +
             ggtitle("OSI difference post-pre physio (5 min epochs)") + # add a title
    xlab('Project id') + ylab('difference in OSI') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0.3, color = "red")
           
#### create new variable for above or below threshold

osi4.2_prepost_15$OSI_threshold <- ifelse(osi4.2_prepost_15$OSI_diff >= 0.3, "yes", "no")

str(osi4.2_prepost_15)

t.OSI <- table(osi4.2_prepost_15$OSI_threshold)

addmargins(t.OSI)
round(prop.table(t.OSI)*100, 2) #to give percentage

 ggplot(osi4.2_prepost_15, aes(x = premedian, y=OSI_diff)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle("10-15 minutes post physiotherapy") + # add a title
    ylim(-6,15) + # add axis names
    ylab(NULL) + xlab(NULL) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
           geom_hline(yintercept = 0.3, color = "red") 
        
####create new variable above, isq, below

str(osi4.2_prepost_15)

osi4.2_prepost_15$OSI_result <- ifelse(osi4.2_prepost_15$OSI_diff < 0, 'Improved',
                         ifelse(osi4.2_prepost_15$OSI_diff == 0, 'ISQ',
                         ifelse(osi4.2_prepost_15$OSI_diff > 0 & osi4.2_prepost_15$OSI_diff < 0.3, 'Worse', 'AE')))
str(osi4.2_prepost_15)    

 ggplot(osi4.2_prepost_15, aes(x = project_id, y=OSI_diff, colour=OSI_result)) + 
            geom_point(size = 0.5) +
             ggtitle("10-15 minutes post physio") + # add a title
    xlab(NULL) + ylab(NULL) + # add axis names
      ylim(-6,15)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'),axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
            scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
                 geom_hline(yintercept = 0.3, color = "red")+
        geom_hline(yintercept = 0, color = "black")
        
result2 <- table(osi4.2_prepost_15$OSI_result)

addmargins(result2)
round(prop.table(result2)*100, 2) #to give percentage   

plot15a <- ggplot(osi4.2_prepost_15, aes(x = premedian, y=OSI_diff, colour=OSI_result)) + 
            geom_point() +
             ggtitle("10-15 minutes post-physiotherapy") + # add a title
    ylab(NULL) + xlab(NULL) +
    ylim(-10,10)+
 scale_x_continuous(expand = c(0, 0), limits = c(0,20)) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
                                geom_hline(yintercept = 0.3, color = "red") +
            geom_hline(yintercept = 0, color = "black")

####################################################################################
#############################################
### analysis 3 5 min pre vs 30 mins post
###########################################
######################################################################################

str(preOSI_4.2_6)

#########################################
##subset post for 30 min post F
######################################

postOSI_4.2_30 <- subset(postOSI_4.2_1, label == "F")
str(postOSI_4.2_30)

###remove rows if by5 time not 00:25:00

postOSI_4.2_30a <- postOSI_4.2_30[postOSI_4.2_30$by5 == "1970-01-01 00:25:00",]

str(postOSI_4.2_30a)

################################
##join pre and post together
###################################

osi4.2_prepost_30 <- inner_join(postOSI_4.2_30a, preOSI_4.2_6, by="project_id")
str(osi4.2_prepost_30)    

unique(osi4.2_prepost_30$project_id)
sum(is.na(osi4.2_prepost_30))

##############################################
##calculate differences in 5 mins medians
###########################################
 
osi4.2_prepost_30$OSI_diff <- osi4.2_prepost_30$postmedian - osi4.2_prepost_30$premedian
str(osi4.2_prepost_30)

##plot with id
ggplot(osi4.2_prepost_30, aes(x = project_id, y=OSI_diff, colour = project_id)) + 
            geom_point() +
             ggtitle("OSI difference post-pre physio (5 min epochs)") + # add a title
    xlab('Project id') + ylab('difference in OSI') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0.3, color = "red")
           

#### create new variable for above or below threshold

osi4.2_prepost_30$OSI_threshold <- ifelse(osi4.2_prepost_30$OSI_diff >= 0.3, "yes", "no")

str(osi4.2_prepost_30)

t.OSI <- table(osi4.2_prepost_30$OSI_threshold)

addmargins(t.OSI)
round(prop.table(t.OSI)*100, 2) #to give percentage

ggplot(osi4.2_prepost_30, aes(x = premedian, y=OSI_diff)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle("25-30 minutes post physiotherapy") + # add a title
    xlab('Median OSI 5-minutes pre-physiotherapy') + ylab('Difference in OSI') + # add axis names
         ylim(-6,15) +theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
           geom_hline(yintercept = 0.3, color = "red") 

 ####create new variable above, isq, below

str(osi4.2_prepost_30)

osi4.2_prepost_30$OSI_result <- ifelse(osi4.2_prepost_30$OSI_diff < 0, 'Improved',
                         ifelse(osi4.2_prepost_30$OSI_diff == 0, 'ISQ',
                         ifelse(osi4.2_prepost_30$OSI_diff > 0 & osi4.2_prepost_30$OSI_diff < 0.3, 'Worse', 'AE')))
str(osi4.2_prepost_30)    

 ggplot(osi4.2_prepost_30, aes(x = project_id, y=OSI_diff, colour=OSI_result)) + 
            geom_point(size=0.5) +
             ggtitle("25-30 minutes post physio") + # add a title
    xlab('Individual patients') + ylab('Difference in OSI') + # add axis names
      ylim(-6,15)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
              scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3"))  +
                 geom_hline(yintercept = 0.3, color = "red")+
        geom_hline(yintercept = 0, color = "black")
        
result3 <- table(osi4.2_prepost_30$OSI_result)

addmargins(result3)
round(prop.table(result3)*100, 2) #to give percentage  

    plot30a <- ggplot(osi4.2_prepost_30, aes(x = premedian, y=OSI_diff, colour=OSI_result)) + 
            geom_point() +
             ggtitle("25-30 minutes post-physiotherapy") + # add a title
    ylab('Change in median OSI') + xlab('Median OSI 5 minutes pre-physiotherapy') +
    ylim(-10,10)+
 scale_x_continuous(expand = c(0, 0), limits = c(0,20)) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
                                geom_hline(yintercept = 0.3, color = "red") +
            geom_hline(yintercept = 0, color = "black")   

#######################################################################################
##########################################
##analysis 4 5mins pre vs 60 mins
###########################################
#######################################################################################

str(preOSI_4.2_6)

#########################################
##subset post for 60 min post 
######################################

postOSI_4.2_60 <- subset(postOSI_4.2_1, label == "L")
str(postOSI_4.2_60)

###remove rows if by5 time not 00:60:00

postOSI_4.2_60a <- postOSI_4.2_60[postOSI_4.2_60$by5 == "1970-01-01 00:55:00",]

str(postOSI_4.2_60a)

################################
##join pre and post together
###################################

osi4.2_prepost_60 <- inner_join(postOSI_4.2_60a, preOSI_4.2_6, by="project_id")
str(osi4.2_prepost_60)    

unique(osi4.2_prepost_60$project_id)
sum(is.na(osi4.2_prepost_60))

##############################################
##calculate differences in 5 mins medians
###########################################
 
osi4.2_prepost_60$OSI_diff <- osi4.2_prepost_60$postmedian - osi4.2_prepost_60$premedian
str(osi4.2_prepost_60)

##plot with id
ggplot(osi4.2_prepost_60, aes(x = project_id, y=OSI_diff)) + 
            geom_point() +
             ggtitle("OSI difference post-pre physio (5 min epochs)") + # add a title
    xlab('Project id') + ylab('difference in OSI') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")  +
                 geom_hline(yintercept = 0.3, color = "red")
           
#### create new variable for above or below threshold

osi4.2_prepost_60$OSI_threshold <- ifelse(osi4.2_prepost_60$OSI_diff >= 0.3, "yes", "no")

str(osi4.2_prepost_60)

t.OSI <- table(osi4.2_prepost_60$OSI_threshold)

addmargins(t.OSI)
round(prop.table(t.OSI)*100, 2) #to give percentage

 ggplot(osi4.2_prepost_60, aes(x = premedian, y=OSI_diff)) + 
            geom_point(colour="deepskyblue4") +
             ggtitle("55-60 minutes post physiotherapy") + # add a title
    xlab('Median OSI 5-minutes pre-physiotherapy')  + ylab(NULL)+ # add axis names
        ylim(-6,15) + theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
           geom_hline(yintercept = 0.3, color = "red") 

 ####create new variable above, isq, below

str(osi4.2_prepost_60)

osi4.2_prepost_60$OSI_result <- ifelse(osi4.2_prepost_60$OSI_diff < 0, 'Improved',
                         ifelse(osi4.2_prepost_60$OSI_diff == 0, 'ISQ',
                         ifelse(osi4.2_prepost_60$OSI_diff > 0 & osi4.2_prepost_60$OSI_diff < 0.3, 'Worse', 'AE')))
str(osi4.2_prepost_60)    

ggplot(osi4.2_prepost_60, aes(x = project_id, y=OSI_diff, colour=OSI_result)) + 
            geom_point(size= 0.5) +
             ggtitle("55-60 minutes post physio") + # add a title
    xlab('Individual patients') + ylab(NULL) + # add axis names
    ylim(-6,15)+
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), legend.position = "none")+
             scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("brown3", "darkred", "chartreuse4", "chartreuse3")) +
                 geom_hline(yintercept = 0.3, color = "red") + 
        geom_hline(yintercept = 0, color = "black") 
      
result4 <- table(osi4.2_prepost_60$OSI_result)

addmargins(result4)
round(prop.table(result4)*100, 2) #to give percentage

plot60a <- ggplot(osi4.2_prepost_60, aes(x = premedian, y=OSI_diff, colour=OSI_result)) + 
            geom_point() +
             ggtitle("55-60 minutes post-physiotherapy") + # add a title
    ylab(NULL) + xlab('Median OSI 5 minutes pre-physiotherapy') +
ylim(-10,10)+
 scale_x_continuous(expand = c(0, 0), limits = c(0,20)) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("AE", "Worse", "ISQ", "Improved"),
                        values=c("red", "red4", "chartreuse4", "chartreuse3"))  +
                                geom_hline(yintercept = 0.3, color = "red") +
            geom_hline(yintercept = 0, color = "black")

########################
##combine plots
############################

require(gridExtra)

grid.arrange(plot5a, plot15a, plot30a, plot60a, ncol=2, nrow=2)

#grid.arrange(plota, plotb, plotc, plotd, ncol=2, nrow=2)


#####################################################################

###create AE variable
str(osi_prepost_5a)

osi_prepost_5a$osi_AE <- ifelse(osi_prepost_5a$OSI_result5 == "AE", 'Yes', 'No')

str(osi_prepost_5a)

table(osi_prepost_5a$osi_AE)

is.na(osi_prepost_5a)

osi_AE_4.2 <- select(osi_prepost_5a, project_id, osi_AE)
str(osi_AE_4.2)

###save as csv

write.csv(osi_AE_4.2, "~/files/datafiles/osi_AE_4.2.csv")








##########################################Script 14 – Heart rate first session exploration################################################ 


##########################
##load in hr files
##########################

##data set 1

hr1 <- xap.read_table("hr1_1_1")

str(hr1)

hr1a <- select(hr1, project_id, datetime, pre_datetime, start_datetime, end_datetime, record_date_time, hr)

str(hr1a)

##data set 2

hr2 <-xap.read_table("hr2_1_1")
str(hr2)

hr2a <- select(hr2, project_id, datetime, pre_datetime, start_datetime, end_datetime, record_date_time, hr)

str(hr2a)

##partial data set

hr_p <- xap.read_table("hrp_1_1")
str(hr_p)

hr_p1 <- select(hr_p, project_id,  datetime, pre_datetime, start_datetime, end_datetime, record_date_time, hr)

str(hr_p1)

###################################################
###################################################
# combine part 1 and part 2 and partial hr files
####################################################
##################################################

#combine 1 & 2

HR_a <- rbind(hr1a, hr2a)

str(HR_a)

#combing with partial

HR_first <- rbind(HR_a, hr_p1)

str(HR_first)
unique(HR_first$project_id)
#############################################################
#############################################################
###find and remove patients who were paced
############################################################
###############################################################

###############################
##load in cardiac rhythm data
#############################

paced_01 <- xap.read_table("complete01_caboodle_patient_selected_flowsheetrows_advs_pivot")
str(paced_01)

paced2a <- select(paced_01, project_id, taken_datetime, R.CARDIAC.RHYTHM)
str(paced2a)

paced_02 <- xap.read_table("complete02_caboodle_patient_selected_flowsheetrows_advs_pivot")
str(paced_01)

paced2b <- select(paced_02, project_id, taken_datetime, R.CARDIAC.RHYTHM)
str(paced2b)


paced_p <- xap.read_table("partial_caboodle_patient_selected_flowsheetrows_advs_pivot")
str(paced_p)

paced2c <- select(paced_p, project_id, taken_datetime, R.CARDIAC.RHYTHM)
str(paced2c)

#####join together 

paced_1a <- rbind(paced2a, paced2b)
paced_1 <-rbind(paced_1a, paced2c)
str(paced_1)

unique(paced_1$project_id)

###what are options in epic HR

unique(paced_1$R.CARDIAC.RHYTHM)

#####create new variable for paced

paced_1$pacing <- ifelse(paced_1$R.CARDIAC.RHYTHM == "A/V Paced" | paced_1$R.CARDIAC.RHYTHM == "A-Paced" | paced_1$R.CARDIAC.RHYTHM == "V-Paced", 1, 0)

str(paced_1)
table(paced_1$pacing)

############################################################
###join raw hr data to pacing data, keep within date range
############################################################
HR_first1 <- inner_join(HR_first, paced_1, by="project_id")
str(HR_first1)
unique(HR_first1$project_id)

HR_first2 <- filter(HR_first1, taken_datetime >= pre_datetime & taken_datetime <= end_datetime)
str(HR_first2)

###find project_ids with pacing

paced_group <- subset(HR_first2, HR_first2$pacing == 1)
str(paced_group)

paced_group1 <- select(paced_group, project_id, pacing)
str(paced_group1)

paced_group2 <- paced_group1 %>% group_by(project_id) %>% 
  filter(row_number()==1) %>% ungroup()
  
  str(paced_group2)
  
#########################################################
###remove paced patients from raw data set
#########################################################

##join data sets
hr_first <- full_join(HR_first, paced_group2, by= "project_id")
str(hr_first)
unique(hr_first$project_id)
is.na(hr_first$pacing)

##change NA to 0

hr_first$pacing[is.na(hr_first$pacing)] <- 0

###remove with pacing

hr_first1 <- subset(hr_first, hr_first$pacing == '0')
str(hr_first1)
unique(hr_first1$project_id)

###############
##explore hr
#############
summary(hr_first1)

ggplot(hr_first1, aes(x=hr)) + geom_histogram()

#########################################################################
# to plot raw data on graph - calculate time difference from first recorded (baseline)
#########################################################################


 hr_first_data <- hr_first1 %>%
  arrange(project_id, record_date_time) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time - pre_datetime,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(hr_first_data)

fun_color_range <- colorRampPalette(c("lightblue", "navy"))   
my_colors <- fun_color_range(440)  
  
ggplot(hr_first_data, aes(x=diff_secs, y=hr)) + 
 geom_point(aes(color = project_id), size = 0.5) +
    xlab('Time (seconds)') + ylab('Heart rate') + # add axis names
        scale_y_continuous(expand = c(0, 0), limits = c(0, 300)) +
    scale_x_continuous(expand = c(0, 0), limits = c(0,7500)) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position="none") +
      scale_color_manual(values = my_colors) +
                 geom_vline(xintercept = c(1800, 3600), color = "red")
                              
##############################################################
###create pre and post data set
#############################################################
           
## pre physio
pre_hr_first <- hr_first1 %>% group_by(project_id) %>%
filter(record_date_time > pre_datetime & record_date_time < start_datetime) %>% ungroup()
str(pre_hr_first)
summary(pre_hr_first)
          
## post physio            
             
post_hr_first <- hr_first1 %>% group_by(project_id) %>%
filter(record_date_time > datetime & record_date_time < end_datetime) %>% ungroup()
str(post_hr_first)
 summary(post_hr_first)          

#########################################################################
# to plot raw data on graph - calculate time difference from first recorded (baseline)
#########################################################################

###pre physio

pre_HR_first2 <- pre_hr_first %>%
  arrange(project_id, record_date_time) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time - pre_datetime,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(pre_HR_first2)

ggplot(pre_HR_first2, aes(x=diff_secs, y=hr, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            ggtitle("Heart rate pre physiotherapy") + # add a title
    xlab('Time (secs)') + ylab('HR') + # add axis names
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
             
###post physio

 post_HR_first2 <- post_hr_first %>%
  arrange(project_id, record_date_time) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time - datetime,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(post_HR_first2)

ggplot(post_HR_first2, aes(x=diff_secs, y=hr, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            ggtitle("Heart rate post physiotherapy") + # add a title
    xlab('Time (secs)') + ylab('HR') + # add axis names
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")             
             
########################################
# prepare data to calulate 5 min epochs
######################################

###pre physio, prepare consistant dates times

str(pre_hr_first)

pre_HR_first2 <- pre_hr_first %>%
  arrange(project_id, record_date_time) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time - pre_datetime,
   diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(pre_HR_first2)

pre_HR_first_test <- mutate(pre_HR_first2, hr_time = as.POSIXct(diff_secs, origin = "1970-01-01"))
str(pre_HR_first_test)

####generate 5 min epochs and summaries

pre_HR_first_5 <- pre_HR_first_test %>% group_by(project_id, by5=cut(hr_time, "5 min")) %>%
  summarise(median=median(hr), across())
  
str(pre_HR_first_5)
head(pre_HR_first_5)

##remove repeated rows 'by 5'

pre_HR_first_5a <- pre_HR_first_5 %>% group_by(project_id, by5) %>% 
  filter(row_number()==1) %>%
  ungroup()

str(pre_HR_first_5a)

###check how many values for each 

table(pre_HR_first_5a$project_id)

##post physio prepare new times

post_HR_first2 <- post_hr_first %>%
  arrange(project_id, record_date_time) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time - datetime,
   diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(post_HR_first2)

post_HR_first_test <- mutate(post_HR_first2, hr_time = as.POSIXct(diff_secs, origin = "1970-01-01"))
str(post_HR_first_test)

##create 5 min epochs

post_HR_first_5 <- post_HR_first_test %>% group_by(project_id, by5=cut(hr_time, "5 min")) %>%
  summarise(median=median(hr), across())
  
str(post_HR_first_5)
head(post_HR_first_5)

##remove repeated rows 'by 5'

post_HR_first_5a <- post_HR_first_5 %>% group_by(project_id, by5) %>% 
  filter(row_number()==1) %>%
  ungroup()

str(post_HR_first_5a)

###check how many values for each 

table(post_HR_first_5a$project_id)

#########################################################################
## draw graph of median and time - calculate time difference from first recorded
#########################################################################

#need to change by into POSIXct from factor

pre_HR_first_5a$by5 <- as.POSIXct(pre_HR_first_5a$by5,format='%Y-%m-%d %H:%M:%S')

post_HR_first_5a$by5 <- as.POSIXct(post_HR_first_5a$by5,format='%Y-%m-%d %H:%M:%S')

### pre-physio

fun_color_range <- colorRampPalette(c("lightblue", "navy"))   
my_colors <- fun_color_range(440)
        
pre_plot <- ggplot(pre_HR_first_5a, aes(x=diff_secs, y=median, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            geom_line() +
            ggtitle("Heart rate pre-physiotherapy") + # add a title
    xlab('Time (seconds)') + ylab('Median HR') + # add axis names
    scale_y_continuous(expand = c(0, 0), limits = c(0, 250)) +
    scale_x_continuous(expand = c(0, 0), limits = c(0,1700)) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_manual(values=my_colors) 
                      
post_plot <- ggplot(post_HR_first_5a, aes(x=diff_secs, y=median, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            geom_line() +
            ggtitle("Heart rate post-physiotherapy") + # add a title
    xlab('Time (seconds)') + ylab('Median HR') + # add axis names
     scale_y_continuous(expand = c(0, 0), limits = c(0, 250)) +
    scale_x_continuous(expand = c(0, 0), limits = c(0,3600)) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_manual(values=my_colors) 
          
require(gridExtra)

grid.arrange(pre_plot, post_plot, ncol=2)

##########################################
###5 mins  pre and post add extra column
#########################################

str(pre_HR_first_5a)
str(post_HR_first_5a)

##select columns want

preHR <- select(pre_HR_first_5a, project_id, by5, median)
postHR <- select(post_HR_first_5a, project_id, by5, median)

##rename medians for clarity

names(preHR)[names(preHR) == 'median'] <- 'premedian'
names(postHR)[names(postHR) == 'median'] <- 'postmedian'

str(preHR)
str(postHR)

##add extra column 
preHR1 <- preHR %>%
group_by(project_id) %>%
  mutate(label1 = LETTERS[row_number()]) %>%
  ungroup()

postHR1 <- postHR %>%
group_by(project_id) %>%
  mutate(label = LETTERS[row_number()]) %>%
  ungroup()

str(preHR1)
str(postHR1)

##try to reverse preOSI letters

preHR2 <- preHR1 %>%
group_by(project_id) %>%
mutate(label = rev(label1)) %>%
ungroup()

str(preHR2)

unique(preHR2$project_id)
unique(postHR1$project_id)

###################################################################################################################
########################################
###analysis 1 5 min pre vs 5 min post
########################################
#####################################################################################################################

###################################################
##subset pre for just 5min immediately pre "A"
#################################################

preHR3 <- select(preHR2, project_id, by5, premedian, label)

preHR4 <- subset(preHR3, label == "A")
str(preHR4)

preHR5 <- select(preHR4, project_id, by5, premedian)
str(preHR5)

###remove row if by5 time not 00:25:00

preHR6 <- preHR5[preHR5$by5 == "1970-01-01 00:25:00",]

str(preHR6)
unique(preHR6$project_id)

#########################################
##subset post for 5 min imm post A
######################################
postHR2 <- subset(postHR1, label == "A")
str(postHR2)

###remove rows if by5 time not 00:00:00

postHR3 <- postHR2[postHR2$by5 == "1970-01-01 00:00:00",]

str(postHR3)

################################
##join pre and post together
###################################

hr_prepost_5 <- inner_join(postHR3, preHR6, by="project_id")
str(hr_prepost_5)    

unique(hr_prepost_5$project_id)
sum(is.na(hr_prepost_5))

hr_group <- select(hr_prepost_5, project_id)
str(hr_group)

##############################################
##calculate differences in 5 mins medians
###########################################
 
hr_prepost_5$hr_diff <- hr_prepost_5$postmedian - hr_prepost_5$premedian
str(hr_prepost_5)

##plot with id
ggplot(hr_prepost_5, aes(x = project_id, y=hr_diff)) + 
            geom_point() +
             ggtitle("HR difference post-pre physio ") + # add a title
    xlab('Project id') + ylab(' absolute difference in HR') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
           
##################################
##create percentage change variable
####################################

hr_prepost_5$hr_perc_change <- (hr_prepost_5$hr_diff / hr_prepost_5$premedian)* 100
str(hr_prepost_5)

##plot with id
ggplot(hr_prepost_5, aes(x = project_id, y=hr_perc_change)) + 
            geom_point() +
             ggtitle("HR difference post-pre physio ") + # add a title
    xlab('Project id') + ylab(' % difference in HR') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
           

###get rid of -ve values

hr_prepost_5$hr_perc_change_1 <- abs(hr_prepost_5$hr_perc_change)
str(hr_prepost_5)

#### create new variable for above or below threshold

hr_prepost_5$hr_threshold <- ifelse(hr_prepost_5$hr_perc_change_1 > 20, "yes", "no")

str(hr_prepost_5)

t.hr<- table(hr_prepost_5$hr_threshold)

addmargins(t.hr)
round(prop.table(t.hr)*100, 2) #to give percentage

#####graph

plot5x <- ggplot(hr_prepost_5, aes(x = project_id, y=hr_diff, colour=hr_threshold)) + 
            geom_point() +
             ggtitle(" 0-5 mins post physiotherapy") + # add a title
    ylab('absolute HR difference') + xlab(NULL) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("yes", "no"),
                        values=c("brown3","chartreuse3"))  +
            geom_hline(yintercept = 0, color = "black")

plot5a <- ggplot(hr_prepost_5, aes(x = premedian, y=hr_diff, colour = hr_threshold)) + 
            geom_point() +
             ggtitle("0-5 minutes post physiotherapy") + # add a title
    xlab(NULL) + ylab('Absolute change in heart rate') + # add axis names
    xlim(0,220)+ ylim(-70,80) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_manual(breaks = c("yes", "no"),
                        values=c("red","steelblue4"))  +
            geom_hline(yintercept = 0, color = "black")

###get subset of those unstable

hr_prepost_5a <- select(hr_prepost_5, project_id, hr_diff, hr_perc_change, hr_threshold)

names(hr_prepost_5a)[names(hr_prepost_5a) == 'hr_diff'] <- 'hr_diff5'
names(hr_prepost_5a)[names(hr_prepost_5a) == 'hr_perc_change'] <- 'hr_perc_change5'
names(hr_prepost_5a)[names(hr_prepost_5a) == 'hr_threshold'] <- 'hr_threshold5'
str(hr_prepost_5a)

########################################################################################
######################################
##analysis 2 5 mins pre vs 15 mins post
######################################
######################################################################################
#########################################
##subset post for 15 min imm post C
######################################

postHR15 <- subset(postHR1, label == "C")
str(postHR15)

###remove rows if by5 time not 00:10:00

postHR15a <- postHR15[postHR15$by5 == "1970-01-01 00:10:00",]

str(postHR15)

################################
##join pre and post together
###################################

hr_prepost_15a <- inner_join(postHR15, preHR6, by="project_id")
str(hr_prepost_15a)    

unique(hr_prepost_15a$project_id)
sum(is.na(hr_prepost_15a))

#####take out any additional patients

hr_prepost_15 <- inner_join(hr_group, hr_prepost_15a)
str(hr_prepost_15) 
##############################################
##calculate differences in 5 mins medians
###########################################
 
hr_prepost_15$hr_diff <- hr_prepost_15$postmedian - hr_prepost_15$premedian
str(hr_prepost_15)

##plot with id
ggplot(hr_prepost_15, aes(x = project_id, y=hr_diff)) + 
            geom_point() +
             ggtitle("HR difference post-pre physio ") + # add a title
    xlab('Project id') + ylab(' absolute difference in HR') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
           
##################################
##create percentage change variable
####################################

hr_prepost_15$hr_perc_change <- (hr_prepost_15$hr_diff / hr_prepost_15$premedian)* 100
str(hr_prepost_15)

##plot with id
ggplot(hr_prepost_15, aes(x = project_id, y=hr_perc_change)) + 
            geom_point() +
             ggtitle("HR difference post-pre physio ") + # add a title
    xlab('Project id') + ylab(' % difference in HR') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
           
###get rid of -ve values

hr_prepost_15$hr_perc_change_1 <- abs(hr_prepost_15$hr_perc_change)
str(hr_prepost_15)

#### create new variable for above or below threshold

hr_prepost_15$hr_threshold <- ifelse(hr_prepost_15$hr_perc_change_1 > 20, "yes", "no")

str(hr_prepost_15)

t.hr1<- table(hr_prepost_15$hr_threshold)

addmargins(t.hr1)
round(prop.table(t.hr1)*100, 2) #to give percentage

summary(hr_prepost_15)
#####graph

plot15x <- ggplot(hr_prepost_15, aes(x = project_id, y=hr_diff, colour=hr_threshold)) + 
            geom_point() +
             ggtitle(" 10-15 mins post physiotherapy") + # add a title
    ylab('absolute HR difference') + xlab(NULL) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("yes", "no"),
                        values=c("brown3","chartreuse3"))  +
            geom_hline(yintercept = 0, color = "black")

plot15a <- ggplot(hr_prepost_15, aes(x = premedian, y=hr_diff, colour = hr_threshold)) + 
            geom_point() +
             ggtitle("10-15 minutes post-physiotherapy") + # add a title
    xlab(NULL) + ylab(NULL) + # add axis names
    xlim(0,220)+ ylim(-70,80) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_manual(breaks = c("yes", "no"),
                        values=c("red","steelblue4"))  +
            geom_hline(yintercept = 0, color = "black")

###get subset of those unstable

hr_prepost_15a <- select(hr_prepost_15, project_id, hr_diff, hr_perc_change, hr_threshold)

names(hr_prepost_15a)[names(hr_prepost_15a) == 'hr_diff'] <- 'hr_diff15'
names(hr_prepost_15a)[names(hr_prepost_15a) == 'hr_perc_change'] <- 'hr_perc_change15'
names(hr_prepost_15a)[names(hr_prepost_15a) == 'hr_threshold'] <- 'hr_threshold15'
str(hr_prepost_15a)

########################################################################################
######################################
##analysis 3 5 mins pre vs 30 mins post
######################################
######################################################################################

#########################################
##subset post for 30 min imm post F
######################################

postHR30 <- subset(postHR1, label == "F")
str(postHR30)

###remove rows if by5 time not 00:25:00

postHR30a <- postHR30[postHR30$by5 == "1970-01-01 00:25:00",]

str(postHR30)

################################
##join pre and post together
###################################

hr_prepost_30a <- inner_join(postHR30, preHR6, by="project_id")
str(hr_prepost_30a)    

unique(hr_prepost_30a$project_id)
sum(is.na(hr_prepost_30a))
#####take out any additional patients

hr_prepost_30 <- inner_join(hr_group, hr_prepost_30a)
str(hr_prepost_30)
 
##############################################
##calculate differences in 5 mins medians
###########################################
 
hr_prepost_30$hr_diff <- hr_prepost_30$postmedian - hr_prepost_30$premedian
str(hr_prepost_30)

##plot with id
ggplot(hr_prepost_30, aes(x = project_id, y=hr_diff)) + 
            geom_point() +
             ggtitle("HR difference post-pre physio ") + # add a title
    xlab('Project id') + ylab(' absolute difference in HR') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
           
##################################
##create percentage change variable
####################################

hr_prepost_30$hr_perc_change <- (hr_prepost_30$hr_diff / hr_prepost_30$premedian)* 100
str(hr_prepost_30)

##plot with id
ggplot(hr_prepost_30, aes(x = project_id, y=hr_perc_change)) + 
            geom_point() +
             ggtitle("HR difference post-pre physio ") + # add a title
    xlab('Project id') + ylab(' % difference in HR') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
           
###get rid of -ve values

hr_prepost_30$hr_perc_change_1 <- abs(hr_prepost_30$hr_perc_change)
str(hr_prepost_30)

#### create new variable for above or below threshold

hr_prepost_30$hr_threshold <- ifelse(hr_prepost_30$hr_perc_change_1 > 20, "yes", "no")

str(hr_prepost_30)

t.hr2<- table(hr_prepost_30$hr_threshold)

addmargins(t.hr2)
round(prop.table(t.hr2)*100, 2) #to give percentage

#####graph

plot30x <- ggplot(hr_prepost_30, aes(x = project_id, y=hr_diff, colour=hr_threshold)) + 
            geom_point() +
             ggtitle(" 25-30 mins post physiotherapy") + # add a title
    ylab('absolute HR difference') + xlab(NULL) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("yes", "no"),
                        values=c("brown3","chartreuse3"))  +
            geom_hline(yintercept = 0, color = "black")

plot30a <- ggplot(hr_prepost_30, aes(x = premedian, y=hr_diff, colour = hr_threshold)) + 
            geom_point() +
             ggtitle("25-30 minutes post-physiotherapy") + # add a title
    xlab('Median heart rate 5 minutes pre-physiotherapy') + ylab('Absolute change in heart rate') + # add axis names
    xlim(0,220)+ ylim(-70,80) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_manual(breaks = c("yes", "no"),
                        values=c("red","steelblue4"))  +
            geom_hline(yintercept = 0, color = "black")

###get subset of those unstable

hr_prepost_30a <- select(hr_prepost_30, project_id, hr_diff, hr_perc_change, hr_threshold)

names(hr_prepost_30a)[names(hr_prepost_30a) == 'hr_diff'] <- 'hr_diff30'
names(hr_prepost_30a)[names(hr_prepost_30a) == 'hr_perc_change'] <- 'hr_perc_change30'
names(hr_prepost_30a)[names(hr_prepost_30a) == 'hr_threshold'] <- 'hr_threshold30'
str(hr_prepost_30a)

########################################################################################
######################################
##analysis 4 5 mins pre vs 60 mins post
######################################
######################################################################################

#########################################
##subset post for 60 min imm post L
######################################

postHR60 <- subset(postHR1, label == "L")
str(postHR60)

###remove rows if by5 time not 00:55:00

postHR60a <- postHR60[postHR60$by5 == "1970-01-01 00:55:00",]

str(postHR60)

################################
##join pre and post together
###################################

hr_prepost_60a <- inner_join(postHR60, preHR6, by="project_id")
str(hr_prepost_60a)    

unique(hr_prepost_60a$project_id)
sum(is.na(hr_prepost_60a))
#####take out any additional patients

hr_prepost_60 <- inner_join(hr_group, hr_prepost_60a)
str(hr_prepost_60)
 
##############################################
##calculate differences in 5 mins medians
###########################################
 
hr_prepost_60$hr_diff <- hr_prepost_60$postmedian - hr_prepost_60$premedian
str(hr_prepost_60)

##plot with id
ggplot(hr_prepost_60, aes(x = project_id, y=hr_diff)) + 
            geom_point() +
             ggtitle("HR difference post-pre physio ") + # add a title
    xlab('Project id') + ylab(' absolute difference in HR') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
           
##################################
##create percentage change variable
####################################

hr_prepost_60$hr_perc_change <- (hr_prepost_60$hr_diff / hr_prepost_60$premedian)* 100
str(hr_prepost_60)

##plot with id
ggplot(hr_prepost_60, aes(x = project_id, y=hr_perc_change)) + 
            geom_point() +
             ggtitle("HR difference post-pre physio ") + # add a title
    xlab('Project id') + ylab(' % difference in HR') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
           
###get rid of -ve values

hr_prepost_60$hr_perc_change_1 <- abs(hr_prepost_60$hr_perc_change)
str(hr_prepost_60)

#### create new variable for above or below threshold

hr_prepost_60$hr_threshold <- ifelse(hr_prepost_60$hr_perc_change_1 > 20, "yes", "no")

str(hr_prepost_60)

t.hr4<- table(hr_prepost_60$hr_threshold)

addmargins(t.hr4)
round(prop.table(t.hr4)*100, 2) #to give percentage

#####graph

plot60x <- ggplot(hr_prepost_60, aes(x = project_id, y=hr_diff, colour=hr_threshold)) + 
            geom_point() +
             ggtitle(" 10-15 mins post physiotherapy") + # add a title
    ylab('absolute HR difference') + xlab(NULL) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("yes", "no"),
                        values=c("brown3","chartreuse3"))  +
            geom_hline(yintercept = 0, color = "black")

plot60a <- ggplot(hr_prepost_60, aes(x = premedian, y=hr_diff, colour = hr_threshold)) + 
            geom_point() +
             ggtitle("55-60 minutes post-physiotherapy") + # add a title
    xlab('Median heart rate 5 minutes pre-physiotherapy') + ylab(NULL) + # add axis names
    xlim(0,220)+ ylim(-70,80) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none") +
             scale_color_manual(breaks = c("yes", "no"),
                        values=c("red","steelblue4"))  +
            geom_hline(yintercept = 0, color = "black")
                        
###get subset of those unstable

hr_prepost_60a <- select(hr_prepost_60, project_id, hr_diff, hr_perc_change, hr_threshold)

names(hr_prepost_60a)[names(hr_prepost_60a) == 'hr_diff'] <- 'hr_diff60'
names(hr_prepost_60a)[names(hr_prepost_60a) == 'hr_perc_change'] <- 'hr_perc_change60'
names(hr_prepost_60a)[names(hr_prepost_60a) == 'hr_threshold'] <- 'hr_threshold60'
str(hr_prepost_60a)

#######################
##combine plots
############################

#grid.arrange(plota, plotb, plotc, plotd, ncol=2, nrow=2)

grid.arrange(plot5a, plot15a, plot30a, plot60a, ncol=2, nrow=2)

########################################
###join subsets to identify those with AE
#########################################

hr_AE_1.1a <- full_join(hr_prepost_5a, hr_prepost_15a, by="project_id")
str(hr_AE_1.1a)

hr_AE_1.1b <- full_join(hr_AE_1.1a, hr_prepost_30a, by="project_id")
str(hr_AE_1.1b)

hr_AE_1.1c <- full_join(hr_AE_1.1b, hr_prepost_60a, by="project_id")
str(hr_AE_1.1c)

###save csv to check for repeated patients with AE
write.csv(osi_AE_1.1c, "~/files/datafiles/osi_AE_1.1july.csv")

###select columns want

hr_AE_1.1d <- select(hr_AE_1.1c, project_id, hr_threshold5, hr_threshold15, hr_threshold30, hr_threshold60)
str(hr_AE_1.1d)

hr_AE_1.1d[is.na(hr_AE_1.1d)] = 'unknown'

###create AE variable

hr_AE_1.1d$hr_AE <- ifelse(hr_AE_1.1d$hr_threshold5 == "yes" | hr_AE_1.1d$hr_threshold15 == "yes" | hr_AE_1.1d$hr_threshold30 == "yes" | hr_AE_1.1d$hr_threshold60 == "yes", 'Yes', 'No')

str(hr_AE_1.1d)
table(hr_AE_1.1d$hr_AE)

unique(hr_AE_1.1d$project_id)

###save as csv

write.csv(hr_AE_1.1d, "~/files/datafiles/hr_1.1groupnewOct.csv")

##################################################
###repeated measure anova, quantify change
##################################################

#####get individual datasets
##5 min
str(hr_prepost_5)  

hr_5 <- select(hr_prepost_5, project_id, postmedian, premedian)
str(hr_5)

names(hr_5)[names(hr_5) == "postmedian"] <- "postmedian5"
str(hr_5)

###15mins

str(hr_prepost_15)

hr_15 <- select(hr_prepost_15, project_id, postmedian)
str(hr_15)

names(hr_15)[names(hr_15) == "postmedian"] <- "postmedian15"
str(hr_15)

##30mins

hr_30 <- select(hr_prepost_30, project_id, postmedian)
str(hr_30)

names(hr_30)[names(hr_30) == "postmedian"] <- "postmedian30"
str(hr_30)

##60mins
hr_60 <- select(hr_prepost_60, project_id, postmedian)
str(hr_60)

names(hr_60)[names(hr_60) == "postmedian"] <- "postmedian60"
str(hr_60)

####################join together

hr_change <- full_join(hr_5, hr_15, by="project_id")
str(hr_change)

hr_change1 <- full_join(hr_change, hr_30, by="project_id")
str(hr_change1)

hr_change2 <- full_join(hr_change1, hr_60, by="project_id")
str(hr_change2)

###change order of columns
hr_change3 <- hr_change2[, c(1, 3, 2, 4, 5, 6)]
str(hr_change3)

unique(hr_change3$project_id)

hr_change3$diff1 <- hr_change3$postmedian5 - hr_change3$premedian
hr_change3$diff2 <- hr_change3$postmedian15 - hr_change3$premedian
hr_change3$diff3 <- hr_change3$postmedian30 - hr_change3$premedian
hr_change3$diff4 <- hr_change3$postmedian60 - hr_change3$premedian
hr_change3$diff5 <- hr_change3$postmedian15 - hr_change3$postmedian5
hr_change3$diff6 <- hr_change3$postmedian30 - hr_change3$postmedian5
hr_change3$diff7 <- hr_change3$postmedian60 - hr_change3$postmedian5
hr_change3$diff8 <- hr_change3$postmedian30 - hr_change3$postmedian15
hr_change3$diff9 <- hr_change3$postmedian60 - hr_change3$postmedian15
hr_change3$diff10 <- hr_change3$postmedian60 - hr_change3$postmedian30

summary(hr_change3)

################change to long format

hr_change4 <- tidyr::gather(hr_change3, key=time, value=medianhr, premedian:postmedian60) %>% 
                    arrange(project_id)
                    
head(hr_change4)
str(hr_change4)

test <- hr_change4 %>% friedman_test(medianhr ~ time |project_id)
test

test1 <- hr_change4 %>% friedman_effsize(medianhr ~ time |project_id)
test1

test3 <- hr_change4 %>% wilcox_test(medianhr ~ time, paired = TRUE, p.adjust.method = "bonferroni")
test3

#################################################################################################################
####multilevel regression
################################################################################################################

str(hr_change4)
unique(hr_change4$project_id)

#######################################
####convert to factor
################################

hr_change4$time <- as.factor(hr_change4$time)
str(hr_change4)

levels(hr_change4$time)
#################################################
#####need to bring in other variables
#################################################

####GENDER
#####gender from Demo explor first
str(demographic_data)

hr_gender <- select(demographic_data, project_id, sex)
str(hr_gender)

####join to osi_change4

hr_change5 <- left_join(hr_change4, hr_gender, by="project_id")
str(hr_change5)
unique(hr_change5$project_id)

######AGE
#####age from Demo explor first
str(age_data)

hr_age <- select(age_data, project_id, age_in_months)
str(hr_age)

####join to osi_change5

hr_change6 <- left_join(hr_change5, hr_age, by="project_id")
str(hr_change6)
unique(hr_change6$project_id)

#######WEIGHT
#########weight from Demo explor first

str(weight_data6a)
hr_weight <- select(weight_data6a, project_id, weight)
str(hr_weight)

####join to osi_change6

hr_change7 <- left_join(hr_change6, hr_weight, by="project_id")
str(hr_change7)
unique(hr_change7$project_id)

############ADMSSION TYPE
#######type from Demo explor first

str(admission_data1)
hr_admission <- select(admission_data1, project_id, admission.type)
str(hr_admission)

####join to osi_change7

hr_change8 <- left_join(hr_change7, hr_admission, by="project_id")
str(hr_change8)
unique(hr_change8$project_id)

#######################UNIT
#######unit from Demo explor first

str(ICUunit_data2)
hr_unit <- select(ICUunit_data2, project_id, Unit)
str(hr_unit)

####join to osi_change7

hr_change9 <- left_join(hr_change8, hr_unit, by="project_id")
str(hr_change9)
unique(hr_change9$project_id)

################PELOD

pelod_first <- xap.read_table("firstpelod")

str(pelod_first)
hr_pelod <- select(pelod_first, project_id, pelod_score)
str(hr_pelod)

####join to hr_change9

hr_change10 <- left_join(hr_change9, hr_pelod, by="project_id")
str(hr_change10)
unique(hr_change10$project_id)

##########################diagnosis
######bring in from Demo explo 1.1

#str(diagnosis_data1)

#hr_diagnosis <- select(diagnosis_data1, project_id, diagnosis)
#str(hr_diagnosis)

####join to hr_change10

#hr_change11 <- left_join(hr_change10, hr_diagnosis, by="project_id")
#str(hr_change11)
#unique(hr_change11$project_id)

###rename for regression and change reference to premedian

hr_change10$time <- relevel(hr_change10$time, "postmedian60")
hr_change10$time <- relevel(hr_change10$time, "postmedian30")
hr_change10$time <- relevel(hr_change10$time, "postmedian15")
hr_change10$time <- relevel(hr_change10$time, "postmedian5")
 hr_change10$time <- relevel(hr_change10$time, "premedian")

str(hr_change10)

#boxplot(hr_change11$medianhr ~ hr_change11$time)

levels(hr_change10$time) <- c("5 pre", "0-5 post", "10-15 post", "25-30 post", "55-60 post")

str(hr_change10)

beanplot(hr_change10$medianhr ~ hr_change10$time, overallline = "median", beanlines = "median",
            col = list("steelblue1", "steelblue2", "steelblue3", "steelblue", "steelblue4"), border = c("steelblue1", "steelblue2", "steelblue3", "steelblue", "steelblue4"),
        xlab = "Time point in relation to physiotherapy treatment (minutes)", ylab = "Median heart rate")

####################################
###multi level models
####################################

model6 <- lmer(medianhr ~ time + log(weight) + admission.type + Unit + log(pelod_score) + (1|project_id), data=hr_change10)
summary(model6)

confint(model6)












###############################Script 15 – Heart rate first session demographic exploration################################################


#########################
# load in data sets
#############################

##load in complete 01

demographic01_data <- xap.read_table("complete01_caboodle_patient_demographics") # read in variables table for all patients

# check data has loaded
head(demographic01_data)
dim(demographic01_data)
tail(demographic01_data)

##load in complete 02

demographic02_data <- xap.read_table("complete02_caboodle_patient_demographics") # read in variables table for all patients

# check data has loaded
head(demographic02_data)
dim(demographic02_data)
tail(demographic02_data)

##load in partial

demographic_partial <- xap.read_table("partial_caboodle_patient_demographics") # read in variables table for all patients

# check data has loaded
head(demographic_partial)
dim(demographic_partial)
tail(demographic_partial)

##########################
##join datasets together
#########################

demographic_data1 <- rbind(demographic01_data, demographic02_data)

head(demographic_data1)
dim(demographic_data1)
tail(demographic_data1)

demographic_dataa <- rbind(demographic_data1, demographic_partial)

str(demographic_dataa)

##########################
##load in HR group
###########################

HRgroup <- xap.read_table("hr_1oct")
str(HRgroup)

##get rid of id column
HRgroup1 <- select(HRgroup, project_id, hr_ae)
str(HRgroup1)

#############################################
###join hr group to full demo
############################################

demographic_data_hr <- inner_join(demographic_dataa, HRgroup1, by="project_id")
str(demographic_data_hr)

####################
# explore gender
######################

t.genderhr <- table(demographic_data_hr$sex)

addmargins(t.genderhr)
round(prop.table(t.genderhr)*100, 2) #to give percentage

###############################
# exploring age
###################################

##load in data set complete 01
age01_data <- xap.read_table("complete01_wp2_physio_details_check")
str(age01_data)

##load in data set complete 02
age02_data <- xap.read_table("complete02_wp2_physio_details_check")
str(age02_data)

##load in partial
age_partial <- xap.read_table("partial_wp2_physio_details_check")
str(age_partial)

#### join age data sets

age_data1 <- rbind(age01_data, age02_data)
head(age_data1)
str(age_data1)

age_dataa <- rbind(age_data1, age_partial)
str(age_dataa)

class (age_dataa$age_in_months) #this is a character needs to be integer
age_dataa[c(3,4,6)] <- lapply(age_dataa[c(3,4,6)], as.numeric)
str(age_dataa)

#############################################
###join hr group to full age
############################################

age_data_hr <- inner_join(age_dataa, HRgroup1, by="project_id")
str(age_data_hr)

summary(age_data_hr$age_in_months)

#####################################
### weight 
#####################################

## load in data set 1
weight01_data <- xap.read_table("complete01w_caboodle_patient_selected_flowsheetrows_clin_pivot")
str(weight01_data)

weight01_data <- select(weight01_data, project_id, taken_datetime, R.DRUG.CALCULATION.WEIGHT_grams, WEIGHT.SCALE_grams)
weight01_data[c(3,4)] <- lapply(weight01_data[c(3,4)], as.integer)
str(weight01_data)

## load in data set 2

weight02_data <- xap.read_table("complete02w_caboodle_patient_selected_flowsheetrows_clin_pivot")
str(weight02_data)

weight02_data <- select(weight02_data, project_id, taken_datetime, R.DRUG.CALCULATION.WEIGHT_grams, WEIGHT.SCALE_grams)
weight02_data[c(3,4)] <- lapply(weight02_data[c(3,4)], as.integer)
str(weight02_data)

##load in partial 

weight_p <- xap.read_table("partialw_caboodle_patient_selected_flowsheetrows_clin_pivot")
str(weight_p)

weight_p <- select(weight_p, project_id, taken_datetime, R.DRUG.CALCULATION.WEIGHT_grams, WEIGHT.SCALE_grams)
weight_p[c(3,4)] <- lapply(weight_p[c(3,4)], as.integer)
str(weight_p)

##cominbe data sets

weight_dataa <- rbind(weight01_data, weight02_data)
weight_data <- rbind(weight_dataa, weight_p)

str(weight_data)

# combine to one column
weight_data1 <- weight_data %>% 
    mutate(weight = ifelse(is.na(weight_data$WEIGHT.SCALE_grams), weight_data$R.DRUG.CALCULATION.WEIGHT_grams, weight_data$WEIGHT.SCALE_grams))
str(weight_data1)

tail(weight_data1)
### link weight to date of first physio

#load in physio dates data set 1

physiotimes1_data <- xap.read_table("complete01_wp2_physio_times_check") # read in variables table for all patients

##load in physio times data set 2

physiotimes2_data <- xap.read_table("complete02_wp2_physio_times_check")

##load partial

physiotimes_p<- xap.read_table("partial_wp2_physio_times_check")

##combine data sets

physio_firsta <- rbind(physiotimes1_data, physiotimes2_data)
physio_first <- rbind(physio_firsta, physiotimes_p)
str(physio_first)

##pick first session
physio_first <- subset(physio_first, day == 1 & session == 1)
str(physio_first)

# join datasets

weight_data2 <- select(weight_data1, project_id, taken_datetime, weight)

weight_data3 <- left_join(physio_first, weight_data2, by = "project_id") 

str(weight_data3)

#find difference between dates/times 

weight_data4 <- weight_data3 %>%
 mutate(dateDiff = (weight_data3$datetime - weight_data3$taken_datetime))
str(weight_data4) 

## filter to 2 weeks prior to physio only (doesnt work with negative numbers)

weight_data5 <- filter(weight_data4, weight_data4$dateDiff %in% (0:1209600))
str(weight_data5)

#filter dates to keep only closest (min) datediff with a value (not NA), grouped by id and index datetime

weight_data5 <- weight_data5[complete.cases(weight_data5), ] 

weight_data6 <- weight_data5 %>% 
group_by(weight_data5$project_id) %>%
filter(dateDiff == min(dateDiff))

weight_data6 <- weight_data6 %>%
        ungroup()
str(weight_data6)
head(weight_data6)

####################################
#####join to hr group
#################################

weight_hr <- inner_join(weight_data6, HRgroup1, by="project_id")
str(weight_hr)

duplicated(weight_hr$project_id)

weight_hr1 <- weight_hr  %>% distinct(weight_hr$project_id, .keep_all = TRUE)

str(weight_hr1)

summary(weight_hr1)

######################
# Exploring which ICU
######################

##load in data set 1
wardstay01_data <- xap.read_table("complete01_caboodle_patient_ward_stays") 
str(wardstay01_data)

##load in data set 2
wardstay02_data <- xap.read_table("complete02_caboodle_patient_ward_stays") 
str(wardstay02_data)

##load in partial data
wardstay_p <- xap.read_table("partial_caboodle_patient_ward_stays") 
str(wardstay_p)

##join 2 data sets toegther

wardstay_dataa <- rbind(wardstay01_data, wardstay02_data)
wardstay_data <- rbind(wardstay_dataa, wardstay_p)

str(wardstay_data)


tableICU <- table(wardstay_data$project_id, wardstay_data$ward_code)
print(tableICU)

unique(wardstay_data$ward_code)

wardstay_data[109,]

# need to make new variables picu, cicu, nicu 

wardstay_data1 <- wardstay_data %>%    #seperates out PICU and CICU
mutate(CICU = ifelse(wardstay_data$ward_code=='CICU', 1, 0),
         PICU= ifelse(wardstay_data$ward_code=='PICU', 1, 0),
         NICU= ifelse(wardstay_data$ward_code=='ALLIGATOR' |wardstay_data$ward_code== 'NICU', 1, 0))
         
str(wardstay_data1)

##############################
###find unit for first session
###############################

#load in physio dates data set 1

physiotimes1_data <- xap.read_table("complete01_wp2_physio_times_check") # read in variables table for all patients

##load in physio times data set 2

physiotimes2_data <- xap.read_table("complete02_wp2_physio_times_check")

##load partial

physiotimes_p<- xap.read_table("partial_wp2_physio_times_check")

##combine data sets

physio_firsta <- rbind(physiotimes1_data, physiotimes2_data)
physio_first <- rbind(physio_firsta, physiotimes_p)
str(physio_first)

##pick first session
physio_first <- subset(physio_first, day == 1 & session == 1)
str(physio_first)

###############################################
##join data sets by project id and nearest date
################################################

# join datasets

ICU_unit <- left_join(physio_first, wardstay_data1, by = "project_id") 

str(ICU_unit)

#find difference between dates/times 

ICU_unit1<- ICU_unit %>%
 mutate(dateDiff = (ICU_unit$datetime - ICU_unit$start_datetime))
str(ICU_unit1) 

## filter to 2 weeks prior to physio only (doesnt work with negative numbers)

ICU_unit2 <- filter(ICU_unit1, ICU_unit1$dateDiff %in% (0:1209600))
str(ICU_unit2)

#filter dates to keep only closest (min) datediff with a value (not NA), grouped by id and index datetime
#ICU_unit2 <- weight_data5[complete.cases(weight_data5), ] 

ICU_unit3<- ICU_unit2 %>% 
group_by(ICU_unit2$project_id) %>%
filter(dateDiff == min(dateDiff))  %>%
        ungroup()
        
str(ICU_unit3)

unique(ICU_unit3$project_id)

ICUunit_data1 <- select(ICU_unit3, project_id, CICU, PICU, NICU) 
str(ICUunit_data1)
 
# now put back into a single variable

ICUunit_data1$CICU <- ifelse(ICUunit_data1$CICU==1, "CICU", NA)
ICUunit_data1$PICU <- ifelse(ICUunit_data1$PICU==1, "PICU", NA)
ICUunit_data1$NICU <- ifelse(ICUunit_data1$NICU==1, "NICU", NA)

ICUunit_data2 <- ICUunit_data1 %>%
  unite("Unit", CICU:NICU, na.rm = TRUE)
str(ICUunit_data2)

# table
t.location <- table(ICUunit_data2$Unit)

addmargins(t.location)
t.location <- round(prop.table(t.location)*100, 2) #to give percentage
print(t.location)

###check for hr group

unithr <- inner_join(ICUunit_data2, HRgroup1, by="project_id")
str(unithr)

t.unithr <- table(unithr$Unit)

addmargins(t.unithr)
round(prop.table(t.unithr)*100, 2) #to give percentage

##########################################
######### exploring length of ICU stay
#########################################

str(wardstay_data)

ICUlength_data <- select(wardstay_data, project_id, ward_stay_days) # selecting 2 columns
str(ICUlength_data)

# combine rows by id, adding values

ICUlength_data_sum <- aggregate(. ~ project_id, data=ICUlength_data, FUN=sum)
str(ICUlength_data_sum)



los_hr <- inner_join(ICUlength_data_sum, HRgroup1, by="project_id")
str(los_hr)

summary(los_hr)

##############################
####  admission type
################################

##load in data set 1
admission01_data <- xap.read_table("complete01_caboodle_patient_hospital_admissions")

dim(admission01_data)
str(admission01_data)

##load in data set 2

admission02_data <- xap.read_table("complete02_caboodle_patient_hospital_admissions")

dim(admission02_data)
str(admission02_data)

###load in partial

admission_p <- xap.read_table("partial_caboodle_patient_hospital_admissions")

##combine datasets

admission_dataa <- rbind(admission01_data, admission02_data)
admission_data <- rbind(admission_dataa, admission_p)
str(admission_data)

unique(admission_data$admission_type)
table(admission_data$admission_type)
is.na(admission_data$admission_type)

admission_data[400:450,]

# create 2 variables

admission_data1 <- admission_data %>%
mutate(Emergency = ifelse(admission_data$admission_type == "Emergency - A&E, Casualty, or Dental Casualty Department" | admission_data$admission_type == "Emergency Transfer" | admission_data$admission_type == "Emergency - Consultant Clinic" | admission_data$admission_type == "Emergency - Bed Bureau" | admission_data$admission_type == "Emergency - Other" | admission_data$admission_type == "Baby Born Elsewhere" | admission_data$admission_type == "Emergency - via A&E of another Health Care Provider", 1, 0),
        Elective = ifelse(admission_data$admission_type == "Elective - Planned" | admission_data$admission_type == "Elective - Booked" | admission_data$admission_type == "Non-Emergency Transfer" | admission_data$admission_type == "Elective - Waiting List", 1, 0))

str(admission_data1)

admission_data1$Emergency = ifelse(admission_data1$Emergency==1, "Emergency", NA)
admission_data1$Elective = ifelse(admission_data1$Elective==1, "Elective", NA)

admission_data1 <- admission_data1 %>%
  unite("admission.type", Emergency:Elective, na.rm = TRUE)

type_hr <- inner_join(admission_data1, HRgroup1, by="project_id")
str(type_hr)

t.type <- table(type_hr$admission.type)

addmargins(t.type)
round(prop.table(t.type)*100, 2) #to give percentage

################################################
##pelod
###############################################

###read in pelod data

pelod_first <- xap.read_table("firstpelod")

#####join session times to hr group

pelod_hr <- inner_join(pelod_first, HRgroup1, by="project_id")
str(pelod_hr)

summary(pelod_hr)

#####################################################
##COVID
#################################################

lab1_data <- xap.read_table("complete01_caboodle_patient_selected_lab_components_all_pivot")
str(lab1_data)

lab1_data1 <- select(lab1_data, project_id, collected_datetime, COVID19RES_SARS.CoV.2.by.PCR.Result)
str(lab1_data1)

lab2_data <- xap.read_table("complete02_caboodle_patient_selected_lab_components_all_pivot")
str(lab2_data)

lab2_data1 <- select(lab2_data, project_id, collected_datetime, COVID19RES_SARS.CoV.2.by.PCR.Result)
str(lab2_data1)

labpart <- xap.read_table("partial_caboodle_patient_selected_lab_components_all_pivot")
str(labpart)

labpart1 <- select(labpart, project_id, collected_datetime, COVID19RES_SARS.CoV.2.by.PCR.Result)
str(labpart1)

###join together

lab_covid <- rbind(lab1_data1, lab2_data1)
lab_covid1 <- rbind(lab_covid, labpart1)
str(lab_covid1)

#####################################
####find results during admission
####################################

str(admission_data)
adm_1 <- select(admission_data, project_id, start_datetime, end_datetime)
str(adm_1)

###join and filter between dates

covid_all <- inner_join(lab_covid1, adm_1, by="project_id")
str(covid_all)

covid_all1 <- filter(covid_all, collected_datetime >= start_datetime & collected_datetime <= end_datetime)
str(covid_all1)

table(covid_all1$project_id, covid_all1$COVID19RES_SARS.CoV.2.by.PCR.Result)

###create new variable
covid_all1$covid <- ifelse(covid_all1$COVID19RES_SARS.CoV.2.by.PCR.Result == "RNA Detected", "Yes", "No")
str(covid_all1)

###change NAs to no

covid_all1$covid[is.na(covid_all1$covid)] <- 'No'

unique(covid_all1$project_id)

########join to hr group

covid_hr <- inner_join(HRgroup1, covid_all1, by="project_id")
str(covid_hr)

unique(covid_hr$project_id)

###subset those with yes

covid_positive<- subset(covid_hr, covid == 'Yes')
str(covid_positive)

###get rid of repeats

covidhr <- select(covid_positive, project_id, covid)
covid_hr <- covidhr[!duplicated(covidhr$project_id), ]

str(covid_hr)

###join to full data set
(demographic_data_hr

covid_hr1 <- full_join(demographic_data_hr, covid_hr, by="project_id")
str(covid_hr1)

###change NA to no in covid column
covid_hr1$covid[is.na(covid_hr1$covid)] <- 'no'
 
table(covid_hr1$covid, covid_hr1$hr_ae)

fisher.test(covid_hr1$covid, covid_hr1$hr_ae)

######################################
# explore episodes, diagnosis
######################################

## load in data set complete 01
episode01_data <- xap.read_table("complete01_caboodle_patient_episodes") # read in variables table for all patients

# check data has loaded
head(episode01_data)
dim(episode01_data)
tail(episode01_data)

##load in data set complete 02

episode02_data <- xap.read_table("complete02_caboodle_patient_episodes") # read in variables table for all patients

# check data has loaded
head(episode02_data)
dim(episode02_data)
tail(episode02_data)

##load in partial

episode_partial <- xap.read_table("partial_caboodle_patient_episodes") # read in variables table for all patients

# check data has loaded
str(episode_partial)

##join data sets

episode_data1 <- rbind(episode01_data, episode02_data)
dim(episode_data1)
str(episode_data1)
head(episode_data1)
tail(episode_data1)
episode_data <- rbind(episode_data1, episode_partial)
str(episode_data)

# need to remove duplicates
episode_data <- distinct(episode_data, episode_data$project_id, .keep_all = TRUE)
dim(episode_data)
str(episode_data)

##select only columns want
episode_data1 <- select(episode_data, project_id, start_datetime, end_datetime, primary_diagnosis_code, primary_diagnosis_name)

unique(episode_data1$primary_diagnosis_name)
str(episode_data1)

##change NA's to unknown
episode_data1[is.na(episode_data1)] <- 'unknown'
is.na(episode_data1)

#class(episode_data$primary_diagnosis_name)
#episode_data$primary_diagnosis_name <- as.factor(episode_data$primary_diagnosis_name) dont seem to have to change to factor

# create individual variables

#####################################
# create individual diagnosis variables
#####################################

diagnosis_data <- episode_data1 %>%    #seperates out and changes diagnosis groups
mutate(Respiratory= ifelse(grepl('^J1', episode_data1$primary_diagnosis_code) | grepl('^J2', episode_data1$primary_diagnosis_code) | grepl('^J4', episode_data1$primary_diagnosis_code) | grepl('^J6', episode_data1$primary_diagnosis_code) | grepl('^J8', episode_data1$primary_diagnosis_code) | grepl('^J9', episode_data1$primary_diagnosis_code) | episode_data1$primary_diagnosis_code == "P271" | episode_data1$primary_diagnosis_code =="P240" | episode_data1$primary_diagnosis_code == "P229" | episode_data1$primary_diagnosis_code == "P285" | episode_data1$primary_diagnosis_code == "Q330" | episode_data1$primary_diagnosis_code == "R068" | episode_data1$primary_diagnosis_code == "R092" | episode_data1$primary_diagnosis_code == "P284"| episode_data1$primary_diagnosis_code == "P288", 1, 0),
    Renal= ifelse(episode_data1$primary_diagnosis_code == "N10X" | episode_data1$primary_diagnosis_code == "Q641", 1, 0),
    Musculoskeletal= ifelse(grepl('^M', episode_data1$primary_diagnosis_code), 1, 0),
    Hepatic= ifelse(episode_data1$primary_diagnosis_code == "K270", 1, 0),
    Endocrine= ifelse(grepl('^E', episode_data1$primary_diagnosis_code) | episode_data1$primary_diagnosis_code == "P748", 1, 0),
    Haematology_oncology= ifelse(grepl('^C', episode_data1$primary_diagnosis_code) | episode_data1$primary_diagnosis_code == "D151" | episode_data1$primary_diagnosis_code == "D761" | episode_data1$primary_diagnosis_code == "D487" | episode_data1$primary_diagnosis_code == "D71X", 1, 0),
    Cardiovascular = ifelse(grepl('^Q2', episode_data1$primary_diagnosis_code) | grepl('^I2', episode_data1$primary_diagnosis_code ) | grepl('^I3', episode_data1$primary_diagnosis_code) | grepl('^I4', episode_data1$primary_diagnosis_code) | grepl('^I7', episode_data1$primary_diagnosis_code) | episode_data1$primary_diagnosis_code == "I500" | episode_data1$primary_diagnosis_code == "I971" | episode_data1$primary_diagnosis_code == "T828" | episode_data1$primary_diagnosis_code == "P291" | episode_data1$primary_diagnosis_code == "P293" | episode_data1$primary_diagnosis_code == "P298", 1, 0),
    Neurology_neurosurgery= ifelse(grepl('^G', episode_data1$primary_diagnosis_code) | grepl('^S', episode_data1$primary_diagnosis_code) | grepl('^P9', episode_data1$primary_diagnosis_code) | grepl('^I6', episode_data1$primary_diagnosis_code) | episode_data1$primary_diagnosis_code == "T850" | episode_data1$primary_diagnosis_code == "P525" | episode_data1$primary_diagnosis_code == "Q858" | episode_data1$primary_diagnosis_code == "R568" | episode_data1$primary_diagnosis_code == "R55X" | episode_data1$primary_diagnosis_code == "P252" | episode_data1$primary_diagnosis_code == "P219", 1, 0),
    Gastroenterology= ifelse(grepl('^K', episode_data1$primary_diagnosis_code) | grepl('^Q7', episode_data1$primary_diagnosis_code) | episode_data1$primary_diagnosis_code == "R633" | episode_data1$primary_diagnosis_code == "A081" | episode_data1$primary_diagnosis_code == "Q423" | episode_data1$primary_diagnosis_code == "R11X" | episode_data1$primary_diagnosis_code == "Q390" | episode_data1$primary_diagnosis_code == "Q393" | episode_data1$primary_diagnosis_code == "Q411" | episode_data1$primary_diagnosis_code == "T286" | episode_data1$primary_diagnosis_code == "T855" | episode_data1$primary_diagnosis_code == "Q391" | episode_data1$primary_diagnosis_code == "Q392" | episode_data1$primary_diagnosis_code == "P540", 1, 0), 
    Airway= ifelse(grepl('^J3', episode_data1$primary_diagnosis_code) | episode_data1$primary_diagnosis_code == "Q318" | episode_data1$primary_diagnosis_code == "Q320" | episode_data1$primary_diagnosis_code == "Q321" | episode_data1$primary_diagnosis_code == "Q310" | episode_data1$primary_diagnosis_code == "Q311" | episode_data1$primary_diagnosis_code == "R061", 1, 0),
    Sepsis= ifelse(grepl('^A4', episode_data1$primary_diagnosis_code) | episode_data1$primary_diagnosis_code == "P360", 1, 0),
    Other= ifelse(episode_data1$primary_diagnosis_code == "D821" | episode_data1$primary_diagnosis_code == "D180" | episode_data1$primary_diagnosis_code == "U071" | episode_data1$primary_diagnosis_code == "T810" | episode_data1$primary_diagnosis_code == "P398" | episode_data1$primary_diagnosis_code == "T823" | episode_data1$primary_diagnosis_code == "T818" | episode_data1$primary_diagnosis_code == "R560" | episode_data1$primary_diagnosis_code == "T741" | episode_data1$primary_diagnosis_code == "A199" | episode_data1$primary_diagnosis_code == "B349" | episode_data1$primary_diagnosis_code == "T856" | episode_data1$primary_diagnosis_code == "T543"| episode_data1$primary_diagnosis_code == "T813", 1, 0),
    Unknown= ifelse(episode_data1$primary_diagnosis_code == "unknown", 1, 0))

str(diagnosis_data)

# rename so can merge
diagnosis_data$Respiratory <- ifelse(diagnosis_data$Respiratory==1, "Respiratory", NA) 
diagnosis_data$Renal <- ifelse(diagnosis_data$Renal==1, "Renal", NA) 
diagnosis_data$Musculoskeletal <- ifelse(diagnosis_data$Musculoskeletal==1, "Musculoskeletal", NA) 
diagnosis_data$Hepatic <- ifelse(diagnosis_data$Hepatic==1, "Hepatic", NA) 
diagnosis_data$Endocrine <- ifelse(diagnosis_data$Endocrine==1, "Endocrine", NA) 
diagnosis_data$Haematology_oncology <- ifelse(diagnosis_data$Haematology_oncology==1, "Haematology/oncology", NA) 
diagnosis_data$Cardiovascular <- ifelse(diagnosis_data$Cardiovascular==1, "Cardiovascular", NA) 
diagnosis_data$Neurology_neurosurgery <- ifelse(diagnosis_data$Neurology_neurosurgery==1, "Neurology/neurosurgery", NA) 
diagnosis_data$Gastroenterology <- ifelse(diagnosis_data$Gastroenterology==1, "Gastroenterology", NA) 
diagnosis_data$Airway <- ifelse(diagnosis_data$Airway==1, "Airway", NA) 
diagnosis_data$Sepsis <- ifelse(diagnosis_data$Sepsis==1, "Sepsis", NA) 
diagnosis_data$Other <- ifelse(diagnosis_data$Other==1, "Other", NA) 
diagnosis_data$Unknown <- ifelse(diagnosis_data$Unknown==1, "Unknown", NA) 

# need to merge the columns
diagnosis_data1 <- diagnosis_data %>%
  unite("diagnosis", Respiratory:Unknown, na.rm = TRUE)
str(diagnosis_data1)

unique(diagnosis_data1$primary_diagnosis_name)
unique(diagnosis_data1$primary_diagnosis_code)

which(diagnosis_data1$primary_diagnosis_code == "I500") 

diagnosis_data1[391,]

## create table
t.diagnosis <- table(diagnosis_data1$diagnosis)

addmargins(t.diagnosis)
round(prop.table(t.diagnosis)*100, 2)

####join to HR group

diagnosis_data_hr <- inner_join(diagnosis_data1, HRgroup1, by="project_id")
str(diagnosis_data_hr)

t.diagnosis <- table(diagnosis_data_hr$diagnosis)

addmargins(t.diagnosis)
round(prop.table(t.diagnosis)*100, 2)

  
# graph without id linked
ggplot(diagnosis_data_hr, aes(x=diagnosis_data_hr$diagnosis, fill=diagnosis_data_hr$diagnosis)) + 
geom_bar() + # add a title
    xlab('Diagnosis group') + ylab('Number of patients') + # add axis names
      scale_y_continuous(expand = c(0, 0), limits = c(0, 310)) +
theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), axis.text.x=element_text(angle=45, hjust=1), legend.position="none", text = element_text(size = 14)) +
scale_fill_manual(breaks = c("Airway", "Cardiovascular", "Endocrine", "Gastroenterology", "Haematology/oncology", "Musculoskeletal", "Neurology/neurosurgery", "Other", "Renal", "Respiratory", "Sepsis"),
                        values=c("lightblue1", "lightskyblue1", "skyblue1", "skyblue2", "steelblue1", "steelblue3", "steelblue", "royalblue1", "royalblue3", "mediumblue", "royalblue4", "navy"))

###################################
####gestation
##########################################

full_longterm <- xap.read_table("full_longterm")
str(full_longterm)

hr_longterm1 <-inner_join(full_longterm, HRgroup1, by="project_id")
str(hr_longterm1)

table(hr_longterm1$gest_group)

###########################################################
###explore AE vs no AE
########################################################

####################
# explore gender 
######################

t.gender <- table(demographic_data_hr$sex , demographic_data_hr$hr_ae)

addmargins(t.gender)
round(prop.table(t.gender)*100, 2) #to give percentage

###stats difference

chisq <- chisq.test( demographic_data_hr$sex ,demographic_data_hr$hr_ae)
chisq

##################
##weight
##################

hist(weight_hr$weight)

###stats diff

hrmedian_weight <- weight_hr %>% 
group_by(hr_ae) %>% 
  summarize(median = median(weight))
  
hrweight_quant <- weight_hr %>% 
group_by(hr_ae) %>%  summarise(weight = quantile(weight, c(0.25, 0.5, 0.75)))  
            

wilcox.test(weight_hr$weight ~ weight_hr$hr_ae)

###############
##age
###############

hrmedian_age <- age_data_hr %>%
group_by(hr_ae) %>% summarize(median = median(age_in_months))
  
hrage_quant <- age_data_hr %>% 
group_by(hr_ae) %>%  summarise(age_in_months = quantile(age_in_months, c(0.25, 0.5, 0.75)))  
            

wilcox.test(age_data_hr$age_in_months ~ age_data_hr$hr_ae)

#########################
####admission type
#########################

t.admission <- table(type_hr$admission.type, type_hr$hr_ae)
t.admission

chisq <- chisq.test(type_hr$admission.type, type_hr$hr_ae)
chisq

###################################
####diagnosis
######################################

t.diag <- table(diagnosis_data_hr$diagnosis, diagnosis_data_hr$hr_ae)
t.diag

fisher.test(diagnosis_data_hr$diagnosis, diagnosis_data_hr$hr_ae, workspace=2e8)

str(diagnosis_data_hr)


names(diagnosis_data_hr)[names(diagnosis_data_hr) == 'diagnosis'] <- 'Diagnosis'

diagnosis_data_hr$AE <- ifelse(diagnosis_data_hr$hr_ae == "TRUE", "Adverse event group", "No adverse event group")

####change to 

ggplot(diagnosis_data_hr, aes(x=AE, fill=Diagnosis)) + 
    geom_bar(stat="count", position="fill") +
    scale_y_continuous(labels=scales::percent, expand = c(0, 0))+
   ylab("Percentage of patients") + xlab(NULL) +
 scale_fill_manual(breaks = c("Airway", "Cardiovascular", "Endocrine", "Gastroenterology", "Haematology/oncology", "Musculoskeletal", "Neurology/neurosurgery", "Other", "Renal", "Respiratory", "Sepsis"),
                        values=c("lightblue1", "lightskyblue1", "skyblue1", "skyblue2", "steelblue1", "steelblue3", "steelblue", "royalblue1", "royalblue3", "mediumblue", "royalblue4", "navy"))

###########################
####pelod
##############################

hrmedian_pelod <- pelod_hr %>% 
group_by(hr_ae) %>% 
  summarize(median = median(pelod_score))
            
hrpelod_quant <- pelod_hr %>% 
group_by(hr_ae) %>%  summarise(pelod_score = quantile(pelod_score, c(0.25, 0.5, 0.75)))  

wilcox.test(pelod_hr$pelod_score ~ pelod_hr$hr_ae)

###########################
####covid
###########################
table(covid_positive$covid, covid_positive$hr_ae)

covid_hr1 <- select(covid_hr, project_id, hr_ae, covid)
str(covid_hr1)

duplicated(covid_hr1)

covid_hr2 <- distinct(covid_hr1, .keep_all = TRUE)
str(covid_hr2)

########################################
## iNO
#########################################

####use vent_first and join to hr

vent_hr <- inner_join(vent_first, HRgroup1, by="project_id")
str(vent_hr)

t.iNO_hr <- table(vent_hr$iNO, vent_hr$hr_ae)
t.iNO_hr

fisher.test(vent_hr$iNO, vent_hr$hr_ae)

#################hfov

t.vent_hr <- table(vent_hr$ventmode, vent_hr$hr_ae)
t.vent_hr

fisher.test(vent_hr$ventmode, vent_hr$hr_ae)

###################################
###time of day
#####################################

str(physio_first)

physio_first1 <- physio_first %>% 
  mutate(hour = hour(physio_first$datetime), 
         Physio_time = case_when(hour %in% 9:16 ~ "day",                           
            TRUE ~ "Oncall"))
            
str(physio_first1)

#####join session times to osi group

times_hr <- inner_join(physio_first1, HRgroup1, by="project_id")
str(times_hr)

####explore time

t.hr_time <- table(times_hr$Physio_time, times_hr$hr_ae)

fisher.test(times_hr$Physio_time, times_hr$hr_ae)

########################
###gestation
#################

t.gest <-table(hr_longterm1$gest_group, hr_longterm1$hr_ae)
t.gest
fisher.test(hr_longterm1$gest_group, hr_longterm1$hr_ae)








##################################Script 16 – Heart rate first session physiotherapy treatment exploration################################################


##############################
# load in physio session data
##############################

##load in part 1
physio_details01 <- xap.read_table("complete01_wp2_physio_details_check")

str(physio_details01)

physio_details01[c(3,4,6,9,10)] <- lapply(physio_details01[c(3,4,6,9,10)], as.integer)
str(physio_details01)


##load in part 2
physio_details02 <- xap.read_table("complete02_wp2_physio_details_check")

str(physio_details02)

physio_details02[c(3,4,6,9,10)] <- lapply(physio_details02[c(3,4,6,9,10)], as.integer)
str(physio_details02)

##load in partial
physio_details_partial <- xap.read_table("partial_wp2_physio_details_check")

str(physio_details_partial)

physio_details_partial[c(3,4,6,9,10)] <- lapply(physio_details_partial[c(3,4,6,9,10)], as.integer)
str(physio_details_partial)

#############################
##join complete data sets
#############################

physiosessions_dataa <- rbind(physio_details01, physio_details02)
physiosessions_data <- rbind(physiosessions_dataa, physio_details_partial)
str(physiosessions_data)
tail(physiosessions_data)

###################################
###bring in hr group
#####################################

HRgroup <- xap.read_table("hr_1oct")
str(HRgroup)

##get rid of id column
HRgroup1 <- select(HRgroup, project_id, hr_ae)
str(HRgroup1)

############################
## load in times of sessions
##########################

##load in part 1
physio_times01 <- xap.read_table("complete01_wp2_physio_times_check")

str(physio_times01)

##load in part 2
physio_times02 <- xap.read_table("complete02_wp2_physio_times_check")

str(physio_times02)

##load in partial
physio_times_partial <- xap.read_table("partial_wp2_physio_times_check")

str(physio_times_partial)

###join data sets

physio_timesa <- rbind(physio_times01, physio_times02)
physio_times <- rbind(physio_timesa, physio_times_partial)
str(physio_times)

################################
####select first session only
###############################

physio_times_first <- subset(physio_times, day == 1 & session == 1)
str(physio_times_first)

#########################
##join for only hr group
##################################
physio_first_times_hr <- inner_join(physio_times_first, HRgroup1, by="project_id")
str(physio_first_times_hr)

#####################################
##find time of day of session
################################

physio_times1 <- physio_first_times_hr %>% 
  mutate(hour = hour(physio_first_times_hr$datetime), 
         Physio_time = case_when(hour %in% 9:16 ~ "day",                           
            TRUE ~ "Oncall"))

t.physiotime <- table(physio_times1$Physio_time, physio_times1$hr_ae)

addmargins(t.physiotime)
round(prop.table(t.physiotime)*100, 2)

fisher.test(physio_times1$Physio_time, physio_times1$hr_ae)

str(physio_times1)
#time catogories

physio_times2 <- physio_times1 %>% 
  mutate(time = case_when(
        hour %in% 9:16   ~"day",
      hour %in% 17:23 ~ "evening",
      hour %in% 00:8 ~ "night"))
    
  physio_times2$time = factor(
      physio_times2$time,
      level = c("day", "evening","night"))
  
t.timecatogory <- table(physio_times2$time)
print(t.timecatogory)

ggplot(physio_times2, aes(x = physio_times2$time, fill = physio_times2$time)) + 
  geom_bar() +
  ggtitle("Times of physiotherapy sessions") + # add a title
  xlab('Time catogories') + ylab('Number of treatment sessions') + # add axis names
 theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), axis.text.x = element_text(angle = 45, hjust=1), legend.position= "none") +
 scale_fill_viridis_d()

################################################
###### prepare data to explore physio treatments
################################################

str(physio_times_first)

##load in data set 1

treatment01_data <- xap.read_table("complete01_caboodle_patient_selected_flowsheetrows_phys_pivot")
str(treatment01_data)  

##load in data set 2

treatment02_data <- xap.read_table("complete02_caboodle_patient_selected_flowsheetrows_phys_pivot")
str(treatment02_data)  

##load in partial
treatment_p <- xap.read_table("partial_caboodle_patient_selected_flowsheetrows_phys_pivot")
str(treatment_p)  

##combine data sets

treatment_dataa <- rbind(treatment01_data, treatment02_data)
treatment_data <-rbind(treatment_dataa, treatment_p)
str(treatment_data)

unique(treatment_data$project_id)

######################
#manipulate variables
######################

# combine 2 same suction variables

treatment_data <- treatment_data %>% 
mutate(suctiontype = coalesce(treatment_data$RETIRED.R.AIRWAY.SUCTION.TYPE.OLD, treatment_data$R.GOSH.AIRWAY.SUCTION.TYPE))

str(treatment_data)  
head(treatment_data)

## select only columns need

treatment_data1 <- select(treatment_data, project_id, taken_datetime, R.AIRWAY.SUCTION.TOLERANCE, R.AIRWAY.SUCTION.DEVICE,  R.GOSH.IP.PHSYIO.VIBRATION, R.GOSH.IP.PHYSIO.DECOMPRESSION, 
                            R.GOSH.IP.SALINE.INSTILLATION, R.GOSH.IP.PHYSIO.BAG, R.GOSH.IP.PHYSIO.CHEST.PERCUSSION, R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION, suctiontype)

str(treatment_data1)

######################################################################
## join data frames for times and keep treatments with closest time
######################################################################

physio_data <- left_join(physio_times,treatment_data1 , by = "project_id") 

str(physio_data)
head(physio_data)

unique(physio_data$project_id)

physio_data1 <- physio_data %>%
  mutate(dateDiff = abs(physio_data$datetime - physio_data$taken_date)) %>%
  group_by(project_id, physio_data$datetime) %>%
  filter(dateDiff == 0)

str(physio_data1)
head(physio_data1)
tail(physio_data1)

physio_data1 <- physio_data1 %>%
    ungroup()
str(physio_data1)

range(physio_data1$dateDiff)

unique(physio_data1$R.GOSH.IP.SALINE.INSTILLATION)

str(physio_data1)
###########################################
############################################
### describe physio sessions
############################################
###########################################
###explore saline

t.saline <- table(physio_data1$R.GOSH.IP.SALINE.INSTILLATION)
addmargins(t.saline)
round(prop.table(t.saline)*100, 2)

# change variables into yes no and remove NA

physio_data1$R.GOSH.IP.PHYSIO.BAG <- ifelse(physio_data1$R.GOSH.IP.PHYSIO.BAG== "No",0 , 1)
physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION <- ifelse(physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION== "No",0,1)
physio_data1$R.GOSH.IP.PHSYIO.VIBRATION <- ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=="No", 0, 1)
physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION <- ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=="No", 0, 1)
physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION <-ifelse(physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION=="No", 0, 1)
physio_data1$R.GOSH.IP.SALINE.INSTILLATION <- ifelse(physio_data1$R.GOSH.IP.SALINE.INSTILLATION=="No", 0, 1)

physio_data1 <- mutate_if(physio_data1, is.numeric, ~replace(., is.na(.), 0))

physio_data1$R.GOSH.IP.PHYSIO.BAG <- ifelse(physio_data1$R.GOSH.IP.PHYSIO.BAG== "0",'No' , 'Yes')
physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION <- ifelse(physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION== "0",'No','Yes')
physio_data1$R.GOSH.IP.PHSYIO.VIBRATION <- ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=="0", 'No', 'Yes')
physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION <- ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=="0", 'No', 'Yes')
physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION <-ifelse(physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION=="0", 'No', 'Yes')
physio_data1$R.GOSH.IP.SALINE.INSTILLATION <- ifelse(physio_data1$R.GOSH.IP.SALINE.INSTILLATION=="0", 'No', 'Yes')

str(physio_data1)

is.na(physio_data1)

#########################################################
## explore suction in more detail just get open vs closed
#########################################################

unique(physio_data1$suctiontype)

physio_data1 <- physio_data1 %>%  
mutate(suctionopen = ifelse(physio_data1$suctiontype == 'Endotracheal Tube - Open' | physio_data1$suctiontype == 'Endotracheal Tube - Open;Nasal' | physio_data1$suctiontype == 'Endotracheal Tube - Open;Nasal;Oral' | physio_data1$suctiontype == 'Endotracheal Tube - Open;Nasopharyngeal' | physio_data1$suctiontype == 'Endotracheal Tube - Open;Nasopharyngeal;Oral' | physio_data1$suctiontype == 'Endotracheal Tube - Open;NPA' | physio_data1$suctiontype == 'Endotracheal Tube - Open;Oral' | physio_data1$suctiontype == 'Endotracheal Tube - Open;Oral;Nasal' | physio_data1$suctiontype == 'Endotracheal Tube - Open;Oral;Nasopharyngeal' | physio_data1$suctiontype == 'Endotracheal Tube - Open;Other (Comment)' | physio_data1$suctiontype == 'Oral;Endotracheal Tube - Open' | physio_data1$suctiontype == 'Oral;Nasal Prong;Endotracheal Tube - Open' | physio_data1$suctiontype == 'Oral;Nasal;Endotracheal Tube - Open', "Yes", "No"),
      suctionclosed = ifelse(physio_data1$suctiontype == 'Endotracheal Tube - Closed' | physio_data1$suctiontype == 'Endotracheal Tube - Closed;Oral' | physio_data1$suctiontype == 'Endotracheal Tube - Closed;Oral;Nasal', "Yes", "No"),
      both = ifelse(physio_data1$suctiontype == 'Endotracheal Tube - Closed;Endotracheal Tube - Open' | physio_data1$suctiontype == 'Endotracheal Tube - Closed;Endotracheal Tube - Open;Oral' | physio_data1$suctiontype == 'Endotracheal Tube - Closed;Endotracheal Tube - Open;Oral;Nasal' | physio_data1$suctiontype == 'Endotracheal Tube - Open;Endotracheal Tube - Closed' | physio_data1$suctiontype == 'Oral;Nasal;Endotracheal Tube - Open;Endotracheal Tube - Closed', "Yes", "No"),
      unknown = ifelse(physio_data1$suctiontype == 'Nasal' | physio_data1$suctiontype == 'Nasal Prong' | physio_data1$suctiontype == 'Trache'| physio_data1$suctiontype == 'NA', "Yes","No"))
        
str(physio_data1)

##create one suction variable

physio_data1$suctionopen <- ifelse(physio_data1$suctionopen == 'Yes', "Open", NA)
physio_data1$suctionclosed <- ifelse(physio_data1$suctionclosed == 'Yes', "Closed", NA)
physio_data1$both <- ifelse(physio_data1$both == 'Yes', "Both", NA)
physio_data1$unknown <- ifelse(physio_data1$unknown == 'Yes', "Unknown", NA)

physio_data1 <- physio_data1 %>%
  unite("Suction", suctionopen:unknown, na.rm = TRUE)

str(physio_data1)
unique(physio_data1$Suction)

t.suction <- table(physio_data1$Suction)
addmargins(t.suction)
round(prop.table(t.suction)*100, 2)

################################################
##create variable for MHI and CWV
#################################################

physio_data1$MHIvibs <- ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'Yes', "Yes", "No")

str(physio_data1)

physio_data1$MHICWV <- ifelse(physio_data1$R.GOSH.IP.PHYSIO.BAG == 'Yes' | physio_data1$MHIvibs == 'Yes', "Yes", "No")

str(physio_data1)

physio_data1[50:100,]
####################################################################
# create new combination of treatment variables with out suction
####################################################################

physio_data_comb1 <- physio_data1 %>%    
    mutate(saline.MHICWV.perc.decomp= ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$MHICWV == 'Yes', "saline.MHICWV.perc.decomp", NA),
           saline.MHICWV.perc= ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes'& physio_data1$MHICWV == 'Yes', "saline.MHICWV.perc", NA),
           saline.MHICWV.decomp= ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$MHICWV == 'Yes', "saline.MHICWV.decomp", NA),
            saline.MHICWV= ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$MHICWV == 'Yes', "saline.MHICWV", NA),
            saline.vibs.perc.decomp= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "saline.vibs.perc.deomp", NA),
            saline.vibs.perc= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "saline.vibs.perc", NA),
            saline.vibs= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "saline.vibs", NA),
            saline.perc.decomp= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "saline.perc.decomp", NA),
            saline.perc= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "saline.perc", NA),
            saline.decomp= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "saline.decomp", NA),
            saline.MHI.perc.decomp= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'Yes' & physio_data1$MHICWV == 'No', "saline.MHI.perc.decomp", NA),
            saline.MHI.perc= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'Yes' & physio_data1$MHICWV == 'No', "saline.MHI.perc", NA),
            saline.MHI.decomp= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'Yes' & physio_data1$MHICWV == 'No', "saline.MHI.decomp", NA),
            saline.MHI= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'Yes' & physio_data1$MHICWV == 'No', "saline.MHI", NA),
            MHICWV.perc.decomp= ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$MHICWV == 'Yes', "MHICWV.perc.decomp", NA),
            MHICWV.perc= ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$MHICWV == 'Yes', "MHICWV.perc", NA),
            MHICWV.decomp= ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' &  physio_data1$MHICWV == 'Yes', "MHICWV.decomp", NA),
            vibs.perc.decomp= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "vibs.perc.decomp", NA),
            vibs.perc= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "vibs.perc", NA),
            vibs.decomp= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "vibs.decomp", NA),
            MHI.perc.decomp= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'Yes' & physio_data1$MHICWV == 'No', "MHI.perc.decomp", NA),
            MHI.perc= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'Yes' & physio_data1$MHICWV == 'No', "MHI.perc", NA),
            MHI.decomp= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'Yes' & physio_data1$MHICWV == 'No', "MHI.decomp", NA),
            MHIonly= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'Yes' & physio_data1$MHICWV == 'No', "MHIonly", NA),
            CWVonly= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "CWVonly", NA),
            MHI.CWV= ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$MHICWV == 'Yes', "MHICWV", NA),
            perconly= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "perconly", NA),
            decomponly= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "decomponly", NA),
            salineonly= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "salineonly", NA))
       
str(physio_data_comb1)

# need to merge the columns to creat one treatment variable

physio_data_comb2 <- physio_data_comb1 %>%
  unite("Treatment", saline.MHICWV.perc.decomp:salineonly, na.rm = TRUE)
  
str(physio_data_comb2)  

##save as CSV

write.csv(physio_data_comb2, "~/files/datafiles/CPTall.csv")

unique(physio_data_comb2$Treatment)

##change "" to NA

physio_data_comb2$Treatment[physio_data_comb2$Treatment==""]<-NA
unique(physio_data_comb2$Treatment)

t.Treatment <- table(physio_data_comb2$Treatment)
addmargins(t.Treatment)
round(prop.table(t.Treatment)*100, 2)

####create suction only column
str(physio_data_comb2) 

physio_data_comb2$Treatment[is.na(physio_data_comb2$Treatment)] <- 'unknown'

t.Treatment <- table(physio_data_comb2$Treatment)
addmargins(t.Treatment)
round(prop.table(t.Treatment)*100, 2)

physio_data_comb2$suctioned <- ifelse(physio_data_comb2$Suction == 'Open' | physio_data_comb2$Suction =='Closed'|physio_data_comb2$Suction == 'Both', 'Yes', 'No')
physio_data_comb2$suctiononly <- ifelse(physio_data_comb2$Treatment == 'unknown' & physio_data_comb2$suctioned == 'Yes', 'suctiononly', NA)

t.suctiononly <- table(physio_data_comb2$suctiononly)

###change unknown treatment back to NA

physio_data_comb2$Treatment[physio_data_comb2$Treatment=="unknown"]<- NA

unique(physio_data_comb2$Treatment)

####join suctiononly to treatment

##remove suctioned column
physio_data_comb2a <-subset(physio_data_comb2, select = -suctioned)

str(physio_data_comb2a)
physio_data_comb3 <- physio_data_comb2a %>%
  unite("Treatmentnew", Treatment:suctiononly, na.rm = TRUE)
  
str(physio_data_comb3)  
unique(physio_data_comb3$Treatmentnew)

physio_data_comb3$Treatmentnew[physio_data_comb3$Treatmentnew==""]<-NA
unique(physio_data_comb3$Treatmentnew)

t.Treatmentnew <- table(physio_data_comb3$Treatmentnew)
addmargins(t.Treatmentnew)
round(prop.table(t.Treatmentnew)*100, 2)

####subset for day 1 session1

physio_data_comb1_1 <- subset(physio_data_comb3, day == 1 & session == 1)
str(physio_data_comb1_1)

###join to osi data

physio_hr <- inner_join(physio_data_comb1_1, HRgroup1, by="project_id")
str(physio_hr)
unique(physio_hr$project_id)

t.physio <- table(physio_hr$Treatmentnew, physio_hr$hr_ae)
t.physio
fisher.test(physio_hr$Treatmentnew, physio_hr$hr_ae, workspace=2e8)












#########################################Script 17 – Mean blood pressure first session exploration###########################################


##########################
##load in mbp files
###################################

##data set 1

mbp1 <- xap.read_table("mbp1_1_1")

str(mbp1)

mbp1a <- select(mbp1, project_id, datetime, pre_datetime, start_datetime, end_datetime, record_date_time,record_date_time, mbp)

str(mbp1a)

##data set 2

mbp2 <-xap.read_table("mbp2_1_1")
str(mbp2)

mbp2a <- select(mbp2, project_id, datetime, pre_datetime, start_datetime, end_datetime, record_date_time,record_date_time, mbp)

str(mbp2a)

##partial data set

mbp_p <- xap.read_table("mbpp_1_1")
str(mbp_p)

mbp_p1 <- select(mbp_p, project_id, datetime, pre_datetime, start_datetime, end_datetime, record_date_time,record_date_time, mbp)

str(mbp_p1)

###################################################
###################################################
# combine part 1 and part 2 and partial mbp files
####################################################
##################################################

#combine 1 & 2

MBP_a <- rbind(mbp1a, mbp2a)

str(MBP_a)

#combing with partial

MBP_first <- rbind(MBP_a, mbp_p1)

str(MBP_first)
unique(MBP_first$project_id)

###############
##explore mbp
#############

summary(MBP_first)

ggplot(MBP_first, aes(x=mbp)) + geom_histogram()

######################################################################################
# to plot raw data on graph - calculate time difference from first recorded (baseline)
#######################################################################################

 mbp_first_data <- MBP_first %>%
  arrange(project_id, record_date_time) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time - pre_datetime,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(mbp_first_data)

ggplot(mbp_first_data, aes(x=diff_secs, y=mbp, color = project_id)) + 
 geom_point(aes(color = project_id), size = 1) +
            ggtitle("Mean arterial blood pressure pre and post physio") + # add a title
    xlab('Time (seconds)') + ylab('MBP') + # add axis names
    xlim(0,7500) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position="none") +
             scale_color_viridis(discrete = TRUE, option = "D") +
                 geom_vline(xintercept = c(1800, 3600), color = "red")

##############################################################
###create pre and post data set
#############################################################
## pre physio
pre_mbp_first <- MBP_first %>% group_by(project_id) %>%
filter(record_date_time > pre_datetime & record_date_time < start_datetime) %>% ungroup()
str(pre_mbp_first)
         
## post physio            
             
post_mbp_first <-  MBP_first %>% group_by(project_id) %>%
filter(record_date_time > datetime & record_date_time < end_datetime) %>% ungroup()
str(post_mbp_first)

summary(pre_mbp_first)
summary(post_mbp_first)

#########################################################################
# to plot raw data on graph - calculate time difference from first recorded (baseline)
#########################################################################

###pre physio

pre_mbp_first2 <- pre_mbp_first %>%
  arrange(project_id, record_date_time) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time - pre_datetime,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(pre_mbp_first2)

ggplot(pre_mbp_first2, aes(x=diff_secs, y=mbp, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            ggtitle("Arterial MBP pre physiotherapy") + # add a title
    xlab('Time (secs)') + ylab('MBP') + # add axis names
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
             
###post physio

 post_mbp_first2 <- post_mbp_first %>%
  arrange(project_id, record_date_time) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time - datetime,
         diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(post_mbp_first2)

ggplot(post_mbp_first2, aes(x=diff_secs, y=mbp, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            ggtitle("Arterial MBP post physiotherapy") + # add a title
    xlab('Time (secs)') + ylab('MBP') + # add axis names
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D")             
             
########################################
# prepare data to calulate 5 min epochs
######################################

###pre physio, prepare consistant dates times

str(pre_mbp_first)

pre_mbp_first2 <- pre_mbp_first %>%
  arrange(project_id, record_date_time) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time - pre_datetime,
   diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(pre_mbp_first2)

pre_mbp_first_test <- mutate(pre_mbp_first2, mbp_time = as.POSIXct(diff_secs, origin = "1970-01-01"))
str(pre_mbp_first_test)
####generate 5 min epochs and summaries

pre_mbp_first_5 <- pre_mbp_first_test %>% group_by(project_id, by5=cut(mbp_time, "5 min")) %>%
  summarise(median=median(mbp), across())
  
str(pre_mbp_first_5)
head(pre_mbp_first_5)

##remove repeated rows 'by 5'

pre_mbp_first_5a <- pre_mbp_first_5 %>% group_by(project_id, by5) %>% 
  filter(row_number()==1) %>%
  ungroup()

str(pre_mbp_first_5a)

###check how many values for each 

table(pre_mbp_first_5a$project_id)

##post physio prepare new times

post_mbp_first2 <- post_mbp_first %>%
  arrange(project_id, record_date_time) %>%
  group_by(project_id) %>%
  mutate(diff = record_date_time - datetime,
   diff_secs = as.numeric(diff, units = 'secs')) %>%
         ungroup()
         
str(post_mbp_first2)

post_mbp_first_test <- mutate(post_mbp_first2, mbp_time = as.POSIXct(diff_secs, origin = "1970-01-01"))
str(post_mbp_first_test)

##create 5 min epochs

post_mbp_first_5 <- post_mbp_first_test %>% group_by(project_id, by5=cut(mbp_time, "5 min")) %>%
  summarise(median=median(mbp), across())
  
str(post_mbp_first_5)
head(post_mbp_first_5)

##remove repeated rows 'by 5'

post_mbp_first_5a <- post_mbp_first_5 %>% group_by(project_id, by5) %>% 
  filter(row_number()==1) %>%
  ungroup()

str(post_mbp_first_5a)

###check how many values for each 

table(post_mbp_first_5a$project_id)

unique(pre_mbp_first_5a$project_id)
unique(post_mbp_first_5a$project_id)
#########################################################################
## draw graph of median and time - calculate time difference from first recorded
#########################################################################

#need to change by into POSIXct from factor

pre_mbp_first_5a$by5 <- as.POSIXct(pre_mbp_first_5a$by5,format='%Y-%m-%d %H:%M:%S')

post_mbp_first_5a$by5 <- as.POSIXct(post_mbp_first_5a$by5,format='%Y-%m-%d %H:%M:%S')

### pre-physio

#calcualtion difference in seconds 

fun_color_range <- colorRampPalette(c("lightblue", "navy"))   
my_colors <- fun_color_range(347)
            
pre_plot <- ggplot(pre_mbp_first_5a, aes(x=diff_secs, y=median, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            geom_line() +
            ggtitle("MBP pre-physiotherapy") + # add a title
    xlab('Time (seconds)') + ylab('Median MBP') + # add axis names
    scale_y_continuous(expand = c(0, 0), limits = c(0, 150)) +
    scale_x_continuous(expand = c(0, 0), limits = c(0,1700)) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_manual(values=my_colors) 
          
## plot median SpO2     
             
post_plot <- ggplot(post_mbp_first_5a, aes(x=diff_secs, y=median, colour = project_id)) + 
            geom_point(aes(color = project_id), size = 1) +
            geom_line() +
            ggtitle("MBP post-physiotherapy") + # add a title
    xlab('Time (seconds)') + ylab('Median MBP') + # add axis names
     scale_y_continuous(expand = c(0, 0), limits = c(0, 150)) +
    scale_x_continuous(expand = c(0, 0), limits = c(0,3600)) +
    theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_manual(values=my_colors)          
                               
require(gridExtra)

grid.arrange(pre_plot, post_plot, ncol=2)

##########################################
###5 mins  pre and post add extra column
#########################################

str(pre_mbp_first_5a)
str(post_mbp_first_5a)

##select columns want

prembp <- select(pre_mbp_first_5a, project_id, by5, median)
postmbp <- select(post_mbp_first_5a, project_id, by5, median)

##rename medians for clarity

names(prembp)[names(prembp) == 'median'] <- 'premedian'
names(postmbp)[names(postmbp) == 'median'] <- 'postmedian'

str(prembp)
str(postmbp)

##add extra column 

prembp1 <- prembp %>%
group_by(project_id) %>%
  mutate(label1 = LETTERS[row_number()]) %>%
  ungroup()

postmbp1 <- postmbp %>%
group_by(project_id) %>%
  mutate(label = LETTERS[row_number()]) %>%
  ungroup()

str(prembp1)
str(postmbp1)

##try to reverse preOSI letters

prembp2 <- prembp1 %>%
group_by(project_id) %>%
mutate(label = rev(label1)) %>%
ungroup()

str(prembp2)

###################################################################################################################
########################################
###analysis 1 5 min pre vs 5 min post
########################################
#####################################################################################################################

###################################################
##subset pre for just 5min immediately pre "A"
#################################################

prembp3 <- select(prembp2, project_id, by5, premedian, label)

prembp4 <- subset(prembp3, label == "A")
str(prembp4)

prembp5 <- select(prembp4, project_id, by5, premedian)
str(prembp5)

###remove row if by5 time not 00:25:00

prembp6 <- prembp5[prembp5$by5 == "1970-01-01 00:25:00",]

str(prembp6)

#########################################
##subset post for 5 min imm post A
######################################

postmbp2 <- subset(postmbp1, label == "A")
str(postmbp2)

###remove rows if by5 time not 00:00:00

postmbp3 <- postmbp2[postmbp2$by5 == "1970-01-01 00:00:00",]

str(postmbp3)

################################
##join pre and post together
###################################

mbp_prepost_5 <- inner_join(postmbp3, prembp6, by="project_id")
str(mbp_prepost_5)    

unique(mbp_prepost_5$project_id)
sum(is.na(mbp_prepost_5))

##############################################
##calculate differences in 5 mins medians
###########################################
 
mbp_prepost_5$mbp_diff <- mbp_prepost_5$postmedian - mbp_prepost_5$premedian
str(mbp_prepost_5)

##plot with id
ggplot(mbp_prepost_5, aes(x = project_id, y=mbp_diff)) + 
            geom_point() +
             ggtitle("MBP difference post-pre physio ") + # add a title
    xlab('Project id') + ylab(' absolute difference in MBP') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
           
##################################
##create percentage change variable
####################################

mbp_prepost_5$mbp_perc_change <- (mbp_prepost_5$mbp_diff / mbp_prepost_5$premedian)* 100
str(mbp_prepost_5)

##plot with id
ggplot(mbp_prepost_5, aes(x = project_id, y=mbp_perc_change)) + 
            geom_point() +
             ggtitle("MBP difference post-pre physio ") + # add a title
    xlab('Project id') + ylab(' % difference in MBP') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
           
###get rid of -ve values

mbp_prepost_5$mbp_perc_change_1 <- abs(mbp_prepost_5$mbp_perc_change)
str(mbp_prepost_5)

#### create new variable for above or below threshold

mbp_prepost_5$mbp_threshold <- ifelse(mbp_prepost_5$mbp_perc_change_1 > 20, "yes", "no")

str(mbp_prepost_5)

t.mbp<- table(mbp_prepost_5$mbp_threshold)

addmargins(t.mbp)
round(prop.table(t.mbp)*100, 2) #to give percentage

#####graph

plot5x <- ggplot(mbp_prepost_5, aes(x = project_id, y=mbp_diff, colour=mbp_threshold)) + 
            geom_point() +
             ggtitle(" 0-5 mins post physiotherapy") + # add a title
    ylab('absolute mbp difference') + xlab(NULL) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("yes", "no"),
                        values=c("brown3","chartreuse3"))  +
            geom_hline(yintercept = 0, color = "black")

plot5a <- ggplot(mbp_prepost_5, aes(x = premedian, y=mbp_diff, colour = mbp_threshold)) + 
            geom_point() +
             ggtitle("0-5 minutes post-physiotherapy") + # add a title
    xlab(NULL) + ylab('Absolute change in MBP') + # add axis names
     xlim(0,100) + ylim(-50,70) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_manual(breaks = c("yes", "no"),
                        values=c("red","steelblue4"))  +
            geom_hline(yintercept = 0, color = "black")

###get subset of those unstable
mbp_prepost_5a <- select(mbp_prepost_5, project_id, mbp_diff, mbp_perc_change, mbp_threshold)

names(mbp_prepost_5a)[names(mbp_prepost_5a) == 'mbp_diff'] <- 'mbp_diff5'
names(mbp_prepost_5a)[names(mbp_prepost_5a) == 'mbp_perc_change'] <- 'mbp_perc_change5'
names(mbp_prepost_5a)[names(mbp_prepost_5a) == 'mbp_threshold'] <- 'mbp_threshold5'
str(mbp_prepost_5a)

###################################################################################################################
########################################
###analysis 2 5 min pre vs 15 min post
########################################
#####################################################################################################################

#########################################
##subset post for 15 min imm post C
######################################

postmbp15 <- subset(postmbp1, label == "C")
str(postmbp15)

###remove rows if by5 time not 00:10:00

postmbp15a <- postmbp15[postmbp15$by5 == "1970-01-01 00:10:00",]

str(postmbp15a)

################################
##join pre and post together
###################################

mbp_prepost_15 <- inner_join(postmbp15a, prembp6, by="project_id")
str(mbp_prepost_15)    

unique(mbp_prepost_15$project_id)
sum(is.na(mbp_prepost_15))
 
##############################################
##calculate differences in 5 mins medians
###########################################
 
mbp_prepost_15$mbp_diff <- mbp_prepost_15$postmedian - mbp_prepost_15$premedian
str(mbp_prepost_15)

##plot with id
ggplot(mbp_prepost_15, aes(x = project_id, y=mbp_diff)) + 
            geom_point() +
             ggtitle("MBP difference post-pre physio ") + # add a title
    xlab('Project id') + ylab(' absolute difference in MBP') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
##################################
##create percentage change variable
####################################

mbp_prepost_15$mbp_perc_change <- (mbp_prepost_15$mbp_diff / mbp_prepost_15$premedian)* 100
str(mbp_prepost_15)

##plot with id
ggplot(mbp_prepost_15, aes(x = project_id, y=mbp_perc_change)) + 
            geom_point() +
             ggtitle("MBP difference post-pre physio ") + # add a title
    xlab('Project id') + ylab(' % difference in MBP') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
           
###get rid of -ve values

mbp_prepost_15$mbp_perc_change_1 <- abs(mbp_prepost_15$mbp_perc_change)
str(mbp_prepost_15)

#### create new variable for above or below threshold

mbp_prepost_15$mbp_threshold <- ifelse(mbp_prepost_15$mbp_perc_change_1 > 20, "yes", "no")

str(mbp_prepost_15)

t.mbp<- table(mbp_prepost_15$mbp_threshold)

addmargins(t.mbp)
round(prop.table(t.mbp)*100, 2) #to give percentage

#####graph

plot15x <- ggplot(mbp_prepost_15, aes(x = project_id, y=mbp_diff, colour=mbp_threshold)) + 
            geom_point() +
             ggtitle(" 10-15 mins post physiotherapy") + # add a title
    ylab('absolute mbp difference') + xlab(NULL) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("yes", "no"),
                        values=c("brown3","chartreuse3"))  +
            geom_hline(yintercept = 0, color = "black")

plot15a <- ggplot(mbp_prepost_15, aes(x = premedian, y=mbp_diff, colour = mbp_threshold)) + 
            geom_point() +
             ggtitle("10-15 minutes post-physiotherapy") + # add a title
    xlab(NULL) + ylab(NULL) + # add axis names
     xlim(0,100) + ylim(-50,70) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_manual(breaks = c("yes", "no"),
                        values=c("red","steelblue4"))  +
            geom_hline(yintercept = 0, color = "black")

###get subset of those unstable

mbp_prepost_15a <- select(mbp_prepost_15, project_id, mbp_diff, mbp_perc_change, mbp_threshold)

names(mbp_prepost_15a)[names(mbp_prepost_15a) == 'mbp_diff'] <- 'mbp_diff15'
names(mbp_prepost_15a)[names(mbp_prepost_15a) == 'mbp_perc_change'] <- 'mbp_perc_change15'
names(mbp_prepost_15a)[names(mbp_prepost_15a) == 'mbp_threshold'] <- 'mbp_threshold15'
str(mbp_prepost_15a)

###################################################################################################################
########################################
###analysis 3 5 min pre vs 30 min post
########################################
#####################################################################################################################

#########################################
##subset post for 30 min imm post F
######################################

postmbp30 <- subset(postmbp1, label == "F")
str(postmbp30)

###remove rows if by5 time not 00:25:00

postmbp30a <- postmbp30[postmbp30$by5 == "1970-01-01 00:25:00",]

str(postmbp30a)

################################
##join pre and post together
###################################

mbp_prepost_30 <- inner_join(postmbp30a, prembp6, by="project_id")
str(mbp_prepost_30)    

unique(mbp_prepost_30$project_id)
sum(is.na(mbp_prepost_30))

##############################################
##calculate differences in 5 mins medians
###########################################
 
mbp_prepost_30$mbp_diff <- mbp_prepost_30$postmedian - mbp_prepost_30$premedian
str(mbp_prepost_30)


##plot with id
ggplot(mbp_prepost_30, aes(x = project_id, y=mbp_diff)) + 
            geom_point() +
             ggtitle("MBP difference post-pre physio ") + # add a title
    xlab('Project id') + ylab(' absolute difference in MBP') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
           
##################################
##create percentage change variable
####################################

mbp_prepost_30$mbp_perc_change <- (mbp_prepost_30$mbp_diff / mbp_prepost_30$premedian)* 100
str(mbp_prepost_30)

##plot with id
ggplot(mbp_prepost_30, aes(x = project_id, y=mbp_perc_change)) + 
            geom_point() +
             ggtitle("MBP difference post-pre physio ") + # add a title
    xlab('Project id') + ylab(' % difference in MBP') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
           
###get rid of -ve values

mbp_prepost_30$mbp_perc_change_1 <- abs(mbp_prepost_30$mbp_perc_change)
str(mbp_prepost_30)

#### create new variable for above or below threshold

mbp_prepost_30$mbp_threshold <- ifelse(mbp_prepost_30$mbp_perc_change_1 > 20, "yes", "no")

str(mbp_prepost_30)

t.mbp2<- table(mbp_prepost_30$mbp_threshold)

addmargins(t.mbp2)
round(prop.table(t.mbp2)*100, 2) #to give percentage

#####graph

plot30x <- ggplot(mbp_prepost_30, aes(x = project_id, y=mbp_diff, colour=mbp_threshold)) + 
            geom_point() +
             ggtitle(" 25-30 mins post physiotherapy") + # add a title
    ylab('absolute mbp difference') + xlab(NULL) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("yes", "no"),
                        values=c("brown3","chartreuse3"))  +
            geom_hline(yintercept = 0, color = "black")
plot30a <- ggplot(mbp_prepost_30, aes(x = premedian, y=mbp_diff, colour = mbp_threshold)) + 
            geom_point() +
             ggtitle("25-30 minutes post-physiotherapy") + # add a title
    xlab('Median MBP 5 minutes pre-physiotherapy') + ylab('Absolute change in MBP') + # add axis names
     xlim(0,100) + ylim(-50,70) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_manual(breaks = c("yes", "no"),
                        values=c("red","steelblue4"))  +
            geom_hline(yintercept = 0, color = "black")

###get subset of those unstable

mbp_prepost_30a <- select(mbp_prepost_30, project_id, mbp_diff, mbp_perc_change, mbp_threshold)

names(mbp_prepost_30a)[names(mbp_prepost_30a) == 'mbp_diff'] <- 'mbp_diff30'
names(mbp_prepost_30a)[names(mbp_prepost_30a) == 'mbp_perc_change'] <- 'mbp_perc_change30'
names(mbp_prepost_30a)[names(mbp_prepost_30a) == 'mbp_threshold'] <- 'mbp_threshold30'
str(mbp_prepost_30a)

###################################################################################################################
########################################
###analysis 4 5 min pre vs 60 min post
########################################
#####################################################################################################################

#########################################
##subset post for 60 min imm post L
######################################

postmbp60 <- subset(postmbp1, label == "L")
str(postmbp60)

###remove rows if by5 time not 00:55:00

postmbp60a <- postmbp60[postmbp60$by5 == "1970-01-01 00:55:00",]

str(postmbp60a)

################################
##join pre and post together
###################################

mbp_prepost_60 <- inner_join(postmbp60a, prembp6, by="project_id")
str(mbp_prepost_60)    

unique(mbp_prepost_60$project_id)
sum(is.na(mbp_prepost_60))
##############################################
##calculate differences in 5 mins medians
###########################################
 
mbp_prepost_60$mbp_diff <- mbp_prepost_60$postmedian - mbp_prepost_60$premedian
str(mbp_prepost_60)

##plot with id
ggplot(mbp_prepost_60, aes(x = project_id, y=mbp_diff)) + 
            geom_point() +
             ggtitle("MBP difference post-pre physio ") + # add a title
    xlab('Project id') + ylab(' absolute difference in MBP') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
           
##################################
##create percentage change variable
####################################

mbp_prepost_60$mbp_perc_change <- (mbp_prepost_60$mbp_diff / mbp_prepost_60$premedian)* 100
str(mbp_prepost_60)

##plot with id
ggplot(mbp_prepost_60, aes(x = project_id, y=mbp_perc_change)) + 
            geom_point() +
             ggtitle("MBP difference post-pre physio ") + # add a title
    xlab('Project id') + ylab(' % difference in MBP') + # add axis names
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_viridis(discrete = TRUE, option = "D") 
           
###get rid of -ve values

mbp_prepost_60$mbp_perc_change_1 <- abs(mbp_prepost_60$mbp_perc_change)
str(mbp_prepost_60)

#### create new variable for above or below threshold

mbp_prepost_60$mbp_threshold <- ifelse(mbp_prepost_60$mbp_perc_change_1 > 20, "yes", "no")

str(mbp_prepost_60)

t.mbp3<- table(mbp_prepost_60$mbp_threshold)

addmargins(t.mbp3)
round(prop.table(t.mbp3)*100, 2) #to give percentage

#####graph

plot60x <- ggplot(mbp_prepost_60, aes(x = project_id, y=mbp_diff, colour=mbp_threshold)) + 
            geom_point() +
             ggtitle(" 55-60 mins post physiotherapy") + # add a title
    ylab('absolute mbp difference') + xlab(NULL) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
          scale_color_manual(breaks = c("yes", "no"),
                        values=c("brown3","chartreuse3"))  +
            geom_hline(yintercept = 0, color = "black")

plot60a <- ggplot(mbp_prepost_30, aes(x = premedian, y=mbp_diff, colour = mbp_threshold)) + 
            geom_point() +
             ggtitle("55-60 minutes post-physiotherapy") + # add a title
    xlab('Median MBP 5 mins pre-physiotherapy') + ylab(NULL) + # add axis names
    xlim(0,100) + ylim(-50,70) +
         theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), legend.position = "none")+
             scale_color_manual(breaks = c("yes", "no"),
                        values=c("red","steelblue4"))  +
            geom_hline(yintercept = 0, color = "black")

###get subset of those unstable

mbp_prepost_60a <- select(mbp_prepost_60, project_id, mbp_diff, mbp_perc_change, mbp_threshold)

names(mbp_prepost_60a)[names(mbp_prepost_60a) == 'mbp_diff'] <- 'mbp_diff60'
names(mbp_prepost_60a)[names(mbp_prepost_60a) == 'mbp_perc_change'] <- 'mbp_perc_change60'
names(mbp_prepost_60a)[names(mbp_prepost_60a) == 'mbp_threshold'] <- 'mbp_threshold60'
str(mbp_prepost_60a)

#######################
##combine plots
############################

#grid.arrange(plota, plotb, plotc, plotd, ncol=2, nrow=2)

grid.arrange(plot5a, plot15a, plot30a, plot60a, ncol=2, nrow=2)

########################################
###join subsets to identify those with AE
#########################################

mbp_AE_1.1a <- full_join(mbp_prepost_5a, mbp_prepost_15a, by="project_id")
str(mbp_AE_1.1a)

mbp_AE_1.1b <- full_join(mbp_AE_1.1a, mbp_prepost_30a, by="project_id")
str(mbp_AE_1.1b)

mbp_AE_1.1c <- full_join(mbp_AE_1.1b, mbp_prepost_60a, by="project_id")
str(mbp_AE_1.1c)

###save csv to check for repeated patients with AE
write.csv(mbp_AE_1.1c, "~/files/datafiles/mbp_AE_1.1.csv")
###select columns want

mbp_AE_1.1d <- select(mbp_AE_1.1c, project_id, mbp_threshold5, mbp_threshold15, mbp_threshold30, mbp_threshold60)
str(mbp_AE_1.1d)

mbp_AE_1.1d[is.na(mbp_AE_1.1d)] = 'unknown'

###create AE variable

mbp_AE_1.1d$mbp_AE <- ifelse(mbp_AE_1.1d$mbp_threshold5 == "yes" | mbp_AE_1.1d$mbp_threshold15 == "yes" | mbp_AE_1.1d$mbp_threshold30 == "yes" | mbp_AE_1.1d$mbp_threshold60 == "yes", 'Yes', 'No')

str(mbp_AE_1.1d)

table(mbp_AE_1.1d$mbp_AE)
unique(mbp_AE_1.1d$project_id)

###save as csv

write.csv(mbp_AE_1.1d, "~/files/datafiles/mbp_1.1AE.csv")

###################

##################################################
###repeated measure anova, quantify change
##################################################

#####get individual datasets
##5 min
str(mbp_prepost_5)  

mbp_5 <- select(mbp_prepost_5, project_id, postmedian, premedian)
str(mbp_5)

names(mbp_5)[names(mbp_5) == "postmedian"] <- "postmedian5"
str(mbp_5)

###15mins

str(mbp_prepost_15)

mbp_15 <- select(mbp_prepost_15, project_id, postmedian)
str(mbp_15)

names(mbp_15)[names(mbp_15) == "postmedian"] <- "postmedian15"
str(mbp_15)

##30mins

mbp_30 <- select(mbp_prepost_30, project_id, postmedian)
str(mbp_30)

names(mbp_30)[names(mbp_30) == "postmedian"] <- "postmedian30"
str(mbp_30)

##60mins
mbp_60 <- select(mbp_prepost_60, project_id, postmedian)
str(mbp_60)

names(mbp_60)[names(mbp_60) == "postmedian"] <- "postmedian60"
str(mbp_60)

####################join together

mbp_change <- full_join(mbp_5, mbp_15, by="project_id")
str(mbp_change)

mbp_change1 <- full_join(mbp_change, mbp_30, by="project_id")
str(mbp_change1)

mbp_change2 <- full_join(mbp_change1, mbp_60, by="project_id")
str(mbp_change2)

###change order of columns
mbp_change3 <- mbp_change2[, c(1, 3, 2, 4, 5, 6)]
str(mbp_change3)

mbp_change3$diff1 <- mbp_change3$postmedian5 - mbp_change3$premedian
mbp_change3$diff2 <- mbp_change3$postmedian15 - mbp_change3$premedian
mbp_change3$diff3 <- mbp_change3$postmedian30 - mbp_change3$premedian
mbp_change3$diff4 <- mbp_change3$postmedian60 - mbp_change3$premedian
mbp_change3$diff5 <- mbp_change3$postmedian15 - mbp_change3$postmedian5
mbp_change3$diff6 <- mbp_change3$postmedian30 - mbp_change3$postmedian5
mbp_change3$diff7 <- mbp_change3$postmedian60 - mbp_change3$postmedian5
mbp_change3$diff8 <- mbp_change3$postmedian30 - mbp_change3$postmedian15
mbp_change3$diff9 <- mbp_change3$postmedian60 - mbp_change3$postmedian15
mbp_change3$diff10 <- mbp_change3$postmedian60 - mbp_change3$postmedian30

summary(mbp_change3)

################change to long format

mbp_change4 <- tidyr::gather(mbp_change3, key=time, value=medianmbp, premedian:postmedian60) %>% 
                    arrange(project_id)
                    
head(mbp_change4)
str(mbp_change4)

test <- mbp_change4 %>% friedman_test(medianmbp ~ time |project_id)
test

test1 <- mbp_change4 %>% friedman_effsize(medianmbp ~ time |project_id)
test1

test3 <- mbp_change4 %>% wilcox_test(medianmbp ~ time, paired = TRUE, p.adjust.method = "bonferroni")
test3
#################################################################################################################
####multilevel regression
################################################################################################################

str(mbp_change4)
unique(mbp_change4$project_id)

#######################################
####convert to factor
################################

mbp_change4$time <- as.factor(mbp_change4$time)
str(mbp_change4)

levels(mbp_change4$time)

#################################################
#####need to bring in other variables
#################################################

####GENDER
#####gender from Demo explor first
str(demographic_data)

mbp_gender <- select(demographic_data, project_id, sex)
str(mbp_gender)

####join to mbp_change4

mbp_change5 <- left_join(mbp_change4, mbp_gender, by="project_id")
str(mbp_change5)
unique(mbp_change5$project_id)

######AGE
#####age from Demo explor 1.1
str(age_data)

mbp_age <- select(age_data, project_id, age_in_months)
str(mbp_age)

####join to mbp_change5

mbp_change6 <- left_join(mbp_change5, mbp_age, by="project_id")
str(mbp_change6)
unique(mbp_change6$project_id)

#######WEIGHT
#########weight from Demo explor first

str(weight_data6a)
mbp_weight <- select(weight_data6a, project_id, weight)
str(mbp_weight)

####join to osi_change6

mbp_change7 <- left_join(mbp_change6, mbp_weight, by="project_id")
str(mbp_change7)
unique(mbp_change7$project_id)

############ADMSSION TYPE
#######type from Demo explor first

str(admission_data1)
mbp_admission <- select(admission_data1, project_id, admission.type)
str(mbp_admission)

####join to mbp_change7

mbp_change8 <- left_join(mbp_change7, mbp_admission, by="project_id")
str(mbp_change8)
unique(mbp_change8$project_id)

#######################UNIT
#######unit from Demo explor first

str(ICUunit_data2)
mbp_unit <- select(ICUunit_data2, project_id, Unit)
str(mbp_unit)

####join to mbp_change7

mbp_change9 <- left_join(mbp_change8, mbp_unit, by="project_id")
str(mbp_change9)
unique(mbp_change9$project_id)

################PELOD

pelod_first <- xap.read_table("firstpelod")

str(pelod_first)
mbp_pelod <- select(pelod_first, project_id, pelod_score)
str(mbp_pelod)

####join to hr_change9

mbp_change10 <- left_join(mbp_change9, mbp_pelod, by="project_id")
str(mbp_change10)
unique(mbp_change10$project_id)

##########################diagnosis
######bring in from Demo explo first

#str(diagnosis_data1)

#mbp_diagnosis <- select(diagnosis_data1, project_id, diagnosis)
#str(mbp_diagnosis)

####join to hr_change10
#mbp_change11 <- left_join(mbp_change10, mbp_diagnosis, by="project_id")
#str(mbp_change11)
#unique(mbp_change11$project_id)

###rename for regression and change reference to premedian

mbp_change10$time <- relevel(mbp_change10$time, "postmedian60")
mbp_change10$time <- relevel(mbp_change10$time, "postmedian30")
mbp_change10$time <- relevel(mbp_change10$time, "postmedian15")
mbp_change10$time <- relevel(mbp_change10$time, "postmedian5")
 mbp_change10$time <- relevel(mbp_change10$time, "premedian")

str(mbp_change10)

levels(mbp_change10$time) <- c("5 pre", "0-5 post", "10-15 post", "25-30 post", "55-60 post")

str(mbp_change10)

beanplot(mbp_change10$medianmbp ~ mbp_change10$time,overallline = "median", beanlines = "median",
            col = list("steelblue1", "steelblue2", "steelblue3", "steelblue", "steelblue4"), border = c("steelblue1", "steelblue2", "steelblue3", "steelblue", "steelblue4"),
        xlab = "Time point in relation to physiotherapy treatment (minutes)", ylab = "Median mean blood pressure")

####################################
###multi level models
####################################

model6 <- lmer(medianmbp ~ time + log(weight) + admission.type + Unit + log(pelod_score) + (1|project_id), data=mbp_change10)
summary(model6)

confint(model6)







##########################Script 18 – Mean arterial blood pressure demographic exploration################################################################


#########################
# load in data sets
#############################

##load in complete 01

demographic01_data <- xap.read_table("complete01_caboodle_patient_demographics") # read in variables table for all patients

# check data has loaded
head(demographic01_data)
dim(demographic01_data)
tail(demographic01_data)

##load in complete 02

demographic02_data <- xap.read_table("complete02_caboodle_patient_demographics") # read in variables table for all patients

# check data has loaded
head(demographic02_data)
dim(demographic02_data)
tail(demographic02_data)

##load in partial

demographic_partial <- xap.read_table("partial_caboodle_patient_demographics") # read in variables table for all patients

# check data has loaded
head(demographic_partial)
dim(demographic_partial)
tail(demographic_partial)

##########################
##join datasets together
#########################

demographic_data1 <- rbind(demographic01_data, demographic02_data)

head(demographic_data1)
dim(demographic_data1)
tail(demographic_data1)

demographic_dataa <- rbind(demographic_data1, demographic_partial)

str(demographic_dataa)

##########################
##load in MBP group
###########################

mbpgroup <- xap.read_table("mbp_1_1")
str(mbpgroup)

##get rid of id column
mbpgroup1 <- select(mbpgroup, project_id, mbp_ae)
str(mbpgroup1)

#############################################
###join hr group to full demo
############################################

demographic_data_mbp <- inner_join(demographic_dataa, mbpgroup1, by="project_id")
str(demographic_data_mbp)

####################
# explore gender
######################

t.gendermbp <- table(demographic_data_mbp$sex)

addmargins(t.gendermbp)
round(prop.table(t.gendermbp)*100, 2) #to give percentage

###############################
# exploring age
###################################

##load in data set complete 01
age01_data <- xap.read_table("complete01_wp2_physio_details_check")
str(age01_data)

##load in data set complete 02
age02_data <- xap.read_table("complete02_wp2_physio_details_check")
str(age02_data)

##load in partial
age_partial <- xap.read_table("partial_wp2_physio_details_check")
str(age_partial)

#### join age data sets

age_data1 <- rbind(age01_data, age02_data)
head(age_data1)
str(age_data1)

age_dataa <- rbind(age_data1, age_partial)
str(age_dataa)

class (age_dataa$age_in_months) #this is a character needs to be integer
age_dataa[c(3,4,6)] <- lapply(age_dataa[c(3,4,6)], as.numeric)
str(age_dataa)

#############################################
###join mbp group to full age
############################################

age_data_mbp <- inner_join(age_dataa, mbpgroup1, by="project_id")
str(age_data_mbp)

summary(age_data_mbp$age_in_months)

#####################################
### weight 
#####################################

## load in data set 1
weight01_data <- xap.read_table("complete01w_caboodle_patient_selected_flowsheetrows_clin_pivot")
str(weight01_data)

weight01_data <- select(weight01_data, project_id, taken_datetime, R.DRUG.CALCULATION.WEIGHT_grams, WEIGHT.SCALE_grams)
weight01_data[c(3,4)] <- lapply(weight01_data[c(3,4)], as.integer)
str(weight01_data)

## load in data set 2

weight02_data <- xap.read_table("complete02w_caboodle_patient_selected_flowsheetrows_clin_pivot")
str(weight02_data)

weight02_data <- select(weight02_data, project_id, taken_datetime, R.DRUG.CALCULATION.WEIGHT_grams, WEIGHT.SCALE_grams)
weight02_data[c(3,4)] <- lapply(weight02_data[c(3,4)], as.integer)
str(weight02_data)

##load in partial 

weight_p <- xap.read_table("partialw_caboodle_patient_selected_flowsheetrows_clin_pivot")
str(weight_p)

weight_p <- select(weight_p, project_id, taken_datetime, R.DRUG.CALCULATION.WEIGHT_grams, WEIGHT.SCALE_grams)
weight_p[c(3,4)] <- lapply(weight_p[c(3,4)], as.integer)
str(weight_p)

##cominbe data sets

weight_dataa <- rbind(weight01_data, weight02_data)
weight_data <- rbind(weight_dataa, weight_p)

str(weight_data)

# combine to one column
weight_data1 <- weight_data %>% 
    mutate(weight = ifelse(is.na(weight_data$WEIGHT.SCALE_grams), weight_data$R.DRUG.CALCULATION.WEIGHT_grams, weight_data$WEIGHT.SCALE_grams))
str(weight_data1)

tail(weight_data1)
### link weight to date of first physio

#load in physio dates data set 1

physiotimes1_data <- xap.read_table("complete01_wp2_physio_times_check") # read in variables table for all patients

##load in physio times data set 2

physiotimes2_data <- xap.read_table("complete02_wp2_physio_times_check")

##load partial

physiotimes_p<- xap.read_table("partial_wp2_physio_times_check")

##combine data sets

physio_firsta <- rbind(physiotimes1_data, physiotimes2_data)
physio_first <- rbind(physio_firsta, physiotimes_p)
str(physio_first)

##pick first session
physio_first <- subset(physio_first, day == 1 & session == 1)
str(physio_first)

# join datasets

weight_data2 <- select(weight_data1, project_id, taken_datetime, weight)

weight_data3 <- left_join(physio_first, weight_data2, by = "project_id") 

str(weight_data3)

#find difference between dates/times 

weight_data4 <- weight_data3 %>%
 mutate(dateDiff = (weight_data3$datetime - weight_data3$taken_datetime))
str(weight_data4) 

## filter to 2 weeks prior to physio only (doesnt work with negative numbers)

weight_data5 <- filter(weight_data4, weight_data4$dateDiff %in% (0:1209600))
str(weight_data5)

#filter dates to keep only closest (min) datediff with a value (not NA), grouped by id and index datetime

weight_data5 <- weight_data5[complete.cases(weight_data5), ] 

weight_data6 <- weight_data5 %>% 
group_by(weight_data5$project_id) %>%
filter(dateDiff == min(dateDiff))

weight_data6 <- weight_data6 %>%
        ungroup()        
str(weight_data6)
head(weight_data6)

####################################
#####join to hr group
#################################

weight_mbp <- inner_join(weight_data6, mbpgroup1, by="project_id")
str(weight_mbp)

duplicated(weight_mbp$project_id)

weight_mbp1 <- weight_mbp  %>% distinct(weight_mbp$project_id, .keep_all = TRUE)

str(weight_mbp1)

summary(weight_mbp1)

######################
# Exploring which ICU
######################

##load in data set 1
wardstay01_data <- xap.read_table("complete01_caboodle_patient_ward_stays") 
str(wardstay01_data)

##load in data set 2
wardstay02_data <- xap.read_table("complete02_caboodle_patient_ward_stays") 
str(wardstay02_data)

##load in partial data
wardstay_p <- xap.read_table("partial_caboodle_patient_ward_stays") 
str(wardstay_p)

##join 2 data sets toegther

wardstay_dataa <- rbind(wardstay01_data, wardstay02_data)
wardstay_data <- rbind(wardstay_dataa, wardstay_p)

str(wardstay_data)

tableICU <- table(wardstay_data$project_id, wardstay_data$ward_code)
print(tableICU)

unique(wardstay_data$ward_code)

wardstay_data[109,]

# need to make new variables picu, cicu, nicu 

wardstay_data1 <- wardstay_data %>%    #seperates out PICU and CICU
mutate(CICU = ifelse(wardstay_data$ward_code=='CICU', 1, 0),
         PICU= ifelse(wardstay_data$ward_code=='PICU', 1, 0),
         NICU= ifelse(wardstay_data$ward_code=='ALLIGATOR' |wardstay_data$ward_code== 'NICU', 1, 0))         
str(wardstay_data1)

##############################
###find unit for first session
###############################

#load in physio dates data set 1

physiotimes1_data <- xap.read_table("complete01_wp2_physio_times_check") # read in variables table for all patients

##load in physio times data set 2

physiotimes2_data <- xap.read_table("complete02_wp2_physio_times_check")

##load partial

physiotimes_p<- xap.read_table("partial_wp2_physio_times_check")

##combine data sets

physio_firsta <- rbind(physiotimes1_data, physiotimes2_data)
physio_first <- rbind(physio_firsta, physiotimes_p)
str(physio_first)

##pick first session
physio_first <- subset(physio_first, day == 1 & session == 1)
str(physio_first)

###############################################
##join data sets by project id and nearest date
################################################

# join datasets

ICU_unit <- left_join(physio_first, wardstay_data1, by = "project_id") 

str(ICU_unit)

#find difference between dates/times 

ICU_unit1<- ICU_unit %>%
 mutate(dateDiff = (ICU_unit$datetime - ICU_unit$start_datetime))
str(ICU_unit1) 

## filter to 2 weeks prior to physio only (doesnt work with negative numbers)

ICU_unit2 <- filter(ICU_unit1, ICU_unit1$dateDiff %in% (0:1209600))
str(ICU_unit2)

#filter dates to keep only closest (min) datediff with a value (not NA), grouped by id and index datetime

#ICU_unit2 <- weight_data5[complete.cases(weight_data5), ] 

ICU_unit3<- ICU_unit2 %>% 
group_by(ICU_unit2$project_id) %>%
filter(dateDiff == min(dateDiff))  %>%
        ungroup()
        
str(ICU_unit3)

unique(ICU_unit3$project_id)

ICUunit_data1 <- select(ICU_unit3, project_id, CICU, PICU, NICU) 
str(ICUunit_data1)
        
# now put back into a single variable

ICUunit_data1$CICU <- ifelse(ICUunit_data1$CICU==1, "CICU", NA)
ICUunit_data1$PICU <- ifelse(ICUunit_data1$PICU==1, "PICU", NA)
ICUunit_data1$NICU <- ifelse(ICUunit_data1$NICU==1, "NICU", NA)

ICUunit_data2 <- ICUunit_data1 %>%
  unite("Unit", CICU:NICU, na.rm = TRUE)
str(ICUunit_data2)

# table
t.location <- table(ICUunit_data2$Unit)

addmargins(t.location)
t.location <- round(prop.table(t.location)*100, 2) #to give percentage
print(t.location)

###check for hr group

unitmbp<- inner_join(ICUunit_data2, mbpgroup1, by="project_id")
str(unitmbp)

t.unitmbp <- table(unitmbp$Unit)

addmargins(t.unitmbp)
round(prop.table(t.unitmbp)*100, 2) #to give percentage

##########################################
######### exploring length of ICU stay
#########################################

str(wardstay_data)

ICUlength_data <- select(wardstay_data, project_id, ward_stay_days) # selecting 2 columns
str(ICUlength_data)

# combine rows by id, adding values

ICUlength_data_sum <- aggregate(. ~ project_id, data=ICUlength_data, FUN=sum)
str(ICUlength_data_sum)



los_mbp <- inner_join(ICUlength_data_sum, mbpgroup1, by="project_id")
str(los_mbp)

summary(los_mbp)

##############################
####  admission type
################################

##load in data set 1
admission01_data <- xap.read_table("complete01_caboodle_patient_hospital_admissions")

dim(admission01_data)
str(admission01_data)

##load in data set 2

admission02_data <- xap.read_table("complete02_caboodle_patient_hospital_admissions")

dim(admission02_data)
str(admission02_data)

###load in partial

admission_p <- xap.read_table("partial_caboodle_patient_hospital_admissions")

##combine datasets

admission_dataa <- rbind(admission01_data, admission02_data)
admission_data <- rbind(admission_dataa, admission_p)
str(admission_data)

unique(admission_data$admission_type)
table(admission_data$admission_type)
is.na(admission_data$admission_type)

admission_data[400:450,]

# create 2 variables

admission_data1 <- admission_data %>%
mutate(Emergency = ifelse(admission_data$admission_type == "Emergency - A&E, Casualty, or Dental Casualty Department" | admission_data$admission_type == "Emergency Transfer" | admission_data$admission_type == "Emergency - Consultant Clinic" | admission_data$admission_type == "Emergency - Bed Bureau" | admission_data$admission_type == "Emergency - Other" | admission_data$admission_type == "Baby Born Elsewhere" | admission_data$admission_type == "Emergency - via A&E of another Health Care Provider", 1, 0),
        Elective = ifelse(admission_data$admission_type == "Elective - Planned" | admission_data$admission_type == "Elective - Booked" | admission_data$admission_type == "Non-Emergency Transfer" | admission_data$admission_type == "Elective - Waiting List", 1, 0))

str(admission_data1)

admission_data1$Emergency = ifelse(admission_data1$Emergency==1, "Emergency", NA)
admission_data1$Elective = ifelse(admission_data1$Elective==1, "Elective", NA)

admission_data1 <- admission_data1 %>%
  unite("admission.type", Emergency:Elective, na.rm = TRUE)

type_mbp <- inner_join(admission_data1, mbpgroup1, by="project_id")
str(type_mbp)

t.type <- table(type_mbp$admission.type)

addmargins(t.type)
round(prop.table(t.type)*100, 2) #to give percentage

################################################
##pelod
###############################################

###read in pelod data

pelod_first <- xap.read_table("firstpelod")

#####join session times to hr group

pelod_mbp <- inner_join(pelod_first, mbpgroup1, by="project_id")
str(pelod_mbp)

summary(pelod_mbp)

#####################################################
##COVID
#################################################

lab1_data <- xap.read_table("complete01_caboodle_patient_selected_lab_components_all_pivot")
str(lab1_data)

lab1_data1 <- select(lab1_data, project_id, collected_datetime, COVID19RES_SARS.CoV.2.by.PCR.Result)
str(lab1_data1)

lab2_data <- xap.read_table("complete02_caboodle_patient_selected_lab_components_all_pivot")
str(lab2_data)

lab2_data1 <- select(lab2_data, project_id, collected_datetime, COVID19RES_SARS.CoV.2.by.PCR.Result)
str(lab2_data1)

labpart <- xap.read_table("partial_caboodle_patient_selected_lab_components_all_pivot")
str(labpart)

labpart1 <- select(labpart, project_id, collected_datetime, COVID19RES_SARS.CoV.2.by.PCR.Result)
str(labpart1)
###join together

lab_covid <- rbind(lab1_data1, lab2_data1)
lab_covid1 <- rbind(lab_covid, labpart1)
str(lab_covid1)

#####################################
####find results during admission
####################################

str(admission_data)
adm_1 <- select(admission_data, project_id, start_datetime, end_datetime)
str(adm_1)

###join and filter between dates

covid_all <- inner_join(lab_covid1, adm_1, by="project_id")
str(covid_all)

covid_all1 <- filter(covid_all, collected_datetime >= start_datetime & collected_datetime <= end_datetime)
str(covid_all1)

table(covid_all1$project_id, covid_all1$COVID19RES_SARS.CoV.2.by.PCR.Result)

###create new variable
covid_all1$covid <- ifelse(covid_all1$COVID19RES_SARS.CoV.2.by.PCR.Result == "RNA Detected", "Yes", "No")
str(covid_all1)

###change NAs to no

covid_all1$covid[is.na(covid_all1$covid)] <- 'No'

unique(covid_all1$project_id)

########join to mbp group

covid_mbp <- inner_join(mbpgroup1, covid_all1, by="project_id")
str(covid_mbp)

unique(covid_mbp$project_id)

###subset those with yes

covid_positive<- subset(covid_mbp, covid == 'Yes')
str(covid_positive)

###get rid of repeats

covidmbp <- select(covid_positive, project_id, covid)

covid_mbp <- covidmbp[!duplicated(covidmbp$project_id), ]

str(covid_mbp)

###join to full data set
(demographic_data_hr

covid_mbp1 <- full_join(demographic_data_mbp, covid_mbp, by="project_id")
str(covid_hr1)

###change NA to no in covid column
covid_mbp1$covid[is.na(covid_mbp1$covid)] <- 'no'
 
table(covid_mbp1$covid, covid_mbp1$mbp_ae)

fisher.test(covid_mbp1$covid, covid_mbp1$mbp_ae)

######################################
# explore episodes, diagnosis
######################################

## load in data set complete 01
episode01_data <- xap.read_table("complete01_caboodle_patient_episodes") # read in variables table for all patients

# check data has loaded
head(episode01_data)
dim(episode01_data)
tail(episode01_data)

##load in data set complete 02

episode02_data <- xap.read_table("complete02_caboodle_patient_episodes") # read in variables table for all patients

# check data has loaded
head(episode02_data)
dim(episode02_data)
tail(episode02_data)

##load in partial

episode_partial <- xap.read_table("partial_caboodle_patient_episodes") # read in variables table for all patients

# check data has loaded
str(episode_partial)

##join data sets

episode_data1 <- rbind(episode01_data, episode02_data)
dim(episode_data1)
str(episode_data1)
head(episode_data1)
tail(episode_data1)
episode_data <- rbind(episode_data1, episode_partial)
str(episode_data)

# need to remove duplicates
episode_data <- distinct(episode_data, episode_data$project_id, .keep_all = TRUE)
dim(episode_data)
str(episode_data)

##select only columns want
episode_data1 <- select(episode_data, project_id, start_datetime, end_datetime, primary_diagnosis_code, primary_diagnosis_name)

unique(episode_data1$primary_diagnosis_name)
str(episode_data1)

##change NA's to unknown
episode_data1[is.na(episode_data1)] <- 'unknown'
is.na(episode_data1)

#class(episode_data$primary_diagnosis_name)
#episode_data$primary_diagnosis_name <- as.factor(episode_data$primary_diagnosis_name) dont seem to have to change to factor

# create individual variables

#####################################
# create individual diagnosis variables
#####################################

diagnosis_data <- episode_data1 %>%    #seperates out and changes diagnosis groups
mutate(Respiratory= ifelse(grepl('^J1', episode_data1$primary_diagnosis_code) | grepl('^J2', episode_data1$primary_diagnosis_code) | grepl('^J4', episode_data1$primary_diagnosis_code) | grepl('^J6', episode_data1$primary_diagnosis_code) | grepl('^J8', episode_data1$primary_diagnosis_code) | grepl('^J9', episode_data1$primary_diagnosis_code) | episode_data1$primary_diagnosis_code == "P271" | episode_data1$primary_diagnosis_code =="P240" | episode_data1$primary_diagnosis_code == "P229" | episode_data1$primary_diagnosis_code == "P285" | episode_data1$primary_diagnosis_code == "Q330" | episode_data1$primary_diagnosis_code == "R068" | episode_data1$primary_diagnosis_code == "R092" | episode_data1$primary_diagnosis_code == "P284"| episode_data1$primary_diagnosis_code == "P288", 1, 0),
    Renal= ifelse(episode_data1$primary_diagnosis_code == "N10X" | episode_data1$primary_diagnosis_code == "Q641", 1, 0),
    Musculoskeletal= ifelse(grepl('^M', episode_data1$primary_diagnosis_code), 1, 0),
    Hepatic= ifelse(episode_data1$primary_diagnosis_code == "K270", 1, 0),
    Endocrine= ifelse(grepl('^E', episode_data1$primary_diagnosis_code) | episode_data1$primary_diagnosis_code == "P748", 1, 0),
    Haematology_oncology= ifelse(grepl('^C', episode_data1$primary_diagnosis_code) | episode_data1$primary_diagnosis_code == "D151" | episode_data1$primary_diagnosis_code == "D761" | episode_data1$primary_diagnosis_code == "D487" | episode_data1$primary_diagnosis_code == "D71X", 1, 0),
    Cardiovascular = ifelse(grepl('^Q2', episode_data1$primary_diagnosis_code) | grepl('^I2', episode_data1$primary_diagnosis_code ) | grepl('^I3', episode_data1$primary_diagnosis_code) | grepl('^I4', episode_data1$primary_diagnosis_code) | grepl('^I7', episode_data1$primary_diagnosis_code) | episode_data1$primary_diagnosis_code == "I500" | episode_data1$primary_diagnosis_code == "I971" | episode_data1$primary_diagnosis_code == "T828" | episode_data1$primary_diagnosis_code == "P291" | episode_data1$primary_diagnosis_code == "P293" | episode_data1$primary_diagnosis_code == "P298", 1, 0),
    Neurology_neurosurgery= ifelse(grepl('^G', episode_data1$primary_diagnosis_code) | grepl('^S', episode_data1$primary_diagnosis_code) | grepl('^P9', episode_data1$primary_diagnosis_code) | grepl('^I6', episode_data1$primary_diagnosis_code) | episode_data1$primary_diagnosis_code == "T850" | episode_data1$primary_diagnosis_code == "P525" | episode_data1$primary_diagnosis_code == "Q858" | episode_data1$primary_diagnosis_code == "R568" | episode_data1$primary_diagnosis_code == "R55X" | episode_data1$primary_diagnosis_code == "P252" | episode_data1$primary_diagnosis_code == "P219", 1, 0),
    Gastroenterology= ifelse(grepl('^K', episode_data1$primary_diagnosis_code) | grepl('^Q7', episode_data1$primary_diagnosis_code) | episode_data1$primary_diagnosis_code == "R633" | episode_data1$primary_diagnosis_code == "A081" | episode_data1$primary_diagnosis_code == "Q423" | episode_data1$primary_diagnosis_code == "R11X" | episode_data1$primary_diagnosis_code == "Q390" | episode_data1$primary_diagnosis_code == "Q393" | episode_data1$primary_diagnosis_code == "Q411" | episode_data1$primary_diagnosis_code == "T286" | episode_data1$primary_diagnosis_code == "T855" | episode_data1$primary_diagnosis_code == "Q391" | episode_data1$primary_diagnosis_code == "Q392" | episode_data1$primary_diagnosis_code == "P540", 1, 0), 
    Airway= ifelse(grepl('^J3', episode_data1$primary_diagnosis_code) | episode_data1$primary_diagnosis_code == "Q318" | episode_data1$primary_diagnosis_code == "Q320" | episode_data1$primary_diagnosis_code == "Q321" | episode_data1$primary_diagnosis_code == "Q310" | episode_data1$primary_diagnosis_code == "Q311" | episode_data1$primary_diagnosis_code == "R061", 1, 0),
    Sepsis= ifelse(grepl('^A4', episode_data1$primary_diagnosis_code) | episode_data1$primary_diagnosis_code == "P360", 1, 0),
    Other= ifelse(episode_data1$primary_diagnosis_code == "D821" | episode_data1$primary_diagnosis_code == "D180" | episode_data1$primary_diagnosis_code == "U071" | episode_data1$primary_diagnosis_code == "T810" | episode_data1$primary_diagnosis_code == "P398" | episode_data1$primary_diagnosis_code == "T823" | episode_data1$primary_diagnosis_code == "T818" | episode_data1$primary_diagnosis_code == "R560" | episode_data1$primary_diagnosis_code == "T741" | episode_data1$primary_diagnosis_code == "A199" | episode_data1$primary_diagnosis_code == "B349" | episode_data1$primary_diagnosis_code == "T856" | episode_data1$primary_diagnosis_code == "T543"| episode_data1$primary_diagnosis_code == "T813", 1, 0),
    Unknown= ifelse(episode_data1$primary_diagnosis_code == "unknown", 1, 0))

str(diagnosis_data)

# rename so can merge
diagnosis_data$Respiratory <- ifelse(diagnosis_data$Respiratory==1, "Respiratory", NA) 
diagnosis_data$Renal <- ifelse(diagnosis_data$Renal==1, "Renal", NA) 
diagnosis_data$Musculoskeletal <- ifelse(diagnosis_data$Musculoskeletal==1, "Musculoskeletal", NA) 
diagnosis_data$Hepatic <- ifelse(diagnosis_data$Hepatic==1, "Hepatic", NA) 
diagnosis_data$Endocrine <- ifelse(diagnosis_data$Endocrine==1, "Endocrine", NA) 
diagnosis_data$Haematology_oncology <- ifelse(diagnosis_data$Haematology_oncology==1, "Haematology/oncology", NA) 
diagnosis_data$Cardiovascular <- ifelse(diagnosis_data$Cardiovascular==1, "Cardiovascular", NA) 
diagnosis_data$Neurology_neurosurgery <- ifelse(diagnosis_data$Neurology_neurosurgery==1, "Neurology/neurosurgery", NA) 
diagnosis_data$Gastroenterology <- ifelse(diagnosis_data$Gastroenterology==1, "Gastroenterology", NA) 
diagnosis_data$Airway <- ifelse(diagnosis_data$Airway==1, "Airway", NA) 
diagnosis_data$Sepsis <- ifelse(diagnosis_data$Sepsis==1, "Sepsis", NA) 
diagnosis_data$Other <- ifelse(diagnosis_data$Other==1, "Other", NA) 
diagnosis_data$Unknown <- ifelse(diagnosis_data$Unknown==1, "Unknown", NA) 

# need to merge the columns
diagnosis_data1 <- diagnosis_data %>%
  unite("diagnosis", Respiratory:Unknown, na.rm = TRUE)
str(diagnosis_data1)

unique(diagnosis_data1$primary_diagnosis_name)
unique(diagnosis_data1$primary_diagnosis_code)

which(diagnosis_data1$primary_diagnosis_code == "I500") 

diagnosis_data1[391,]

## create table
t.diagnosis <- table(diagnosis_data1$diagnosis)

addmargins(t.diagnosis)
round(prop.table(t.diagnosis)*100, 2)

####join to HR group

diagnosis_data_mbp <- inner_join(diagnosis_data1, mbpgroup1, by="project_id")
str(diagnosis_data_mbp)

t.diagnosis <- table(diagnosis_data_mbp$diagnosis)

addmargins(t.diagnosis)
round(prop.table(t.diagnosis)*100, 2)

  
# graph without id linked
ggplot(diagnosis_data_mbp, aes(x=diagnosis_data_mbp$diagnosis, fill=diagnosis_data_mbp$diagnosis)) + 
geom_bar() + # add a title
    xlab('Diagnosis group') + ylab('Number of patients') + # add axis names
      scale_y_continuous(expand = c(0, 0), limits = c(0, 250)) +
theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'), axis.text.x=element_text(angle=45, hjust=1), legend.position="none", text = element_text(size = 14)) +
scale_fill_manual(breaks = c("Airway", "Cardiovascular", "Endocrine", "Gastroenterology", "Haematology/oncology", "Musculoskeletal", "Neurology/neurosurgery", "Other", "Renal", "Respiratory", "Sepsis"),
                        values=c("lightblue1", "lightskyblue1", "skyblue1", "skyblue2", "steelblue1", "steelblue3", "steelblue", "royalblue1", "royalblue3", "mediumblue", "royalblue4", "navy"))

###################################
####gestation
##########################################

full_longterm <- xap.read_table("full_longterm")
str(full_longterm)

mbp_longterm1 <-inner_join(full_longterm, mbpgroup1, by="project_id")
str(mbp_longterm1)

table(mbp_longterm1$gest_group)

###########################################################
###explore AE vs no AE
########################################################

####################
# explore gender 
######################

t.gender <- table(demographic_data_mbp$sex , demographic_data_mbp$mbp_ae)

addmargins(t.gender)
round(prop.table(t.gender)*100, 2) #to give percentage

###stats difference

chisq <- chisq.test( demographic_data_mbp$sex ,demographic_data_mbp$mbp_ae)
chisq

##################
##weight
##################

hist(weight_mbp$weight)

###stats diff

mbpmedian_weight <- weight_mbp %>% 
group_by(mbp_ae) %>% 
  summarize(median = median(weight))
  
mbpweight_quant <- weight_mbp %>% 
group_by(mbp_ae) %>%  summarise(weight = quantile(weight, c(0.25, 0.5, 0.75)))  
            
wilcox.test(weight_mbp$weight ~ weight_mbp$mbp_ae)

###############
##age
###############

mbpmedian_age <- age_data_mbp %>%
group_by(mbp_ae) %>% summarize(median = median(age_in_months))
  
mbpage_quant <- age_data_mbp %>% 
group_by(mbp_ae) %>%  summarise(age_in_months = quantile(age_in_months, c(0.25, 0.5, 0.75)))  
            

wilcox.test(age_data_mbp$age_in_months ~ age_data_mbp$mbp_ae)

#########################
####admission type
#########################

t.admission <- table(type_mbp$admission.type, type_mbp$mbp_ae)
t.admission

chisq <- chisq.test(type_mbp$admission.type, type_mbp$mbp_ae)
chisq

###################################
####diagnosis
######################################

t.diag <- table(diagnosis_data_mbp$diagnosis, diagnosis_data_mbp$mbp_ae)
t.diag

fisher.test(diagnosis_data_mbp$diagnosis, diagnosis_data_mbp$mbp_ae)

str(diagnosis_data_mbp)

names(diagnosis_data_mbp)[names(diagnosis_data_mbp) == 'diagnosis'] <- 'Diagnosis'

diagnosis_data_mbp$AE <- ifelse(diagnosis_data_mbp$mbp_ae == "Yes", "Adverse event group", "No adverse event group")

####change to 

ggplot(diagnosis_data_mbp, aes(x=AE, fill=Diagnosis)) + 
    geom_bar(stat="count", position="fill") +
    scale_y_continuous(labels=scales::percent, expand = c(0, 0))+
   ylab("Percentage of patients") + xlab(NULL) +
 scale_fill_manual(breaks = c("Airway", "Cardiovascular", "Endocrine", "Gastroenterology", "Haematology/oncology", "Musculoskeletal", "Neurology/neurosurgery", "Other", "Renal", "Respiratory", "Sepsis"),
                        values=c("lightblue1", "lightskyblue1", "skyblue1", "skyblue2", "steelblue1", "steelblue3", "steelblue", "royalblue1", "royalblue3", "mediumblue", "royalblue4", "navy"))

###########################
####pelod
##############################

mbpmedian_pelod <- pelod_mbp %>% 
group_by(mbp_ae) %>% 
  summarize(median = median(pelod_score))
            
mbppelod_quant <- pelod_mbp %>% 
group_by(mbp_ae) %>%  summarise(pelod_score = quantile(pelod_score, c(0.25, 0.5, 0.75)))  

wilcox.test(pelod_mbp$pelod_score ~ pelod_mbp$mbp_ae)

###########################
####covid
###########################
table(covid_positive$covid, covid_positive$mbp_ae)

########################################
## iNO
#########################################

####use vent_first and join to mbp

vent_mbp <- inner_join(vent_first, mbpgroup1, by="project_id")
str(vent_mbp)

t.iNO_mbp <- table(vent_mbp$iNO, vent_mbp$mbp_ae)
t.iNO_mbp

fisher.test(vent_mbp$iNO, vent_mbp$mbp_ae)

#################hfov

t.vent_mbp <- table(vent_mbp$ventmode, vent_mbp$mbp_ae)
t.vent_mbp

fisher.test(vent_mbp$ventmode, vent_mbp$mbp_ae)

###################################
###time of day
#####################################

str(physio_first)

physio_first1 <- physio_first %>% 
  mutate(hour = hour(physio_first$datetime), 
         Physio_time = case_when(hour %in% 9:16 ~ "day",                           
            TRUE ~ "Oncall"))
            
str(physio_first1)

#####join session times to osi group

times_mbp <- inner_join(physio_first1, mbpgroup1, by="project_id")
str(times_mbp)

####explore time

t.mbp_time <- table(times_mbp$Physio_time, times_mbp$mbp_ae)

fisher.test(times_mbp$Physio_time, times_mbp$mbp_ae)

########################
###gestation
#################

t.gest <-table(mbp_longterm1$gest_group, mbp_longterm1$mbp_ae)
t.gest
fisher.test(mbp_longterm1$gest_group, mbp_longterm1$mbp_ae)







################################Script 19 – Mean arterial blood pressure physiotherapy treatment exploration################################################


##############################
# load in physio session data
##############################

##load in part 1
physio_details01 <- xap.read_table("complete01_wp2_physio_details_check")

str(physio_details01)

physio_details01[c(3,4,6,9,10)] <- lapply(physio_details01[c(3,4,6,9,10)], as.integer)
str(physio_details01)


##load in part 2
physio_details02 <- xap.read_table("complete02_wp2_physio_details_check")

str(physio_details02)

physio_details02[c(3,4,6,9,10)] <- lapply(physio_details02[c(3,4,6,9,10)], as.integer)
str(physio_details02)

##load in partial
physio_details_partial <- xap.read_table("partial_wp2_physio_details_check")

str(physio_details_partial)

physio_details_partial[c(3,4,6,9,10)] <- lapply(physio_details_partial[c(3,4,6,9,10)], as.integer)
str(physio_details_partial)

#############################
##join complete data sets
#############################

physiosessions_dataa <- rbind(physio_details01, physio_details02)
physiosessions_data <- rbind(physiosessions_dataa, physio_details_partial)
str(physiosessions_data)
tail(physiosessions_data)

###################################
###bring in mbp group
#####################################

mbpgroup <- xap.read_table("mbp_1_1")
str(mbpgroup)

##get rid of id column
mbpgroup1 <- select(mbpgroup, project_id, mbp_ae)
str(mbpgroup1)

################################################
###### prepare data to explore physio treatments
################################################

str(physio_times_first)

##load in data set 1

treatment01_data <- xap.read_table("complete01_caboodle_patient_selected_flowsheetrows_phys_pivot")
str(treatment01_data)  

##load in data set 2

treatment02_data <- xap.read_table("complete02_caboodle_patient_selected_flowsheetrows_phys_pivot")
str(treatment02_data)  

##load in partial
treatment_p <- xap.read_table("partial_caboodle_patient_selected_flowsheetrows_phys_pivot")
str(treatment_p)  

##combine data sets

treatment_dataa <- rbind(treatment01_data, treatment02_data)
treatment_data <-rbind(treatment_dataa, treatment_p)
str(treatment_data)

unique(treatment_data$project_id)

######################
#manipulate variables
######################

# combine 2 same suction variables

treatment_data <- treatment_data %>% 
mutate(suctiontype = coalesce(treatment_data$RETIRED.R.AIRWAY.SUCTION.TYPE.OLD, treatment_data$R.GOSH.AIRWAY.SUCTION.TYPE))

str(treatment_data)  
head(treatment_data)

## select only columns need

treatment_data1 <- select(treatment_data, project_id, taken_datetime, R.AIRWAY.SUCTION.TOLERANCE, R.AIRWAY.SUCTION.DEVICE,  R.GOSH.IP.PHSYIO.VIBRATION, R.GOSH.IP.PHYSIO.DECOMPRESSION, 
                            R.GOSH.IP.SALINE.INSTILLATION, R.GOSH.IP.PHYSIO.BAG, R.GOSH.IP.PHYSIO.CHEST.PERCUSSION, R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION, suctiontype)

str(treatment_data1)

######################################################################
## join data frames for times and keep treatments with closest time
######################################################################

physio_data <- left_join(physio_times,treatment_data1 , by = "project_id") 

str(physio_data)
head(physio_data)

unique(physio_data$project_id)


physio_data1 <- physio_data %>%
  mutate(dateDiff = abs(physio_data$datetime - physio_data$taken_date)) %>%
  group_by(project_id, physio_data$datetime) %>%
  filter(dateDiff == 0)

str(physio_data1)
head(physio_data1)
tail(physio_data1)

physio_data1 <- physio_data1 %>%
    ungroup()
str(physio_data1)

range(physio_data1$dateDiff)

unique(physio_data1$R.GOSH.IP.SALINE.INSTILLATION)


str(physio_data1)
###########################################
############################################
### describe physio sessions
############################################
###########################################

###explore saline

t.saline <- table(physio_data1$R.GOSH.IP.SALINE.INSTILLATION)
addmargins(t.saline)
round(prop.table(t.saline)*100, 2)


# change variables into yes no and remove NA

physio_data1$R.GOSH.IP.PHYSIO.BAG <- ifelse(physio_data1$R.GOSH.IP.PHYSIO.BAG== "No",0 , 1)
physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION <- ifelse(physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION== "No",0,1)
physio_data1$R.GOSH.IP.PHSYIO.VIBRATION <- ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=="No", 0, 1)
physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION <- ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=="No", 0, 1)
physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION <-ifelse(physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION=="No", 0, 1)
physio_data1$R.GOSH.IP.SALINE.INSTILLATION <- ifelse(physio_data1$R.GOSH.IP.SALINE.INSTILLATION=="No", 0, 1)

physio_data1 <- mutate_if(physio_data1, is.numeric, ~replace(., is.na(.), 0))

physio_data1$R.GOSH.IP.PHYSIO.BAG <- ifelse(physio_data1$R.GOSH.IP.PHYSIO.BAG== "0",'No' , 'Yes')
physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION <- ifelse(physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION== "0",'No','Yes')
physio_data1$R.GOSH.IP.PHSYIO.VIBRATION <- ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=="0", 'No', 'Yes')
physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION <- ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=="0", 'No', 'Yes')
physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION <-ifelse(physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION=="0", 'No', 'Yes')
physio_data1$R.GOSH.IP.SALINE.INSTILLATION <- ifelse(physio_data1$R.GOSH.IP.SALINE.INSTILLATION=="0", 'No', 'Yes')

str(physio_data1)

is.na(physio_data1)

#########################################################
## explore suction in more detail just get open vs closed
#########################################################


unique(physio_data1$suctiontype)

physio_data1 <- physio_data1 %>%  
mutate(suctionopen = ifelse(physio_data1$suctiontype == 'Endotracheal Tube - Open' | physio_data1$suctiontype == 'Endotracheal Tube - Open;Nasal' | physio_data1$suctiontype == 'Endotracheal Tube - Open;Nasal;Oral' | physio_data1$suctiontype == 'Endotracheal Tube - Open;Nasopharyngeal' | physio_data1$suctiontype == 'Endotracheal Tube - Open;Nasopharyngeal;Oral' | physio_data1$suctiontype == 'Endotracheal Tube - Open;NPA' | physio_data1$suctiontype == 'Endotracheal Tube - Open;Oral' | physio_data1$suctiontype == 'Endotracheal Tube - Open;Oral;Nasal' | physio_data1$suctiontype == 'Endotracheal Tube - Open;Oral;Nasopharyngeal' | physio_data1$suctiontype == 'Endotracheal Tube - Open;Other (Comment)' | physio_data1$suctiontype == 'Oral;Endotracheal Tube - Open' | physio_data1$suctiontype == 'Oral;Nasal Prong;Endotracheal Tube - Open' | physio_data1$suctiontype == 'Oral;Nasal;Endotracheal Tube - Open', "Yes", "No"),
      suctionclosed = ifelse(physio_data1$suctiontype == 'Endotracheal Tube - Closed' | physio_data1$suctiontype == 'Endotracheal Tube - Closed;Oral' | physio_data1$suctiontype == 'Endotracheal Tube - Closed;Oral;Nasal', "Yes", "No"),
      both = ifelse(physio_data1$suctiontype == 'Endotracheal Tube - Closed;Endotracheal Tube - Open' | physio_data1$suctiontype == 'Endotracheal Tube - Closed;Endotracheal Tube - Open;Oral' | physio_data1$suctiontype == 'Endotracheal Tube - Closed;Endotracheal Tube - Open;Oral;Nasal' | physio_data1$suctiontype == 'Endotracheal Tube - Open;Endotracheal Tube - Closed' | physio_data1$suctiontype == 'Oral;Nasal;Endotracheal Tube - Open;Endotracheal Tube - Closed', "Yes", "No"),
      unknown = ifelse(physio_data1$suctiontype == 'Nasal' | physio_data1$suctiontype == 'Nasal Prong' | physio_data1$suctiontype == 'Trache'| physio_data1$suctiontype == 'NA', "Yes","No"))
        
str(physio_data1)

##create one suction variable

physio_data1$suctionopen <- ifelse(physio_data1$suctionopen == 'Yes', "Open", NA)
physio_data1$suctionclosed <- ifelse(physio_data1$suctionclosed == 'Yes', "Closed", NA)
physio_data1$both <- ifelse(physio_data1$both == 'Yes', "Both", NA)
physio_data1$unknown <- ifelse(physio_data1$unknown == 'Yes', "Unknown", NA)


physio_data1 <- physio_data1 %>%
  unite("Suction", suctionopen:unknown, na.rm = TRUE)

str(physio_data1)
unique(physio_data1$Suction)

t.suction <- table(physio_data1$Suction)
addmargins(t.suction)
round(prop.table(t.suction)*100, 2)

################################################
##create variable for MHI and CWV
#################################################

physio_data1$MHIvibs <- ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'Yes', "Yes", "No")

str(physio_data1)

physio_data1$MHICWV <- ifelse(physio_data1$R.GOSH.IP.PHYSIO.BAG == 'Yes' | physio_data1$MHIvibs == 'Yes', "Yes", "No")

str(physio_data1)

physio_data1[50:100,]
####################################################################
# create new combination of treatment variables with out suction
####################################################################

physio_data_comb1 <- physio_data1 %>%    
    mutate(saline.MHICWV.perc.decomp= ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$MHICWV == 'Yes', "saline.MHICWV.perc.decomp", NA),
           saline.MHICWV.perc= ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes'& physio_data1$MHICWV == 'Yes', "saline.MHICWV.perc", NA),
           saline.MHICWV.decomp= ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$MHICWV == 'Yes', "saline.MHICWV.decomp", NA),
            saline.MHICWV= ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$MHICWV == 'Yes', "saline.MHICWV", NA),
            saline.vibs.perc.decomp= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "saline.vibs.perc.deomp", NA),
            saline.vibs.perc= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "saline.vibs.perc", NA),
            saline.vibs= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "saline.vibs", NA),
            saline.perc.decomp= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "saline.perc.decomp", NA),
            saline.perc= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "saline.perc", NA),
            saline.decomp= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "saline.decomp", NA),
            saline.MHI.perc.decomp= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'Yes' & physio_data1$MHICWV == 'No', "saline.MHI.perc.decomp", NA),
            saline.MHI.perc= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'Yes' & physio_data1$MHICWV == 'No', "saline.MHI.perc", NA),
            saline.MHI.decomp= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'Yes' & physio_data1$MHICWV == 'No', "saline.MHI.decomp", NA),
            saline.MHI= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'Yes' & physio_data1$MHICWV == 'No', "saline.MHI", NA),
            MHICWV.perc.decomp= ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$MHICWV == 'Yes', "MHICWV.perc.decomp", NA),
            MHICWV.perc= ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$MHICWV == 'Yes', "MHICWV.perc", NA),
            MHICWV.decomp= ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' &  physio_data1$MHICWV == 'Yes', "MHICWV.decomp", NA),
            vibs.perc.decomp= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "vibs.perc.decomp", NA),
            vibs.perc= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "vibs.perc", NA),
            vibs.decomp= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "vibs.decomp", NA),
            MHI.perc.decomp= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'Yes' & physio_data1$MHICWV == 'No', "MHI.perc.decomp", NA),
            MHI.perc= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'Yes' & physio_data1$MHICWV == 'No', "MHI.perc", NA),
            MHI.decomp= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'Yes' & physio_data1$MHICWV == 'No', "MHI.decomp", NA),
            MHIonly= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'Yes' & physio_data1$MHICWV == 'No', "MHIonly", NA),
            CWVonly= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "CWVonly", NA),
            MHI.CWV= ifelse(physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$MHICWV == 'Yes', "MHICWV", NA),
            perconly= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "perconly", NA),
            decomponly= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='Yes' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "decomponly", NA),
            salineonly= ifelse(physio_data1$R.GOSH.IP.PHSYIO.VIBRATION=='No' & physio_data1$R.GOSH.IP.PHYSIO.DECOMPRESSION=='No' & physio_data1$R.GOSH.IP.SALINE.INSTILLATION=='Yes' & physio_data1$R.GOSH.IP.PHYSIO.CHEST.PERCUSSION=='No' & physio_data1$R.GOSH.IP.PHYSIO.MAN.HYPERINFLATION== 'No' & physio_data1$MHICWV == 'No', "salineonly", NA))
         
str(physio_data_comb1)

# need to merge the columns to creat one treatment variable

physio_data_comb2 <- physio_data_comb1 %>%
  unite("Treatment", saline.MHICWV.perc.decomp:salineonly, na.rm = TRUE)
  
str(physio_data_comb2)  

##save as CSV

write.csv(physio_data_comb2, "~/files/datafiles/CPTall.csv")
unique(physio_data_comb2$Treatment)

##change "" to NA

physio_data_comb2$Treatment[physio_data_comb2$Treatment==""]<-NA
unique(physio_data_comb2$Treatment)

t.Treatment <- table(physio_data_comb2$Treatment)
addmargins(t.Treatment)
round(prop.table(t.Treatment)*100, 2)

####create suction only column
str(physio_data_comb2) 

physio_data_comb2$Treatment[is.na(physio_data_comb2$Treatment)] <- 'unknown'

t.Treatment <- table(physio_data_comb2$Treatment)
addmargins(t.Treatment)
round(prop.table(t.Treatment)*100, 2)

physio_data_comb2$suctioned <- ifelse(physio_data_comb2$Suction == 'Open' | physio_data_comb2$Suction =='Closed'|physio_data_comb2$Suction == 'Both', 'Yes', 'No')
physio_data_comb2$suctiononly <- ifelse(physio_data_comb2$Treatment == 'unknown' & physio_data_comb2$suctioned == 'Yes', 'suctiononly', NA)

t.suctiononly <- table(physio_data_comb2$suctiononly)

###change unknown treatment back to NA

physio_data_comb2$Treatment[physio_data_comb2$Treatment=="unknown"]<- NA

unique(physio_data_comb2$Treatment)

####join suctiononly to treatment

##remove suctioned column
physio_data_comb2a <-subset(physio_data_comb2, select = -suctioned)

str(physio_data_comb2a)

physio_data_comb3 <- physio_data_comb2a %>%
  unite("Treatmentnew", Treatment:suctiononly, na.rm = TRUE)
  
str(physio_data_comb3)  
unique(physio_data_comb3$Treatmentnew)

physio_data_comb3$Treatmentnew[physio_data_comb3$Treatmentnew==""]<-NA
unique(physio_data_comb3$Treatmentnew)

t.Treatmentnew <- table(physio_data_comb3$Treatmentnew)
addmargins(t.Treatmentnew)
round(prop.table(t.Treatmentnew)*100, 2)

####subset for day 1 session1

physio_data_comb1_1 <- subset(physio_data_comb3, day == 1 & session == 1)
str(physio_data_comb1_1)

###join to mbp data

physio_mbp <- inner_join(physio_data_comb1_1, mbpgroup1, by="project_id")
str(physio_mbp)
unique(physio_mbp$project_id)

t.physio <- table(physio_mbp$Treatmentnew, physio_mbp$mbp_ae)
t.physio
fisher.test(physio_mbp$Treatmentnew, physio_mbp$mbp_ae)










